{
  "version": 3,
  "sources": ["../node_modules/data-uri-to-buffer/src/index.ts", "../node_modules/web-streams-polyfill/src/stub/symbol.ts", "../node_modules/web-streams-polyfill/src/utils.ts", "../node_modules/web-streams-polyfill/src/lib/helpers/miscellaneous.ts", "../node_modules/web-streams-polyfill/src/lib/helpers/webidl.ts", "../node_modules/web-streams-polyfill/src/lib/simple-queue.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/generic-reader.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/internal-methods.ts", "../node_modules/web-streams-polyfill/src/stub/number-isfinite.ts", "../node_modules/web-streams-polyfill/src/stub/math-trunc.ts", "../node_modules/web-streams-polyfill/src/lib/validators/basic.ts", "../node_modules/web-streams-polyfill/src/lib/validators/readable-stream.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/default-reader.ts", "../node_modules/web-streams-polyfill/src/target/es2018/stub/async-iterator-prototype.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/async-iterator.ts", "../node_modules/web-streams-polyfill/src/stub/number-isnan.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/ecmascript.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/miscellaneous.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/queue-with-sizes.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/byte-stream-controller.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/byob-reader.ts", "../node_modules/web-streams-polyfill/src/lib/abstract-ops/queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/validators/underlying-sink.ts", "../node_modules/web-streams-polyfill/src/lib/validators/writable-stream.ts", "../node_modules/web-streams-polyfill/src/lib/abort-signal.ts", "../node_modules/web-streams-polyfill/src/lib/writable-stream.ts", "../node_modules/web-streams-polyfill/src/stub/native.ts", "../node_modules/web-streams-polyfill/src/stub/dom-exception.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/pipe.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/default-controller.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream/tee.ts", "../node_modules/web-streams-polyfill/src/lib/validators/underlying-source.ts", "../node_modules/web-streams-polyfill/src/lib/validators/reader-options.ts", "../node_modules/web-streams-polyfill/src/lib/validators/iterator-options.ts", "../node_modules/web-streams-polyfill/src/lib/validators/pipe-options.ts", "../node_modules/web-streams-polyfill/src/lib/validators/readable-writable-pair.ts", "../node_modules/web-streams-polyfill/src/lib/readable-stream.ts", "../node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy-init.ts", "../node_modules/web-streams-polyfill/src/lib/byte-length-queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/count-queuing-strategy.ts", "../node_modules/web-streams-polyfill/src/lib/validators/transformer.ts", "../node_modules/web-streams-polyfill/src/lib/transform-stream.ts", "../node_modules/fetch-blob/streams.cjs", "../node_modules/twitter-api-v2/dist/cjs/globals.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/TwitterPaginator.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/dm.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/streaming.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/tweet.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/entities.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/user.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/dev-utilities.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/geo.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/trends.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/dm.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/list.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/index.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/streaming.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/tweet.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/tweet.definition.v2.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/user.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/spaces.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/list.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/index.js", "../node_modules/twitter-api-v2/dist/cjs/types/errors.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/responses.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/client.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/auth.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/plugins/client.plugins.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/plugins/index.js", "../node_modules/twitter-api-v2/dist/cjs/types/index.js", "../node_modules/twitter-api-v2/dist/cjs/settings.js", "../node_modules/twitter-api-v2/dist/cjs/helpers.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/request-handler.helper.js", "../node_modules/twitter-api-v2/dist/cjs/stream/TweetStreamEventCombiner.js", "../node_modules/twitter-api-v2/dist/cjs/stream/TweetStreamParser.js", "../node_modules/twitter-api-v2/dist/cjs/stream/TweetStream.js", "../node_modules/twitter-api-v2/dist/cjs/plugins/helpers.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/oauth1.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/form-data.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/request-param.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/oauth2.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/request-maker.mixin.js", "../node_modules/twitter-api-v2/dist/cjs/client.base.js", "../node_modules/twitter-api-v2/dist/cjs/client.subclient.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/tweet.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/mutes.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/followers.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/friends.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/user.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/list.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/v1/client.v1.read.js", "../node_modules/twitter-api-v2/dist/cjs/v1/media-helpers.v1.js", "../node_modules/twitter-api-v2/dist/cjs/v1/client.v1.write.js", "../node_modules/twitter-api-v2/dist/cjs/v1/client.v1.js", "../node_modules/twitter-api-v2/dist/cjs/v2/includes.v2.helper.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/v2.paginator.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/tweet.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/user.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/list.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/index.js", "../node_modules/twitter-api-v2/dist/cjs/v2-labs/client.v2.labs.read.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/dm.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/v2/client.v2.read.js", "../node_modules/twitter-api-v2/dist/cjs/v2-labs/client.v2.labs.write.js", "../node_modules/twitter-api-v2/dist/cjs/v2/client.v2.write.js", "../node_modules/twitter-api-v2/dist/cjs/v2-labs/client.v2.labs.js", "../node_modules/twitter-api-v2/dist/cjs/v2/client.v2.js", "../node_modules/twitter-api-v2/dist/cjs/client/readonly.js", "../node_modules/twitter-api-v2/dist/cjs/client/readwrite.js", "../node_modules/twitter-api-v2/dist/cjs/client/index.js", "../node_modules/twitter-api-v2/dist/cjs/index.js", "../src/send.tsx", "../src/common.ts", "../src/v2/lib/oauth.ts", "../node_modules/node-fetch/src/index.js", "../node_modules/node-fetch/src/body.js", "../node_modules/fetch-blob/index.js", "../node_modules/node-fetch/src/errors/base.js", "../node_modules/node-fetch/src/errors/fetch-error.js", "../node_modules/node-fetch/src/utils/form-data.js", "../node_modules/node-fetch/src/utils/is.js", "../node_modules/node-fetch/src/headers.js", "../node_modules/node-fetch/src/utils/is-redirect.js", "../node_modules/node-fetch/src/response.js", "../node_modules/node-fetch/src/request.js", "../node_modules/node-fetch/src/utils/get-search.js", "../node_modules/node-fetch/src/errors/abort-error.js", "../src/icon.ts", "../src/v1/components/send.tsx", "../src/v1/lib/twitterapi.ts", "../src/utils.ts", "../src/v2/components/send.tsx", "../src/v2/lib/twitterapi_v2.ts"],
  "sourcesContent": [null, "/// <reference lib=\"es2015.symbol\" />\n\nconst SymbolPolyfill: (description?: string) => symbol =\n  typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n    Symbol :\n    description => `Symbol(${description})` as any as symbol;\n\nexport default SymbolPolyfill;\n", "/// <reference lib=\"dom\" />\n\nexport function noop(): undefined {\n  return undefined;\n}\n\nfunction getGlobals() {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n", "import { noop } from '../../utils';\nimport { AssertionError } from '../../stub/assert';\n\nexport function typeIsObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport const rethrowAssertionErrorRejection: (e: any) => void =\n  DEBUG ? e => {\n    // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n    // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n    // expect any errors, but assertion errors are always problematic.\n    if (e && e instanceof AssertionError) {\n      setTimeout(() => {\n        throw e;\n      }, 0);\n    }\n  } : noop;\n", "import { globals } from '../../utils';\nimport { rethrowAssertionErrorRejection } from './miscellaneous';\nimport assert from '../../stub/assert';\n\nconst originalPromise = Promise;\nconst originalPromiseThen = Promise.prototype.then;\nconst originalPromiseResolve = Promise.resolve.bind(originalPromise);\nconst originalPromiseReject = Promise.reject.bind(originalPromise);\n\nexport function newPromise<T>(executor: (\n  resolve: (value: T | PromiseLike<T>) => void,\n  reject: (reason?: any) => void\n) => void): Promise<T> {\n  return new originalPromise(executor);\n}\n\nexport function promiseResolvedWith<T>(value: T | PromiseLike<T>): Promise<T> {\n  return originalPromiseResolve(value);\n}\n\nexport function promiseRejectedWith<T = never>(reason: any): Promise<T> {\n  return originalPromiseReject(reason);\n}\n\nexport function PerformPromiseThen<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  onRejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n  // approximation.\n  return originalPromiseThen.call(promise, onFulfilled, onRejected) as Promise<TResult1 | TResult2>;\n}\n\nexport function uponPromise<T>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => void | PromiseLike<void>,\n  onRejected?: (reason: any) => void | PromiseLike<void>): void {\n  PerformPromiseThen(\n    PerformPromiseThen(promise, onFulfilled, onRejected),\n    undefined,\n    rethrowAssertionErrorRejection\n  );\n}\n\nexport function uponFulfillment<T>(promise: Promise<T>, onFulfilled: (value: T) => void | PromiseLike<void>): void {\n  uponPromise(promise, onFulfilled);\n}\n\nexport function uponRejection(promise: Promise<unknown>, onRejected: (reason: any) => void | PromiseLike<void>): void {\n  uponPromise(promise, undefined, onRejected);\n}\n\nexport function transformPromiseWith<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  fulfillmentHandler?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  rejectionHandler?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\n\nexport function setPromiseIsHandledToTrue(promise: Promise<unknown>): void {\n  PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\n\nexport const queueMicrotask: (fn: () => void) => void = (() => {\n  const globalQueueMicrotask = globals && globals.queueMicrotask;\n  if (typeof globalQueueMicrotask === 'function') {\n    return globalQueueMicrotask;\n  }\n\n  const resolvedPromise = promiseResolvedWith(undefined);\n  return (fn: () => void) => PerformPromiseThen(resolvedPromise, fn);\n})();\n\nexport function reflectCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R, V: T, args: A): R {\n  if (typeof F !== 'function') {\n    throw new TypeError('Argument is not a function');\n  }\n  return Function.prototype.apply.call(F, V, args);\n}\n\nexport function promiseCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R | PromiseLike<R>,\n                                                   V: T,\n                                                   args: A): Promise<R> {\n  assert(typeof F === 'function');\n  assert(V !== undefined);\n  assert(Array.isArray(args));\n  try {\n    return promiseResolvedWith(reflectCall(F, V, args));\n  } catch (value) {\n    return promiseRejectedWith(value);\n  }\n}\n", "import assert from '../stub/assert';\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\nconst QUEUE_MAX_ARRAY_SIZE = 16384;\n\ninterface Node<T> {\n  _elements: T[];\n  _next: Node<T> | undefined;\n}\n\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nexport class SimpleQueue<T> {\n  private _front: Node<T>;\n  private _back: Node<T>;\n  private _cursor = 0;\n  private _size = 0;\n\n  constructor() {\n    // _front and _back are always defined.\n    this._front = {\n      _elements: [],\n      _next: undefined\n    };\n    this._back = this._front;\n    // The cursor is used to avoid calling Array.shift().\n    // It contains the index of the front element of the array inside the\n    // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n    this._cursor = 0;\n    // When there is only one node, size === elements.length - cursor.\n    this._size = 0;\n  }\n\n  get length(): number {\n    return this._size;\n  }\n\n  // For exception safety, this method is structured in order:\n  // 1. Read state\n  // 2. Calculate required state mutations\n  // 3. Perform state mutations\n  push(element: T): void {\n    const oldBack = this._back;\n    let newBack = oldBack;\n    assert(oldBack._next === undefined);\n    if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n      newBack = {\n        _elements: [],\n        _next: undefined\n      };\n    }\n\n    // push() is the mutation most likely to throw an exception, so it\n    // goes first.\n    oldBack._elements.push(element);\n    if (newBack !== oldBack) {\n      this._back = newBack;\n      oldBack._next = newBack;\n    }\n    ++this._size;\n  }\n\n  // Like push(), shift() follows the read -> calculate -> mutate pattern for\n  // exception safety.\n  shift(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const oldFront = this._front;\n    let newFront = oldFront;\n    const oldCursor = this._cursor;\n    let newCursor = oldCursor + 1;\n\n    const elements = oldFront._elements;\n    const element = elements[oldCursor];\n\n    if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n      assert(elements.length === QUEUE_MAX_ARRAY_SIZE);\n      assert(oldFront._next !== undefined);\n      newFront = oldFront._next!;\n      newCursor = 0;\n    }\n\n    // No mutations before this point.\n    --this._size;\n    this._cursor = newCursor;\n    if (oldFront !== newFront) {\n      this._front = newFront;\n    }\n\n    // Permit shifted element to be garbage collected.\n    elements[oldCursor] = undefined!;\n\n    return element;\n  }\n\n  // The tricky thing about forEach() is that it can be called\n  // re-entrantly. The queue may be mutated inside the callback. It is easy to\n  // see that push() within the callback has no negative effects since the end\n  // of the queue is checked for on every iteration. If shift() is called\n  // repeatedly within the callback then the next iteration may return an\n  // element that has been removed. In this case the callback will be called\n  // with undefined values until we either \"catch up\" with elements that still\n  // exist or reach the back of the queue.\n  forEach(callback: (element: T) => void): void {\n    let i = this._cursor;\n    let node = this._front;\n    let elements = node._elements;\n    while (i !== elements.length || node._next !== undefined) {\n      if (i === elements.length) {\n        assert(node._next !== undefined);\n        assert(i === QUEUE_MAX_ARRAY_SIZE);\n        node = node._next!;\n        elements = node._elements;\n        i = 0;\n        if (elements.length === 0) {\n          break;\n        }\n      }\n      callback(elements[i]);\n      ++i;\n    }\n  }\n\n  // Return the element that would be returned if shift() was called now,\n  // without modifying the queue.\n  peek(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const front = this._front;\n    const cursor = this._cursor;\n    return front._elements[cursor];\n  }\n}\n", "import assert from '../../stub/assert';\nimport { ReadableStream, ReadableStreamCancel, ReadableStreamReader } from '../readable-stream';\nimport { newPromise, setPromiseIsHandledToTrue } from '../helpers/webidl';\n\nexport function ReadableStreamReaderGenericInitialize<R>(reader: ReadableStreamReader<R>, stream: ReadableStream<R>) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nexport function ReadableStreamReaderGenericCancel(reader: ReadableStreamReader<any>, reason: any): Promise<undefined> {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nexport function ReadableStreamReaderGenericRelease(reader: ReadableStreamReader<any>) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  }\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined!;\n}\n\n// Helper functions for the readers.\n\nexport function readerLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nexport function defaultReaderClosedPromiseInitialize(reader: ReadableStreamReader<any>) {\n  reader._closedPromise = newPromise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nexport function defaultReaderClosedPromiseInitializeAsRejected(reader: ReadableStreamReader<any>, reason: any) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseReject(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseInitializeAsResolved(reader: ReadableStreamReader<any>) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseResolve(reader);\n}\n\nexport function defaultReaderClosedPromiseReject(reader: ReadableStreamReader<any>, reason: any) {\n  if (reader._closedPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(reader._closedPromise);\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nexport function defaultReaderClosedPromiseResetToRejected(reader: ReadableStreamReader<any>, reason: any) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseResolve(reader: ReadableStreamReader<any>) {\n  if (reader._closedPromise_resolve === undefined) {\n    return;\n  }\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n", "export const AbortSteps = Symbol('[[AbortSteps]]');\nexport const ErrorSteps = Symbol('[[ErrorSteps]]');\nexport const CancelSteps = Symbol('[[CancelSteps]]');\nexport const PullSteps = Symbol('[[PullSteps]]');\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nconst NumberIsFinite: typeof Number.isFinite = Number.isFinite || function (x) {\n  return typeof x === 'number' && isFinite(x);\n};\n\nexport default NumberIsFinite;\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nconst MathTrunc: typeof Math.trunc = Math.trunc || function (v) {\n  return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\nexport default MathTrunc;\n", "import NumberIsFinite from '../../stub/number-isfinite';\nimport MathTrunc from '../../stub/math-trunc';\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nexport function isDictionary(x: any): x is object | null {\n  return typeof x === 'object' || typeof x === 'function';\n}\n\nexport function assertDictionary(obj: unknown,\n                                 context: string): asserts obj is object | null | undefined {\n  if (obj !== undefined && !isDictionary(obj)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport type AnyFunction = (...args: any[]) => any;\n\n// https://heycam.github.io/webidl/#idl-callback-functions\nexport function assertFunction(x: unknown, context: string): asserts x is AnyFunction {\n  if (typeof x !== 'function') {\n    throw new TypeError(`${context} is not a function.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-object\nexport function isObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport function assertObject(x: unknown,\n                             context: string): asserts x is object {\n  if (!isObject(x)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport function assertRequiredArgument<T extends any>(x: T | undefined,\n                                                      position: number,\n                                                      context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n  }\n}\n\nexport function assertRequiredField<T extends any>(x: T | undefined,\n                                                   field: string,\n                                                   context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`${field} is required in '${context}'.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nexport function convertUnrestrictedDouble(value: unknown): number {\n  return Number(value);\n}\n\nfunction censorNegativeZero(x: number): number {\n  return x === 0 ? 0 : x;\n}\n\nfunction integerPart(x: number): number {\n  return censorNegativeZero(MathTrunc(x));\n}\n\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nexport function convertUnsignedLongLongWithEnforceRange(value: unknown, context: string): number {\n  const lowerBound = 0;\n  const upperBound = Number.MAX_SAFE_INTEGER;\n\n  let x = Number(value);\n  x = censorNegativeZero(x);\n\n  if (!NumberIsFinite(x)) {\n    throw new TypeError(`${context} is not a finite number`);\n  }\n\n  x = integerPart(x);\n\n  if (x < lowerBound || x > upperBound) {\n    throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n  }\n\n  if (!NumberIsFinite(x) || x === 0) {\n    return 0;\n  }\n\n  // TODO Use BigInt if supported?\n  // let xBigInt = BigInt(integerPart(x));\n  // xBigInt = BigInt.asUintN(64, xBigInt);\n  // return Number(xBigInt);\n\n  return x;\n}\n", "import { IsReadableStream, ReadableStream } from '../readable-stream';\n\nexport function assertReadableStream(x: unknown, context: string): asserts x is ReadableStream {\n  if (!IsReadableStream(x)) {\n    throw new TypeError(`${context} is not a ReadableStream.`);\n  }\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableStream } from '../readable-stream';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { PullSteps } from '../abstract-ops/internal-methods';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\n\n/**\n * A result returned by {@link ReadableStreamDefaultReader.read}.\n *\n * @public\n */\nexport type ReadableStreamDefaultReadResult<T> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value?: undefined;\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamDefaultReader<R>(stream: ReadableStream): ReadableStreamDefaultReader<R> {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadRequest<R>(stream: ReadableStream<R>,\n                                                readRequest: ReadRequest<R>): void {\n  assert(IsReadableStreamDefaultReader(stream._reader));\n  assert(stream._state === 'readable');\n\n  (stream._reader! as ReadableStreamDefaultReader<R>)._readRequests.push(readRequest);\n}\n\nexport function ReadableStreamFulfillReadRequest<R>(stream: ReadableStream<R>, chunk: R | undefined, done: boolean) {\n  const reader = stream._reader as ReadableStreamDefaultReader<R>;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift()!;\n  if (done) {\n    readRequest._closeSteps();\n  } else {\n    readRequest._chunkSteps(chunk!);\n  }\n}\n\nexport function ReadableStreamGetNumReadRequests<R>(stream: ReadableStream<R>): number {\n  return (stream._reader as ReadableStreamDefaultReader<R>)._readRequests.length;\n}\n\nexport function ReadableStreamHasDefaultReader(stream: ReadableStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamDefaultReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadRequest<R> {\n  _chunkSteps(chunk: R): void;\n\n  _closeSteps(): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamDefaultReader<R = any> {\n  /** @internal */\n  _ownerReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readRequests: SimpleQueue<ReadRequest<R>>;\n\n  constructor(stream: ReadableStream<R>) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed,\n   * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamDefaultReaderRead(this, readRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamDefaultReader(this)) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamDefaultReader<R = any>(x: any): x is ReadableStreamDefaultReader<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultReader;\n}\n\nexport function ReadableStreamDefaultReaderRead<R>(reader: ReadableStreamDefaultReader<R>,\n                                                   readRequest: ReadRequest<R>): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    readRequest._closeSteps();\n  } else if (stream._state === 'errored') {\n    readRequest._errorSteps(stream._storedError);\n  } else {\n    assert(stream._state === 'readable');\n    stream._readableStreamController[PullSteps](readRequest as ReadRequest<any>);\n  }\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n", "/// <reference lib=\"es2018.asynciterable\" />\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nexport const AsyncIteratorPrototype: AsyncIterable<any> | undefined =\n  Object.getPrototypeOf(Object.getPrototypeOf(async function* (): AsyncIterableIterator<any> {}).prototype);\n", "/// <reference lib=\"es2018.asynciterable\" />\n\nimport { ReadableStream } from '../readable-stream';\nimport {\n  AcquireReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadableStreamDefaultReadResult,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport assert from '../../stub/assert';\nimport { AsyncIteratorPrototype } from '@@target/stub/async-iterator-prototype';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  queueMicrotask,\n  transformPromiseWith\n} from '../helpers/webidl';\n\n/**\n * An async iterator returned by {@link ReadableStream.values}.\n *\n * @public\n */\nexport interface ReadableStreamAsyncIterator<R> extends AsyncIterator<R> {\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nexport class ReadableStreamAsyncIteratorImpl<R> {\n  private readonly _reader: ReadableStreamDefaultReader<R>;\n  private readonly _preventCancel: boolean;\n  private _ongoingPromise: Promise<ReadableStreamDefaultReadResult<R>> | undefined = undefined;\n  private _isFinished = false;\n\n  constructor(reader: ReadableStreamDefaultReader<R>, preventCancel: boolean) {\n    this._reader = reader;\n    this._preventCancel = preventCancel;\n  }\n\n  next(): Promise<ReadableStreamDefaultReadResult<R>> {\n    const nextSteps = () => this._nextSteps();\n    this._ongoingPromise = this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n      nextSteps();\n    return this._ongoingPromise;\n  }\n\n  return(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    const returnSteps = () => this._returnSteps(value);\n    return this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n      returnSteps();\n  }\n\n  private _nextSteps(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value: undefined, done: true });\n    }\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('iterate'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        this._ongoingPromise = undefined;\n        // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n        // FIXME Is this a bug in the specification, or in the test?\n        queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n      },\n      _closeSteps: () => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        resolvePromise({ value: undefined, done: true });\n      },\n      _errorSteps: reason => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        rejectPromise(reason);\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n    return promise;\n  }\n\n  private _returnSteps(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value, done: true });\n    }\n    this._isFinished = true;\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('finish iterating'));\n    }\n\n    assert(reader._readRequests.length === 0);\n\n    if (!this._preventCancel) {\n      const result = ReadableStreamReaderGenericCancel(reader, value);\n      ReadableStreamReaderGenericRelease(reader);\n      return transformPromiseWith(result, () => ({ value, done: true }));\n    }\n\n    ReadableStreamReaderGenericRelease(reader);\n    return promiseResolvedWith({ value, done: true });\n  }\n}\n\ndeclare class ReadableStreamAsyncIteratorInstance<R> implements ReadableStreamAsyncIterator<R> {\n  /** @interal */\n  _asyncIteratorImpl: ReadableStreamAsyncIteratorImpl<R>;\n\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nconst ReadableStreamAsyncIteratorPrototype: ReadableStreamAsyncIteratorInstance<any> = {\n  next(this: ReadableStreamAsyncIteratorInstance<any>): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n    }\n    return this._asyncIteratorImpl.next();\n  },\n\n  return(this: ReadableStreamAsyncIteratorInstance<any>, value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n    }\n    return this._asyncIteratorImpl.return(value);\n  }\n} as any;\nif (AsyncIteratorPrototype !== undefined) {\n  Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamAsyncIterator<R>(stream: ReadableStream<R>,\n                                                      preventCancel: boolean): ReadableStreamAsyncIterator<R> {\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n  const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n  const iterator: ReadableStreamAsyncIteratorInstance<R> = Object.create(ReadableStreamAsyncIteratorPrototype);\n  iterator._asyncIteratorImpl = impl;\n  return iterator;\n}\n\nfunction IsReadableStreamAsyncIterator<R = any>(x: any): x is ReadableStreamAsyncIterator<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n    return false;\n  }\n\n  try {\n    // noinspection SuspiciousTypeOfGuard\n    return (x as ReadableStreamAsyncIteratorInstance<any>)._asyncIteratorImpl instanceof\n      ReadableStreamAsyncIteratorImpl;\n  } catch {\n    return false;\n  }\n}\n\n// Helper functions for the ReadableStream.\n\nfunction streamAsyncIteratorBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n}\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN: typeof Number.isNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n", "export function CreateArrayFromList<T extends any[]>(elements: T): T {\n  // We use arrays to represent lists, so this is basically a no-op.\n  // Do a slice though just in case we happen to depend on the unique-ness.\n  return elements.slice() as T;\n}\n\nexport function CopyDataBlockBytes(dest: ArrayBuffer,\n                                   destOffset: number,\n                                   src: ArrayBuffer,\n                                   srcOffset: number,\n                                   n: number) {\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n\n// Not implemented correctly\nexport function TransferArrayBuffer<T extends ArrayBufferLike>(O: T): T {\n  return O;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function CanTransferArrayBuffer(O: ArrayBufferLike): boolean {\n  return true;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function IsDetachedBuffer(O: ArrayBufferLike): boolean {\n  return false;\n}\n\nexport function ArrayBufferSlice(buffer: ArrayBufferLike, begin: number, end: number): ArrayBufferLike {\n  // ArrayBuffer.prototype.slice is not available on IE10\n  // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n  if (buffer.slice) {\n    return buffer.slice(begin, end);\n  }\n  const length = end - begin;\n  const slice = new ArrayBuffer(length);\n  CopyDataBlockBytes(slice, 0, buffer, begin, length);\n  return slice;\n}\n", "import NumberIsNaN from '../../stub/number-isnan';\nimport { ArrayBufferSlice } from './ecmascript';\n\nexport function IsNonNegativeNumber(v: number): boolean {\n  if (typeof v !== 'number') {\n    return false;\n  }\n\n  if (NumberIsNaN(v)) {\n    return false;\n  }\n\n  if (v < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function CloneAsUint8Array(O: ArrayBufferView): Uint8Array {\n  const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n  return new Uint8Array(buffer);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsNonNegativeNumber } from './miscellaneous';\n\nexport interface QueueContainer<T> {\n  _queue: SimpleQueue<T>;\n  _queueTotalSize: number;\n}\n\nexport interface QueuePair<T> {\n  value: T;\n  size: number;\n}\n\nexport function DequeueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift()!;\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n}\n\nexport function EnqueueValueWithSize<T>(container: QueueContainer<QueuePair<T>>, value: T, size: number) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  if (!IsNonNegativeNumber(size) || size === Infinity) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n}\n\nexport function PeekQueueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.peek();\n  return pair.value;\n}\n\nexport function ResetQueue<T>(container: QueueContainer<T>) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = new SimpleQueue<T>();\n  container._queueTotalSize = 0;\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadableStreamHasDefaultReader,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamAddReadIntoRequest,\n  ReadableStreamFulfillReadIntoRequest,\n  ReadableStreamGetNumReadIntoRequests,\n  ReadableStreamHasBYOBReader,\n  ReadIntoRequest\n} from './byob-reader';\nimport NumberIsInteger from '../../stub/number-isinteger';\nimport {\n  IsReadableStreamLocked,\n  ReadableByteStream,\n  ReadableStreamClose,\n  ReadableStreamError\n} from '../readable-stream';\nimport { ValidatedUnderlyingByteSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  ArrayBufferSlice,\n  CanTransferArrayBuffer,\n  CopyDataBlockBytes,\n  IsDetachedBuffer,\n  TransferArrayBuffer\n} from '../abstract-ops/ecmascript';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\nimport { assertRequiredArgument, convertUnsignedLongLongWithEnforceRange } from '../validators/basic';\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nexport class ReadableStreamBYOBRequest {\n  /** @internal */\n  _associatedReadableByteStreamController!: ReadableByteStreamController;\n  /** @internal */\n  _view!: ArrayBufferView | null;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n   */\n  get view(): ArrayBufferView | null {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that `bytesWritten` bytes were written into\n   * {@link ReadableStreamBYOBRequest.view | view}, causing the result be surfaced to the consumer.\n   *\n   * After this method is called, {@link ReadableStreamBYOBRequest.view | view} will be transferred and no longer\n   * modifiable.\n   */\n  respond(bytesWritten: number): void;\n  respond(bytesWritten: number | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respond');\n    }\n    assertRequiredArgument(bytesWritten, 1, 'respond');\n    bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view!.buffer)) {\n      throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n    }\n\n    assert(this._view!.byteLength > 0);\n    assert(this._view!.buffer.byteLength > 0);\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that instead of writing into\n   * {@link ReadableStreamBYOBRequest.view | view}, the underlying byte source is providing a new `ArrayBufferView`,\n   * which will be given to the consumer of the readable byte stream.\n   *\n   * After this method is called, `view` will be transferred and no longer modifiable.\n   */\n  respondWithNewView(view: ArrayBufferView): void;\n  respondWithNewView(view: ArrayBufferView | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respondWithNewView');\n    }\n    assertRequiredArgument(view, 1, 'respondWithNewView');\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(view.buffer)) {\n      throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n  respond: { enumerable: true },\n  respondWithNewView: { enumerable: true },\n  view: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBRequest',\n    configurable: true\n  });\n}\n\ninterface ArrayBufferViewConstructor<T extends ArrayBufferView = ArrayBufferView> {\n  new(buffer: ArrayBufferLike, byteOffset: number, length?: number): T;\n\n  readonly prototype: T;\n  readonly BYTES_PER_ELEMENT: number;\n}\n\ninterface ByteQueueElement {\n  buffer: ArrayBufferLike;\n  byteOffset: number;\n  byteLength: number;\n}\n\ntype PullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> =\n  DefaultPullIntoDescriptor\n  | BYOBPullIntoDescriptor<T>;\n\ninterface DefaultPullIntoDescriptor {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<Uint8Array>;\n  readerType: 'default';\n}\n\ninterface BYOBPullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<T>;\n  readerType: 'byob';\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableByteStreamController {\n  /** @internal */\n  _controlledReadableByteStream!: ReadableByteStream;\n  /** @internal */\n  _queue!: SimpleQueue<ByteQueueElement>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n  /** @internal */\n  _autoAllocateChunkSize: number | undefined;\n  /** @internal */\n  _byobRequest: ReadableStreamBYOBRequest | null;\n  /** @internal */\n  _pendingPullIntos!: SimpleQueue<PullIntoDescriptor>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the current BYOB pull request, or `null` if there isn't one.\n   */\n  get byobRequest(): ReadableStreamBYOBRequest | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    return ReadableByteStreamControllerGetBYOBRequest(this);\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk chunk in the controlled readable stream.\n   * The chunk has to be an `ArrayBufferView` instance, or else a `TypeError` will be thrown.\n   */\n  enqueue(chunk: ArrayBufferView): void;\n  enqueue(chunk: ArrayBufferView | undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    assertRequiredArgument(chunk, 1, 'enqueue');\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('chunk must be an array buffer view');\n    }\n    if (chunk.byteLength === 0) {\n      throw new TypeError('chunk must have non-zero byteLength');\n    }\n    if (chunk.buffer.byteLength === 0) {\n      throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ReadableByteStreamControllerClearPendingPullIntos(this);\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<Uint8Array>): void {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream));\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift()!;\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\n      readRequest._chunkSteps(view);\n      return;\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer: ArrayBuffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        readRequest._errorSteps(bufferE);\n        return;\n      }\n\n      const pullIntoDescriptor: DefaultPullIntoDescriptor = {\n        buffer,\n        bufferByteLength: autoAllocateChunkSize,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        viewConstructor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    ReadableStreamAddReadRequest(stream, readRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n  }\n}\n\nObject.defineProperties(ReadableByteStreamController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  byobRequest: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n    value: 'ReadableByteStreamController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nexport function IsReadableByteStreamController(x: any): x is ReadableByteStreamController {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableByteStreamController;\n}\n\nfunction IsReadableStreamBYOBRequest(x: any): x is ReadableStreamBYOBRequest {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBRequest;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller: ReadableByteStreamController): void {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller: ReadableByteStreamController) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = new SimpleQueue();\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor<T extends ArrayBufferView>(\n  stream: ReadableByteStream,\n  pullIntoDescriptor: PullIntoDescriptor<T>\n) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView as unknown as Uint8Array, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor<T extends ArrayBufferView>(\n  pullIntoDescriptor: PullIntoDescriptor<T>\n): T {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.viewConstructor(\n    pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize) as T;\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller: ReadableByteStreamController,\n                                                         buffer: ArrayBufferLike,\n                                                         byteOffset: number,\n                                                         byteLength: number) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller: ReadableByteStreamController,\n                                                                     pullIntoDescriptor: PullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue.peek();\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (!ready) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller: ReadableByteStreamController,\n                                                                size: number,\n                                                                pullIntoDescriptor: PullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos.peek() === pullIntoDescriptor);\n  assert(controller._byobRequest === null);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller: ReadableByteStreamController) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller: ReadableByteStreamController) {\n  if (controller._byobRequest === null) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined!;\n  controller._byobRequest._view = null!;\n  controller._byobRequest = null;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller: ReadableByteStreamController) {\n  assert(!controller._closeRequested);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos.peek();\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nexport function ReadableByteStreamControllerPullInto<T extends ArrayBufferView>(\n  controller: ReadableByteStreamController,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = (view.constructor as ArrayBufferViewConstructor<T>).BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor as ArrayBufferViewConstructor<T>;\n\n  // try {\n  const buffer = TransferArrayBuffer(view.buffer);\n  // } catch (e) {\n  //   readIntoRequest._errorSteps(e);\n  //   return;\n  // }\n\n  const pullIntoDescriptor: BYOBPullIntoDescriptor<T> = {\n    buffer,\n    bufferByteLength: buffer.byteLength,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    viewConstructor: ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    return;\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    readIntoRequest._closeSteps(emptyView);\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      readIntoRequest._chunkSteps(filledView);\n      return;\n    }\n\n    if (controller._closeRequested) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      readIntoRequest._errorSteps(e);\n      return;\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  ReadableStreamAddReadIntoRequest<T>(stream, readIntoRequest);\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller: ReadableByteStreamController,\n                                                          firstDescriptor: PullIntoDescriptor) {\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream)) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller: ReadableByteStreamController,\n                                                            bytesWritten: number,\n                                                            pullIntoDescriptor: PullIntoDescriptor) {\n  assert(pullIntoDescriptor.bytesFilled + bytesWritten <= pullIntoDescriptor.byteLength);\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller: ReadableByteStreamController, bytesWritten: number) {\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  assert(CanTransferArrayBuffer(firstDescriptor.buffer));\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  const state = controller._controlledReadableByteStream._state;\n  if (state === 'closed') {\n    assert(bytesWritten === 0);\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(state === 'readable');\n    assert(bytesWritten > 0);\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(\n  controller: ReadableByteStreamController\n): PullIntoDescriptor {\n  assert(controller._byobRequest === null);\n  const descriptor = controller._pendingPullIntos.shift()!;\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller: ReadableByteStreamController): boolean {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller: ReadableByteStreamController) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nexport function ReadableByteStreamControllerClose(controller: ReadableByteStreamController) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nexport function ReadableByteStreamControllerEnqueue(controller: ReadableByteStreamController, chunk: ArrayBufferView) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  if (IsDetachedBuffer(buffer)) {\n    throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n  }\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n      throw new TypeError(\n        'The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk'\n      );\n    }\n    firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n  }\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  if (ReadableStreamHasDefaultReader(stream)) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream)) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(!IsReadableStreamLocked(stream));\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableByteStreamControllerError(controller: ReadableByteStreamController, e: any) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableByteStreamControllerGetBYOBRequest(\n  controller: ReadableByteStreamController\n): ReadableStreamBYOBRequest | null {\n  if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    const view = new Uint8Array(firstDescriptor.buffer,\n                                firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n    const byobRequest: ReadableStreamBYOBRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n    SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n    controller._byobRequest = byobRequest;\n  }\n  return controller._byobRequest;\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller: ReadableByteStreamController): number | null {\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nexport function ReadableByteStreamControllerRespond(controller: ReadableByteStreamController, bytesWritten: number) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (bytesWritten === 0) {\n      throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n    }\n    if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n  }\n\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nexport function ReadableByteStreamControllerRespondWithNewView(controller: ReadableByteStreamController,\n                                                               view: ArrayBufferView) {\n  assert(controller._pendingPullIntos.length > 0);\n  assert(!IsDetachedBuffer(view.buffer));\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (view.byteLength !== 0) {\n      throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (view.byteLength === 0) {\n      throw new TypeError(\n        'The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream'\n      );\n    }\n  }\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n  if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n    throw new RangeError('The region specified by view is larger than byobRequest');\n  }\n\n  firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n\n  ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n}\n\nexport function SetUpReadableByteStreamController(stream: ReadableByteStream,\n                                                  controller: ReadableByteStreamController,\n                                                  startAlgorithm: () => void | PromiseLike<void>,\n                                                  pullAlgorithm: () => Promise<void>,\n                                                  cancelAlgorithm: (reason: any) => Promise<void>,\n                                                  highWaterMark: number,\n                                                  autoAllocateChunkSize: number | undefined) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._byobRequest = null;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = new SimpleQueue();\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableByteStreamControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableByteStreamControllerFromUnderlyingSource(\n  stream: ReadableByteStream,\n  underlyingByteSource: ValidatedUnderlyingByteSource,\n  highWaterMark: number\n) {\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingByteSource.start !== undefined) {\n    startAlgorithm = () => underlyingByteSource.start!(controller);\n  }\n  if (underlyingByteSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingByteSource.pull!(controller);\n  }\n  if (underlyingByteSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingByteSource.cancel!(reason);\n  }\n\n  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize === 0) {\n    throw new TypeError('autoAllocateChunkSize must be greater than 0');\n  }\n\n  SetUpReadableByteStreamController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize\n  );\n}\n\nfunction SetUpReadableStreamBYOBRequest(request: ReadableStreamBYOBRequest,\n                                        controller: ReadableByteStreamController,\n                                        view: ArrayBufferView) {\n  assert(IsReadableByteStreamController(controller));\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view));\n  assert(!IsDetachedBuffer(view.buffer));\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableByteStream, ReadableStream } from '../readable-stream';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamController,\n  ReadableByteStreamControllerPullInto\n} from './byte-stream-controller';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\nimport { IsDetachedBuffer } from '../abstract-ops/ecmascript';\n\n/**\n * A result returned by {@link ReadableStreamBYOBReader.read}.\n *\n * @public\n */\nexport type ReadableStreamBYOBReadResult<T extends ArrayBufferView> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value: T | undefined;\n};\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamBYOBReader(stream: ReadableByteStream): ReadableStreamBYOBReader {\n  return new ReadableStreamBYOBReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadIntoRequest<T extends ArrayBufferView>(stream: ReadableByteStream,\n                                                                            readIntoRequest: ReadIntoRequest<T>): void {\n  assert(IsReadableStreamBYOBReader(stream._reader));\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  (stream._reader! as ReadableStreamBYOBReader)._readIntoRequests.push(readIntoRequest);\n}\n\nexport function ReadableStreamFulfillReadIntoRequest(stream: ReadableByteStream,\n                                                     chunk: ArrayBufferView,\n                                                     done: boolean) {\n  const reader = stream._reader as ReadableStreamBYOBReader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift()!;\n  if (done) {\n    readIntoRequest._closeSteps(chunk);\n  } else {\n    readIntoRequest._chunkSteps(chunk);\n  }\n}\n\nexport function ReadableStreamGetNumReadIntoRequests(stream: ReadableByteStream): number {\n  return (stream._reader as ReadableStreamBYOBReader)._readIntoRequests.length;\n}\n\nexport function ReadableStreamHasBYOBReader(stream: ReadableByteStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamBYOBReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadIntoRequest<T extends ArrayBufferView> {\n  _chunkSteps(chunk: T): void;\n\n  _closeSteps(chunk: T | undefined): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamBYOBReader {\n  /** @internal */\n  _ownerReadableStream!: ReadableByteStream;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readIntoRequests: SimpleQueue<ReadIntoRequest<any>>;\n\n  constructor(stream: ReadableByteStream) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    if (!IsReadableByteStreamController(stream._readableStreamController)) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n        'source');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Attempts to reads bytes into view, and returns a promise resolved with the result.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamBYOBReadResult<T>> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('read'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n    }\n    if (view.byteLength === 0) {\n      return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n    }\n    if (view.buffer.byteLength === 0) {\n      return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n    }\n    if (IsDetachedBuffer(view.buffer)) {\n      return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamBYOBReadResult<T>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamBYOBReadResult<T>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readIntoRequest: ReadIntoRequest<T> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamBYOBReader(x: any): x is ReadableStreamBYOBReader {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBReader;\n}\n\nexport function ReadableStreamBYOBReaderRead<T extends ArrayBufferView>(\n  reader: ReadableStreamBYOBReader,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    readIntoRequest._errorSteps(stream._storedError);\n  } else {\n    ReadableByteStreamControllerPullInto(\n      stream._readableStreamController as ReadableByteStreamController,\n      view,\n      readIntoRequest\n    );\n  }\n}\n\n// Helper functions for the ReadableStreamBYOBReader.\n\nfunction byobReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport NumberIsNaN from '../../stub/number-isnan';\n\nexport function ExtractHighWaterMark(strategy: QueuingStrategy, defaultHWM: number): number {\n  const { highWaterMark } = strategy;\n\n  if (highWaterMark === undefined) {\n    return defaultHWM;\n  }\n\n  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n    throw new RangeError('Invalid highWaterMark');\n  }\n\n  return highWaterMark;\n}\n\nexport function ExtractSizeAlgorithm<T>(strategy: QueuingStrategy<T>): QueuingStrategySizeCallback<T> {\n  const { size } = strategy;\n\n  if (!size) {\n    return () => 1;\n  }\n\n  return size;\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport { assertDictionary, assertFunction, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategy<T>(init: QueuingStrategy<T> | null | undefined,\n                                          context: string): QueuingStrategy<T> {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  const size = init?.size;\n  return {\n    highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n    size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n  };\n}\n\nfunction convertQueuingStrategySize<T>(fn: QueuingStrategySizeCallback<T>,\n                                       context: string): QueuingStrategySizeCallback<T> {\n  assertFunction(fn, context);\n  return chunk => convertUnrestrictedDouble(fn(chunk));\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from '../writable-stream/underlying-sink';\nimport { WritableStreamDefaultController } from '../writable-stream';\n\nexport function convertUnderlyingSink<W>(original: UnderlyingSink<W> | null,\n                                         context: string): ValidatedUnderlyingSink<W> {\n  assertDictionary(original, context);\n  const abort = original?.abort;\n  const close = original?.close;\n  const start = original?.start;\n  const type = original?.type;\n  const write = original?.write;\n  return {\n    abort: abort === undefined ?\n      undefined :\n      convertUnderlyingSinkAbortCallback(abort, original!, `${context} has member 'abort' that`),\n    close: close === undefined ?\n      undefined :\n      convertUnderlyingSinkCloseCallback(close, original!, `${context} has member 'close' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSinkStartCallback(start, original!, `${context} has member 'start' that`),\n    write: write === undefined ?\n      undefined :\n      convertUnderlyingSinkWriteCallback(write, original!, `${context} has member 'write' that`),\n    type\n  };\n}\n\nfunction convertUnderlyingSinkAbortCallback(\n  fn: UnderlyingSinkAbortCallback,\n  original: UnderlyingSink,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSinkCloseCallback(\n  fn: UnderlyingSinkCloseCallback,\n  original: UnderlyingSink,\n  context: string\n): () => Promise<void> {\n  assertFunction(fn, context);\n  return () => promiseCall(fn, original, []);\n}\n\nfunction convertUnderlyingSinkStartCallback(\n  fn: UnderlyingSinkStartCallback,\n  original: UnderlyingSink,\n  context: string\n): UnderlyingSinkStartCallback {\n  assertFunction(fn, context);\n  return (controller: WritableStreamDefaultController) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSinkWriteCallback<W>(\n  fn: UnderlyingSinkWriteCallback<W>,\n  original: UnderlyingSink<W>,\n  context: string\n): (chunk: W, controller: WritableStreamDefaultController) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: W, controller: WritableStreamDefaultController) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import { IsWritableStream, WritableStream } from '../writable-stream';\n\nexport function assertWritableStream(x: unknown, context: string): asserts x is WritableStream {\n  if (!IsWritableStream(x)) {\n    throw new TypeError(`${context} is not a WritableStream.`);\n  }\n}\n", "/**\n * A signal object that allows you to communicate with a request and abort it if required\n * via its associated `AbortController` object.\n *\n * @remarks\n *   This interface is compatible with the `AbortSignal` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @public\n */\nexport interface AbortSignal {\n  /**\n   * Whether the request is aborted.\n   */\n  readonly aborted: boolean;\n\n  /**\n   * Add an event listener to be triggered when this signal becomes aborted.\n   */\n  addEventListener(type: 'abort', listener: () => void): void;\n\n  /**\n   * Remove an event listener that was previously added with {@link AbortSignal.addEventListener}.\n   */\n  removeEventListener(type: 'abort', listener: () => void): void;\n}\n\nexport function isAbortSignal(value: unknown): value is AbortSignal {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  try {\n    return typeof (value as AbortSignal).aborted === 'boolean';\n  } catch {\n    // AbortSignal.prototype.aborted throws if its brand check fails\n    return false;\n  }\n}\n\n/**\n * A controller object that allows you to abort an `AbortSignal` when desired.\n *\n * @remarks\n *   This interface is compatible with the `AbortController` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @internal\n */\nexport interface AbortController {\n  readonly signal: AbortSignal;\n\n  abort(): void;\n}\n\ninterface AbortControllerConstructor {\n  new(): AbortController;\n}\n\nconst supportsAbortController = typeof (AbortController as any) === 'function';\n\n/**\n * Construct a new AbortController, if supported by the platform.\n *\n * @internal\n */\nexport function createAbortController(): AbortController | undefined {\n  if (supportsAbortController) {\n    return new (AbortController as AbortControllerConstructor)();\n  }\n  return undefined;\n}\n", "import assert from '../stub/assert';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponPromise\n} from './helpers/webidl';\nimport {\n  DequeueValue,\n  EnqueueValueWithSize,\n  PeekQueueValue,\n  QueuePair,\n  ResetQueue\n} from './abstract-ops/queue-with-sizes';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { SimpleQueue } from './simple-queue';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { AbortSteps, ErrorSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from './writable-stream/underlying-sink';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertUnderlyingSink } from './validators/underlying-sink';\nimport { assertWritableStream } from './validators/writable-stream';\nimport { AbortController, AbortSignal, createAbortController } from './abort-signal';\n\ntype WritableStreamState = 'writable' | 'closed' | 'erroring' | 'errored';\n\ninterface WriteOrCloseRequest {\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n}\n\ntype WriteRequest = WriteOrCloseRequest;\ntype CloseRequest = WriteOrCloseRequest;\n\ninterface PendingAbortRequest {\n  _promise: Promise<undefined>;\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n  _reason: any;\n  _wasAlreadyErroring: boolean;\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nclass WritableStream<W = any> {\n  /** @internal */\n  _state!: WritableStreamState;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _writer: WritableStreamDefaultWriter<W> | undefined;\n  /** @internal */\n  _writableStreamController!: WritableStreamDefaultController<W>;\n  /** @internal */\n  _writeRequests!: SimpleQueue<WriteRequest>;\n  /** @internal */\n  _inFlightWriteRequest: WriteRequest | undefined;\n  /** @internal */\n  _closeRequest: CloseRequest | undefined;\n  /** @internal */\n  _inFlightCloseRequest: CloseRequest | undefined;\n  /** @internal */\n  _pendingAbortRequest: PendingAbortRequest | undefined;\n  /** @internal */\n  _backpressure!: boolean;\n\n  constructor(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>);\n  constructor(rawUnderlyingSink: UnderlyingSink<W> | null | undefined = {},\n              rawStrategy: QueuingStrategy<W> | null | undefined = {}) {\n    if (rawUnderlyingSink === undefined) {\n      rawUnderlyingSink = null;\n    } else {\n      assertObject(rawUnderlyingSink, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\n    InitializeWritableStream(this);\n\n    const type = underlyingSink.type;\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n    const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  /**\n   * Returns whether or not the writable stream is locked to a writer.\n   */\n  get locked(): boolean {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  /**\n   * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n   * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n   * mechanism of the underlying sink.\n   *\n   * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n   * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n   * the stream) if the stream is currently locked.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  /**\n   * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n   * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n   *\n   * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n   * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n   * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n   */\n  close() {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('close'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamClose(this);\n  }\n\n  /**\n   * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n   * is locked, no other writer can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n   * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n   * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n   */\n  getWriter(): WritableStreamDefaultWriter<W> {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nObject.defineProperties(WritableStream.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  getWriter: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n    value: 'WritableStream',\n    configurable: true\n  });\n}\n\nexport {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight,\n  UnderlyingSink,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkAbortCallback\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter<W>(stream: WritableStream<W>): WritableStreamDefaultWriter<W> {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream<W>(startAlgorithm: () => void | PromiseLike<void>,\n                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                 closeAlgorithm: () => Promise<void>,\n                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                 highWaterMark = 1,\n                                 sizeAlgorithm: QueuingStrategySizeCallback<W> = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: WritableStream<W> = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller: WritableStreamDefaultController<W> = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream<W>(stream: WritableStream<W>) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined!;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = new SimpleQueue();\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x: unknown): x is WritableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return x instanceof WritableStream;\n}\n\nfunction IsWritableStreamLocked(stream: WritableStream): boolean {\n  assert(IsWritableStream(stream));\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream: WritableStream, reason: any): Promise<undefined> {\n  if (stream._state === 'closed' || stream._state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  stream._writableStreamController._abortReason = reason;\n  stream._writableStreamController._abortController?.abort();\n\n  // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n  // but it doesn't know that signaling abort runs author code that might have changed the state.\n  // Widen the type again by casting to WritableStreamState.\n  const state = stream._state as WritableStreamState;\n\n  if (state === 'closed' || state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _promise: undefined!,\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest!._promise = promise;\n\n  if (!wasAlreadyErroring) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\nfunction WritableStreamClose(stream: WritableStream<any>): Promise<undefined> {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return promiseRejectedWith(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const closeRequest: CloseRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  const writer = stream._writer;\n  if (writer !== undefined && stream._backpressure && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream: WritableStream): Promise<undefined> {\n  assert(IsWritableStreamLocked(stream));\n  assert(stream._state === 'writable');\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const writeRequest: WriteRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream: WritableStream, error: any) {\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream: WritableStream, reason: any) {\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream: WritableStream) {\n  assert(stream._state === 'erroring');\n  assert(!WritableStreamHasOperationMarkedInFlight(stream));\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  stream._writeRequests.forEach(writeRequest => {\n    writeRequest._reject(storedError);\n  });\n  stream._writeRequests = new SimpleQueue();\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  uponPromise(\n    promise,\n    () => {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    },\n    (reason: any) => {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream: WritableStream): boolean {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream: WritableStream): boolean {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream: WritableStream) {\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream: WritableStream, backpressure: boolean) {\n  assert(stream._state === 'writable');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(!backpressure);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nexport class WritableStreamDefaultWriter<W = any> {\n  /** @internal */\n  _ownerWritableStream: WritableStream<W>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _closedPromiseState!: 'pending' | 'resolved' | 'rejected';\n  /** @internal */\n  _readyPromise!: Promise<undefined>;\n  /** @internal */\n  _readyPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _readyPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readyPromiseState!: 'pending' | 'fulfilled' | 'rejected';\n\n  constructor(stream: WritableStream<W>) {\n    assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n    assertWritableStream(stream, 'First parameter');\n\n    if (IsWritableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n    }\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the writer’s lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n   * A producer can use this information to determine the right amount of data to write.\n   *\n   * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n   * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n   * the writer’s lock is released.\n   */\n  get desiredSize(): number | null {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n   * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n   * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n   *\n   * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n   * rejected.\n   */\n  get ready(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n   */\n  close(): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  /**\n   * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n   * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n   * now on; otherwise, the writer will appear closed.\n   *\n   * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n   * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n   * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n   * other producers from writing in an interleaved manner.\n   */\n  releaseLock(): void {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * Writes the given chunk to the writable stream, by waiting until any previous writes have finished successfully,\n   * and then sending the chunk to the underlying sink's {@link UnderlyingSink.write | write()} method. It will return\n   * a promise that fulfills with undefined upon a successful write, or rejects if the write fails or stream becomes\n   * errored before the writing process is initiated.\n   *\n   * Note that what \"success\" means is up to the underlying sink; it might indicate simply that the chunk has been\n   * accepted, and not necessarily that it is safely saved to its ultimate destination.\n   */\n  write(chunk: W): Promise<void>;\n  write(chunk: W = undefined!): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  releaseLock: { enumerable: true },\n  write: { enumerable: true },\n  closed: { enumerable: true },\n  desiredSize: { enumerable: true },\n  ready: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultWriter',\n    configurable: true\n  });\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter<W = any>(x: any): x is WritableStreamDefaultWriter<W> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultWriter;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer: WritableStreamDefaultWriter, reason: any) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamClose(stream);\n}\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer: WritableStreamDefaultWriter): number | null {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer: WritableStreamDefaultWriter) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    `Writer was released and can no longer be used to monitor the stream's closedness`);\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined!;\n}\n\nfunction WritableStreamDefaultWriterWrite<W>(writer: WritableStreamDefaultWriter<W>, chunk: W): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return promiseRejectedWith(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nconst closeSentinel: unique symbol = {} as any;\n\ntype QueueRecord<W> = W | typeof closeSentinel;\n\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nexport class WritableStreamDefaultController<W = any> {\n  /** @internal */\n  _controlledWritableStream!: WritableStream<W>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<QueueRecord<W>>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _abortReason: any;\n  /** @internal */\n  _abortController: AbortController | undefined;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<W>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _writeAlgorithm!: (chunk: W) => Promise<void>;\n  /** @internal */\n  _closeAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _abortAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n   */\n  get abortReason(): any {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('abortReason');\n    }\n    return this._abortReason;\n  }\n\n  /**\n   * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n   */\n  get signal(): AbortSignal {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('signal');\n    }\n    if (this._abortController === undefined) {\n      // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n      // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n      // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n      throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n    }\n    return this._abortController.signal;\n  }\n\n  /**\n   * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n   *\n   * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n   * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n   * normal lifecycle of interactions with the underlying sink.\n   */\n  error(e: any = undefined): void {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [AbortSteps](reason: any): Promise<void> {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n  error: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x: any): x is WritableStreamDefaultController<any> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultController;\n}\n\nfunction SetUpWritableStreamDefaultController<W>(stream: WritableStream<W>,\n                                                 controller: WritableStreamDefaultController<W>,\n                                                 startAlgorithm: () => void | PromiseLike<void>,\n                                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                                 closeAlgorithm: () => Promise<void>,\n                                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                                 highWaterMark: number,\n                                                 sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  assert(IsWritableStream(stream));\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._abortReason = undefined;\n  controller._abortController = createAbortController();\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = promiseResolvedWith(startResult);\n  uponPromise(\n    startPromise,\n    () => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    r => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDealWithRejection(stream, r);\n    }\n  );\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink<W>(stream: WritableStream<W>,\n                                                                   underlyingSink: ValidatedUnderlyingSink<W>,\n                                                                   highWaterMark: number,\n                                                                   sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let writeAlgorithm: (chunk: W) => Promise<void> = () => promiseResolvedWith(undefined);\n  let closeAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let abortAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSink.start !== undefined) {\n    startAlgorithm = () => underlyingSink.start!(controller);\n  }\n  if (underlyingSink.write !== undefined) {\n    writeAlgorithm = chunk => underlyingSink.write!(chunk, controller);\n  }\n  if (underlyingSink.close !== undefined) {\n    closeAlgorithm = () => underlyingSink.close!();\n  }\n  if (underlyingSink.abort !== undefined) {\n    abortAlgorithm = reason => underlyingSink.abort!(reason);\n  }\n\n  SetUpWritableStreamDefaultController(\n    stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller: WritableStreamDefaultController<any>) {\n  controller._writeAlgorithm = undefined!;\n  controller._closeAlgorithm = undefined!;\n  controller._abortAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\nfunction WritableStreamDefaultControllerClose<W>(controller: WritableStreamDefaultController<W>) {\n  EnqueueValueWithSize(controller, closeSentinel, 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize<W>(controller: WritableStreamDefaultController<W>,\n                                                        chunk: W): number {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller: WritableStreamDefaultController<any>): number {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite<W>(controller: WritableStreamDefaultController<W>,\n                                                 chunk: W,\n                                                 chunkSize: number) {\n  try {\n    EnqueueValueWithSize(controller, chunk, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded<W>(controller: WritableStreamDefaultController<W>) {\n  const stream = controller._controlledWritableStream;\n\n  if (!controller._started) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  assert(state !== 'closed' && state !== 'errored');\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const value = PeekQueueValue(controller);\n  if (value === closeSentinel) {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, value);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller: WritableStreamDefaultController<any>, error: any) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller: WritableStreamDefaultController<any>) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  uponPromise(\n    sinkClosePromise,\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerProcessWrite<W>(controller: WritableStreamDefaultController<W>, chunk: W) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  uponPromise(\n    sinkWritePromise,\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller: WritableStreamDefaultController<any>): boolean {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller: WritableStreamDefaultController<any>, error: any) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n}\n\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._closedPromise = newPromise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseReject(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseResolve(writer);\n}\n\nfunction defaultWriterClosedPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._closedPromise_reject === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  setPromiseIsHandledToTrue(writer._closedPromise);\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._closedPromise_resolve === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._readyPromise = newPromise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseReject(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseResolve(writer);\n}\n\nfunction defaultWriterReadyPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._readyPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(writer._readyPromise);\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer: WritableStreamDefaultWriter) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitialize(writer);\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._readyPromise_resolve === undefined) {\n    return;\n  }\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n", "/// <reference lib=\"dom\" />\nexport const NativeDOMException: typeof DOMException | undefined =\n  typeof DOMException !== 'undefined' ? DOMException : undefined;\n", "/// <reference types=\"node\" />\nimport { NativeDOMException } from './native';\n\ndeclare class DOMExceptionClass extends Error {\n  constructor(message?: string, name?: string);\n\n  name: string;\n  message: string;\n}\n\ntype DOMException = DOMExceptionClass;\ntype DOMExceptionConstructor = typeof DOMExceptionClass;\n\nfunction isDOMExceptionConstructor(ctor: unknown): ctor is DOMExceptionConstructor {\n  if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n    return false;\n  }\n  try {\n    new (ctor as DOMExceptionConstructor)();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction createDOMExceptionPolyfill(): DOMExceptionConstructor {\n  // eslint-disable-next-line no-shadow\n  const ctor = function DOMException(this: DOMException, message?: string, name?: string) {\n    this.message = message || '';\n    this.name = name || 'Error';\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  } as any;\n  ctor.prototype = Object.create(Error.prototype);\n  Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n  return ctor;\n}\n\n// eslint-disable-next-line no-redeclare\nconst DOMException: DOMExceptionConstructor =\n  isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\nexport { DOMException };\n", "import { IsReadableStream, IsReadableStreamLocked, ReadableStream, ReadableStreamCancel } from '../readable-stream';\nimport { AcquireReadableStreamDefaultReader, ReadableStreamDefaultReaderRead } from './default-reader';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireWritableStreamDefaultWriter,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamCloseQueuedOrInFlight,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite\n} from '../writable-stream';\nimport assert from '../../stub/assert';\nimport {\n  newPromise,\n  PerformPromiseThen,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponFulfillment,\n  uponPromise,\n  uponRejection\n} from '../helpers/webidl';\nimport { noop } from '../../utils';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\nimport { DOMException } from '../../stub/dom-exception';\n\nexport function ReadableStreamPipeTo<T>(source: ReadableStream<T>,\n                                        dest: WritableStream<T>,\n                                        preventClose: boolean,\n                                        preventAbort: boolean,\n                                        preventCancel: boolean,\n                                        signal: AbortSignal | undefined): Promise<undefined> {\n  assert(IsReadableStream(source));\n  assert(IsWritableStream(dest));\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(!IsReadableStreamLocked(source));\n  assert(!IsWritableStreamLocked(dest));\n\n  const reader = AcquireReadableStreamDefaultReader<T>(source);\n  const writer = AcquireWritableStreamDefaultWriter<T>(dest);\n\n  source._disturbed = true;\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = promiseResolvedWith<void>(undefined);\n\n  return newPromise((resolve, reject) => {\n    let abortAlgorithm: () => void;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions: Array<() => Promise<void>> = [];\n        if (!preventAbort) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        if (!preventCancel) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n      };\n\n      if (signal.aborted) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return newPromise<void>((resolveLoop, rejectLoop) => {\n        function next(done: boolean) {\n          if (done) {\n            resolveLoop();\n          } else {\n            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n            PerformPromiseThen(pipeStep(), next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep(): Promise<boolean> {\n      if (shuttingDown) {\n        return promiseResolvedWith(true);\n      }\n\n      return PerformPromiseThen(writer._readyPromise, () => {\n        return newPromise<boolean>((resolveRead, rejectRead) => {\n          ReadableStreamDefaultReaderRead(\n            reader,\n            {\n              _chunkSteps: chunk => {\n                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                resolveRead(false);\n              },\n              _closeSteps: () => resolveRead(true),\n              _errorSteps: rejectRead\n            }\n          );\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (!preventAbort) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (!preventClose) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    setPromiseIsHandledToTrue(pipeLoop());\n\n    function waitForWritesToFinish(): Promise<void> {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return PerformPromiseThen(\n        currentWrite,\n        () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined\n      );\n    }\n\n    function isOrBecomesErrored(stream: ReadableStream | WritableStream,\n                                promise: Promise<void>,\n                                action: (reason: any) => void) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        uponRejection(promise, action);\n      }\n    }\n\n    function isOrBecomesClosed(stream: ReadableStream | WritableStream, promise: Promise<void>, action: () => void) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        uponFulfillment(promise, action);\n      }\n    }\n\n    function shutdownWithAction(action: () => Promise<unknown>, originalIsError?: boolean, originalError?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        uponPromise(\n          action(),\n          () => finalize(originalIsError, originalError),\n          newError => finalize(true, newError)\n        );\n      }\n    }\n\n    function shutdown(isError?: boolean, error?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError?: boolean, error?: any) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n", "import { QueuingStrategySizeCallback } from '../queuing-strategy';\nimport assert from '../../stub/assert';\nimport { DequeueValue, EnqueueValueWithSize, QueuePair, ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadRequest\n} from './default-reader';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsReadableStreamLocked, ReadableStream, ReadableStreamClose, ReadableStreamError } from '../readable-stream';\nimport { ValidatedUnderlyingSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableStreamDefaultController<R> {\n  /** @internal */\n  _controlledReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<R>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<R>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the controlled readable stream.\n   */\n  enqueue(chunk: R): void;\n  enqueue(chunk: R = undefined!): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<R>): void {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      readRequest._chunkSteps(chunk);\n    } else {\n      ReadableStreamAddReadRequest(stream, readRequest);\n      ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    }\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController<R = any>(x: any): x is ReadableStreamDefaultController<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultController;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller: ReadableStreamDefaultController<any>): void {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller: ReadableStreamDefaultController<any>): boolean {\n  const stream = controller._controlledReadableStream;\n\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller: ReadableStreamDefaultController<any>) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nexport function ReadableStreamDefaultControllerClose(controller: ReadableStreamDefaultController<any>) {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nexport function ReadableStreamDefaultControllerEnqueue<R>(\n  controller: ReadableStreamDefaultController<R>,\n  chunk: R\n): void {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableStreamDefaultControllerError(controller: ReadableStreamDefaultController<any>, e: any) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableStreamDefaultControllerGetDesiredSize(\n  controller: ReadableStreamDefaultController<any>\n): number | null {\n  const state = controller._controlledReadableStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nexport function ReadableStreamDefaultControllerHasBackpressure(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function ReadableStreamDefaultControllerCanCloseOrEnqueue(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  const state = controller._controlledReadableStream._state;\n\n  if (!controller._closeRequested && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function SetUpReadableStreamDefaultController<R>(stream: ReadableStream<R>,\n                                                        controller: ReadableStreamDefaultController<R>,\n                                                        startAlgorithm: () => void | PromiseLike<void>,\n                                                        pullAlgorithm: () => Promise<void>,\n                                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                                        highWaterMark: number,\n                                                        sizeAlgorithm: QueuingStrategySizeCallback<R>) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableStreamDefaultControllerFromUnderlyingSource<R>(\n  stream: ReadableStream<R>,\n  underlyingSource: ValidatedUnderlyingSource<R>,\n  highWaterMark: number,\n  sizeAlgorithm: QueuingStrategySizeCallback<R>\n) {\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSource.start !== undefined) {\n    startAlgorithm = () => underlyingSource.start!(controller);\n  }\n  if (underlyingSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingSource.pull!(controller);\n  }\n  if (underlyingSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingSource.cancel!(reason);\n  }\n\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n", "import {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  IsReadableStream,\n  ReadableByteStream,\n  ReadableStream,\n  ReadableStreamCancel,\n  ReadableStreamReader\n} from '../readable-stream';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadRequest\n} from './default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReaderRead,\n  ReadIntoRequest\n} from './byob-reader';\nimport assert from '../../stub/assert';\nimport { newPromise, promiseResolvedWith, queueMicrotask, uponRejection } from '../helpers/webidl';\nimport {\n  ReadableStreamDefaultController,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError\n} from './default-controller';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamControllerClose,\n  ReadableByteStreamControllerEnqueue,\n  ReadableByteStreamControllerError,\n  ReadableByteStreamControllerGetBYOBRequest,\n  ReadableByteStreamControllerRespond,\n  ReadableByteStreamControllerRespondWithNewView\n} from './byte-stream-controller';\nimport { CreateArrayFromList } from '../abstract-ops/ecmascript';\nimport { CloneAsUint8Array } from '../abstract-ops/miscellaneous';\n\nexport function ReadableStreamTee<R>(stream: ReadableStream<R>,\n                                     cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n  if (IsReadableByteStreamController(stream._readableStreamController)) {\n    return ReadableByteStreamTee(stream as unknown as ReadableByteStream) as\n      unknown as [ReadableStream<R>, ReadableStream<R>];\n  }\n  return ReadableStreamDefaultTee(stream, cloneForBranch2);\n}\n\nexport function ReadableStreamDefaultTee<R>(stream: ReadableStream<R>,\n                                            cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n\n  let reading = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableStream<R>;\n  let branch2: ReadableStream<R>;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<undefined>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm(): Promise<void> {\n    if (reading) {\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          reading = false;\n          const chunk1 = chunk;\n          const chunk2 = chunk;\n\n          // There is no way to access the cloning code right now in the reference implementation.\n          // If we add one then we'll need an implementation for serializable objects.\n          // if (!canceled2 && cloneForBranch2) {\n          //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n          // }\n\n          if (!canceled1) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch1._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk1\n            );\n          }\n\n          if (!canceled2) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch2._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk2\n            );\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n        if (!canceled2) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {\n    // do nothing\n  }\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  uponRejection(reader._closedPromise, (r: any) => {\n    ReadableStreamDefaultControllerError(branch1._readableStreamController as ReadableStreamDefaultController<R>, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController as ReadableStreamDefaultController<R>, r);\n    if (!canceled1 || !canceled2) {\n      resolveCancelPromise(undefined);\n    }\n  });\n\n  return [branch1, branch2];\n}\n\nexport function ReadableByteStreamTee(stream: ReadableByteStream): [ReadableByteStream, ReadableByteStream] {\n  assert(IsReadableStream(stream));\n  assert(IsReadableByteStreamController(stream._readableStreamController));\n\n  let reader: ReadableStreamReader<Uint8Array> = AcquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableByteStream;\n  let branch2: ReadableByteStream;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<void>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function forwardReaderError(thisReader: ReadableStreamReader<Uint8Array>) {\n    uponRejection(thisReader._closedPromise, r => {\n      if (thisReader !== reader) {\n        return;\n      }\n      ReadableByteStreamControllerError(branch1._readableStreamController, r);\n      ReadableByteStreamControllerError(branch2._readableStreamController, r);\n      if (!canceled1 || !canceled2) {\n        resolveCancelPromise(undefined);\n      }\n    });\n  }\n\n  function pullWithDefaultReader() {\n    if (IsReadableStreamBYOBReader(reader)) {\n      assert(reader._readIntoRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const readRequest: ReadRequest<Uint8Array> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          reading = false;\n\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n          }\n\n          if (!canceled1) {\n            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n          }\n          if (!canceled2) {\n            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableByteStreamControllerClose(branch1._readableStreamController);\n        }\n        if (!canceled2) {\n          ReadableByteStreamControllerClose(branch2._readableStreamController);\n        }\n        if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n        }\n        if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n        }\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n  }\n\n  function pullWithBYOBReader(view: ArrayBufferView, forBranch2: boolean) {\n    if (IsReadableStreamDefaultReader<Uint8Array>(reader)) {\n      assert(reader._readRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const byobBranch = forBranch2 ? branch2 : branch1;\n    const otherBranch = forBranch2 ? branch1 : branch2;\n\n    const readIntoRequest: ReadIntoRequest<ArrayBufferView> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          reading = false;\n\n          const byobCanceled = forBranch2 ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n          if (!otherCanceled) {\n            let clonedChunk;\n            try {\n              clonedChunk = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n            if (!byobCanceled) {\n              ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n            }\n            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n          } else if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n        });\n      },\n      _closeSteps: chunk => {\n        reading = false;\n\n        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n        if (!byobCanceled) {\n          ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n        }\n        if (!otherCanceled) {\n          ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n        }\n\n        if (chunk !== undefined) {\n          assert(chunk.byteLength === 0);\n\n          if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n          if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n          }\n        }\n\n        if (!byobCanceled || !otherCanceled) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n  }\n\n  function pull1Algorithm(): Promise<void> {\n    if (reading) {\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, false);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function pull2Algorithm(): Promise<void> {\n    if (reading) {\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, true);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm(): void {\n    return;\n  }\n\n  branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n  branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\n  forwardReaderError(reader);\n\n  return [branch1, branch2];\n}\n", "import { assertDictionary, assertFunction, convertUnsignedLongLongWithEnforceRange } from './basic';\nimport {\n  ReadableStreamController,\n  UnderlyingByteSource,\n  UnderlyingDefaultOrByteSource,\n  UnderlyingDefaultOrByteSourcePullCallback,\n  UnderlyingDefaultOrByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  ValidatedUnderlyingDefaultOrByteSource\n} from '../readable-stream/underlying-source';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\n\nexport function convertUnderlyingDefaultOrByteSource<R>(\n  source: UnderlyingSource<R> | UnderlyingByteSource | null,\n  context: string\n): ValidatedUnderlyingDefaultOrByteSource<R> {\n  assertDictionary(source, context);\n  const original = source as (UnderlyingDefaultOrByteSource<R> | null);\n  const autoAllocateChunkSize = original?.autoAllocateChunkSize;\n  const cancel = original?.cancel;\n  const pull = original?.pull;\n  const start = original?.start;\n  const type = original?.type;\n  return {\n    autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n      undefined :\n      convertUnsignedLongLongWithEnforceRange(\n        autoAllocateChunkSize,\n        `${context} has member 'autoAllocateChunkSize' that`\n      ),\n    cancel: cancel === undefined ?\n      undefined :\n      convertUnderlyingSourceCancelCallback(cancel, original!, `${context} has member 'cancel' that`),\n    pull: pull === undefined ?\n      undefined :\n      convertUnderlyingSourcePullCallback(pull, original!, `${context} has member 'pull' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSourceStartCallback(start, original!, `${context} has member 'start' that`),\n    type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n  };\n}\n\nfunction convertUnderlyingSourceCancelCallback(\n  fn: UnderlyingSourceCancelCallback,\n  original: UnderlyingDefaultOrByteSource,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSourcePullCallback<R>(\n  fn: UnderlyingDefaultOrByteSourcePullCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): (controller: ReadableStreamController<R>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSourceStartCallback<R>(\n  fn: UnderlyingDefaultOrByteSourceStartCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): UnderlyingDefaultOrByteSourceStartCallback<R> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertReadableStreamType(type: string, context: string): 'bytes' {\n  type = `${type}`;\n  if (type !== 'bytes') {\n    throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n  }\n  return type;\n}\n", "import { assertDictionary } from './basic';\nimport { ReadableStreamGetReaderOptions } from '../readable-stream/reader-options';\n\nexport function convertReaderOptions(options: ReadableStreamGetReaderOptions | null | undefined,\n                                     context: string): ReadableStreamGetReaderOptions {\n  assertDictionary(options, context);\n  const mode = options?.mode;\n  return {\n    mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n  };\n}\n\nfunction convertReadableStreamReaderMode(mode: string, context: string): 'byob' {\n  mode = `${mode}`;\n  if (mode !== 'byob') {\n    throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n  }\n  return mode;\n}\n", "import { assertDictionary } from './basic';\nimport {\n  ReadableStreamIteratorOptions,\n  ValidatedReadableStreamIteratorOptions\n} from '../readable-stream/iterator-options';\n\nexport function convertIteratorOptions(options: ReadableStreamIteratorOptions | null | undefined,\n                                       context: string): ValidatedReadableStreamIteratorOptions {\n  assertDictionary(options, context);\n  const preventCancel = options?.preventCancel;\n  return { preventCancel: Boolean(preventCancel) };\n}\n", "import { assertDictionary } from './basic';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from '../readable-stream/pipe-options';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\n\nexport function convertPipeOptions(options: StreamPipeOptions | null | undefined,\n                                   context: string): ValidatedStreamPipeOptions {\n  assertDictionary(options, context);\n  const preventAbort = options?.preventAbort;\n  const preventCancel = options?.preventCancel;\n  const preventClose = options?.preventClose;\n  const signal = options?.signal;\n  if (signal !== undefined) {\n    assertAbortSignal(signal, `${context} has member 'signal' that`);\n  }\n  return {\n    preventAbort: Boolean(preventAbort),\n    preventCancel: Boolean(preventCancel),\n    preventClose: Boolean(preventClose),\n    signal\n  };\n}\n\nfunction assertAbortSignal(signal: unknown, context: string): asserts signal is AbortSignal {\n  if (!isAbortSignal(signal)) {\n    throw new TypeError(`${context} is not an AbortSignal.`);\n  }\n}\n", "import { assertDictionary, assertRequiredField } from './basic';\nimport { ReadableStream } from '../readable-stream';\nimport { WritableStream } from '../writable-stream';\nimport { assertReadableStream } from './readable-stream';\nimport { assertWritableStream } from './writable-stream';\n\nexport function convertReadableWritablePair<RS extends ReadableStream, WS extends WritableStream>(\n  pair: { readable: RS; writable: WS } | null | undefined,\n  context: string\n): { readable: RS; writable: WS } {\n  assertDictionary(pair, context);\n\n  const readable = pair?.readable;\n  assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n  assertReadableStream(readable, `${context} has member 'readable' that`);\n\n  const writable = pair?.writable;\n  assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n  assertWritableStream(writable, `${context} has member 'writable' that`);\n\n  return { readable, writable };\n}\n", "import assert from '../stub/assert';\nimport {\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  transformPromiseWith\n} from './helpers/webidl';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { AcquireReadableStreamAsyncIterator, ReadableStreamAsyncIterator } from './readable-stream/async-iterator';\nimport { defaultReaderClosedPromiseReject, defaultReaderClosedPromiseResolve } from './readable-stream/generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReadResult\n} from './readable-stream/default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBReadResult\n} from './readable-stream/byob-reader';\nimport { ReadableStreamPipeTo } from './readable-stream/pipe';\nimport { ReadableStreamTee } from './readable-stream/tee';\nimport { IsWritableStream, IsWritableStreamLocked, WritableStream } from './writable-stream';\nimport { SimpleQueue } from './simple-queue';\nimport {\n  ReadableByteStreamController,\n  ReadableStreamBYOBRequest,\n  SetUpReadableByteStreamController,\n  SetUpReadableByteStreamControllerFromUnderlyingSource\n} from './readable-stream/byte-stream-controller';\nimport {\n  ReadableStreamDefaultController,\n  SetUpReadableStreamDefaultController,\n  SetUpReadableStreamDefaultControllerFromUnderlyingSource\n} from './readable-stream/default-controller';\nimport {\n  UnderlyingByteSource,\n  UnderlyingByteSourcePullCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceStartCallback\n} from './readable-stream/underlying-source';\nimport { noop } from '../utils';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { CreateArrayFromList } from './abstract-ops/ecmascript';\nimport { CancelSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertUnderlyingDefaultOrByteSource } from './validators/underlying-source';\nimport { ReadableStreamGetReaderOptions } from './readable-stream/reader-options';\nimport { convertReaderOptions } from './validators/reader-options';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from './readable-stream/pipe-options';\nimport { ReadableStreamIteratorOptions } from './readable-stream/iterator-options';\nimport { convertIteratorOptions } from './validators/iterator-options';\nimport { convertPipeOptions } from './validators/pipe-options';\nimport { ReadableWritablePair } from './readable-stream/readable-writable-pair';\nimport { convertReadableWritablePair } from './validators/readable-writable-pair';\n\nexport type ReadableByteStream = ReadableStream<Uint8Array> & {\n  _readableStreamController: ReadableByteStreamController\n};\n\ntype ReadableStreamState = 'readable' | 'closed' | 'errored';\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nexport class ReadableStream<R = any> {\n  /** @internal */\n  _state!: ReadableStreamState;\n  /** @internal */\n  _reader: ReadableStreamReader<R> | undefined;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _disturbed!: boolean;\n  /** @internal */\n  _readableStreamController!: ReadableStreamDefaultController<R> | ReadableByteStreamController;\n\n  constructor(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number; size?: undefined });\n  constructor(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>);\n  constructor(rawUnderlyingSource: UnderlyingSource<R> | UnderlyingByteSource | null | undefined = {},\n              rawStrategy: QueuingStrategy<R> | null | undefined = {}) {\n    if (rawUnderlyingSource === undefined) {\n      rawUnderlyingSource = null;\n    } else {\n      assertObject(rawUnderlyingSource, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\n    InitializeReadableStream(this);\n\n    if (underlyingSource.type === 'bytes') {\n      if (strategy.size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n      const highWaterMark = ExtractHighWaterMark(strategy, 0);\n      SetUpReadableByteStreamControllerFromUnderlyingSource(\n        this as unknown as ReadableByteStream,\n        underlyingSource,\n        highWaterMark\n      );\n    } else {\n      assert(underlyingSource.type === undefined);\n      const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n      const highWaterMark = ExtractHighWaterMark(strategy, 1);\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(\n        this,\n        underlyingSource,\n        highWaterMark,\n        sizeAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n   */\n  get locked(): boolean {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  /**\n   * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n   *\n   * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n   * method, which might or might not use it.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  /**\n   * Creates a {@link ReadableStreamBYOBReader} and locks the stream to the new reader.\n   *\n   * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams,\n   * i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading.\n   * The returned BYOB reader provides the ability to directly read individual chunks from the stream via its\n   * {@link ReadableStreamBYOBReader.read | read()} method, into developer-supplied buffers, allowing more precise\n   * control over allocation.\n   */\n  getReader({ mode }: { mode: 'byob' }): ReadableStreamBYOBReader;\n  /**\n   * Creates a {@link ReadableStreamDefaultReader} and locks the stream to the new reader.\n   * While the stream is locked, no other reader can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to consume a stream\n   * in its entirety. By getting a reader for the stream, you can ensure nobody else can interleave reads with yours\n   * or cancel the stream, which would interfere with your abstraction.\n   */\n  getReader(): ReadableStreamDefaultReader<R>;\n  getReader(\n    rawOptions: ReadableStreamGetReaderOptions | null | undefined = undefined\n  ): ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    const options = convertReaderOptions(rawOptions, 'First parameter');\n\n    if (options.mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    assert(options.mode === 'byob');\n    return AcquireReadableStreamBYOBReader(this as unknown as ReadableByteStream);\n  }\n\n  /**\n   * Provides a convenient, chainable way of piping this readable stream through a transform stream\n   * (or any other `{ writable, readable }` pair). It simply {@link ReadableStream.pipeTo | pipes} the stream\n   * into the writable side of the supplied pair, and returns the readable side for further use.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeThrough<RS extends ReadableStream>(\n    transform: { readable: RS; writable: WritableStream<R> },\n    options?: StreamPipeOptions\n  ): RS;\n  pipeThrough<RS extends ReadableStream>(\n    rawTransform: { readable: RS; writable: WritableStream<R> } | null | undefined,\n    rawOptions: StreamPipeOptions | null | undefined = {}\n  ): RS {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n    assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\n    const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n    const options = convertPipeOptions(rawOptions, 'Second parameter');\n\n    if (IsReadableStreamLocked(this)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(transform.writable)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(\n      this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n\n    setPromiseIsHandledToTrue(promise);\n\n    return transform.readable;\n  }\n\n  /**\n   * Pipes this readable stream to a given writable stream. The way in which the piping process behaves under\n   * various error conditions can be customized with a number of passed options. It returns a promise that fulfills\n   * when the piping process completes successfully, or rejects if any errors were encountered.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n  pipeTo(destination: WritableStream<R> | null | undefined,\n         rawOptions: StreamPipeOptions | null | undefined = {}): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('pipeTo'));\n    }\n\n    if (destination === undefined) {\n      return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n    }\n    if (!IsWritableStream(destination)) {\n      return promiseRejectedWith(\n        new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`)\n      );\n    }\n\n    let options: ValidatedStreamPipeOptions;\n    try {\n      options = convertPipeOptions(rawOptions, 'Second parameter');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream')\n      );\n    }\n    if (IsWritableStreamLocked(destination)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream')\n      );\n    }\n\n    return ReadableStreamPipeTo<R>(\n      this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n  }\n\n  /**\n   * Tees this readable stream, returning a two-element array containing the two resulting branches as\n   * new {@link ReadableStream} instances.\n   *\n   * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n   * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n   * propagated to the stream's underlying source.\n   *\n   * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n   * this could allow interference between the two branches.\n   */\n  tee(): [ReadableStream<R>, ReadableStream<R>] {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return CreateArrayFromList(branches);\n  }\n\n  /**\n   * Asynchronously iterates over the chunks in the stream's internal queue.\n   *\n   * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader.\n   * The lock will be released if the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method\n   * is called, e.g. by breaking out of the loop.\n   *\n   * By default, calling the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method will also\n   * cancel the stream. To prevent this, use the stream's {@link ReadableStream.values | values()} method, passing\n   * `true` for the `preventCancel` option.\n   */\n  values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n  values(rawOptions: ReadableStreamIteratorOptions | null | undefined = undefined): ReadableStreamAsyncIterator<R> {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('values');\n    }\n\n    const options = convertIteratorOptions(rawOptions, 'First parameter');\n    return AcquireReadableStreamAsyncIterator<R>(this, options.preventCancel);\n  }\n\n  /**\n   * {@inheritDoc ReadableStream.values}\n   */\n  [Symbol.asyncIterator]: (options?: ReadableStreamIteratorOptions) => ReadableStreamAsyncIterator<R>;\n}\n\nObject.defineProperties(ReadableStream.prototype, {\n  cancel: { enumerable: true },\n  getReader: { enumerable: true },\n  pipeThrough: { enumerable: true },\n  pipeTo: { enumerable: true },\n  tee: { enumerable: true },\n  values: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n    value: 'ReadableStream',\n    configurable: true\n  });\n}\nif (typeof Symbol.asyncIterator === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.asyncIterator, {\n    value: ReadableStream.prototype.values,\n    writable: true,\n    configurable: true\n  });\n}\n\nexport {\n  ReadableStreamAsyncIterator,\n  ReadableStreamDefaultReadResult,\n  ReadableStreamBYOBReadResult,\n  UnderlyingByteSource,\n  UnderlyingSource,\n  UnderlyingSourceStartCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceCancelCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingByteSourcePullCallback,\n  StreamPipeOptions,\n  ReadableWritablePair,\n  ReadableStreamIteratorOptions\n};\n\n// Abstract operations for the ReadableStream.\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableStream<R>(startAlgorithm: () => void | PromiseLike<void>,\n                                        pullAlgorithm: () => Promise<void>,\n                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                        highWaterMark = 1,\n                                        sizeAlgorithm: QueuingStrategySizeCallback<R> = () => 1): ReadableStream<R> {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: ReadableStream<R> = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableByteStream(\n  startAlgorithm: () => void | PromiseLike<void>,\n  pullAlgorithm: () => Promise<void>,\n  cancelAlgorithm: (reason: any) => Promise<void>\n): ReadableByteStream {\n  const stream: ReadableByteStream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream: ReadableStream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nexport function IsReadableStream(x: unknown): x is ReadableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStream;\n}\n\nexport function IsReadableStreamDisturbed(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  return stream._disturbed;\n}\n\nexport function IsReadableStreamLocked(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamCancel<R>(stream: ReadableStream<R>, reason: any): Promise<undefined> {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const reader = stream._reader;\n  if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._closeSteps(undefined);\n    });\n    reader._readIntoRequests = new SimpleQueue();\n  }\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return transformPromiseWith(sourceCancelPromise, noop);\n}\n\nexport function ReadableStreamClose<R>(stream: ReadableStream<R>): void {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._closeSteps();\n    });\n    reader._readRequests = new SimpleQueue();\n  }\n}\n\nexport function ReadableStreamError<R>(stream: ReadableStream<R>, e: any): void {\n  assert(IsReadableStream(stream));\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._errorSteps(e);\n    });\n\n    reader._readRequests = new SimpleQueue();\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._errorSteps(e);\n    });\n\n    reader._readIntoRequests = new SimpleQueue();\n  }\n}\n\n// Readers\n\nexport type ReadableStreamReader<R> = ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader;\n\nexport {\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader\n};\n\n// Controllers\n\nexport {\n  ReadableStreamDefaultController,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController\n};\n\n// Helper functions for the ReadableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n", "import { QueuingStrategyInit } from '../queuing-strategy';\nimport { assertDictionary, assertRequiredField, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategyInit(init: QueuingStrategyInit | null | undefined,\n                                           context: string): QueuingStrategyInit {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n  return {\n    highWaterMark: convertUnrestrictedDouble(highWaterMark)\n  };\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst byteLengthSizeFunction = (chunk: ArrayBufferView): number => {\n  return chunk.byteLength;\n};\nObject.defineProperty(byteLengthSizeFunction, 'name', {\n  value: 'size',\n  configurable: true\n});\n\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nexport default class ByteLengthQueuingStrategy implements QueuingStrategy<ArrayBufferView> {\n  /** @internal */\n  readonly _byteLengthQueuingStrategyHighWaterMark: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('highWaterMark');\n    }\n    return this._byteLengthQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by returning the value of its `byteLength` property.\n   */\n  get size(): (chunk: ArrayBufferView) => number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('size');\n    }\n    return byteLengthSizeFunction;\n  }\n}\n\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'ByteLengthQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the ByteLengthQueuingStrategy.\n\nfunction byteLengthBrandCheckException(name: string): TypeError {\n  return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n}\n\nexport function IsByteLengthQueuingStrategy(x: any): x is ByteLengthQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof ByteLengthQueuingStrategy;\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst countSizeFunction = (): 1 => {\n  return 1;\n};\nObject.defineProperty(countSizeFunction, 'name', {\n  value: 'size',\n  configurable: true\n});\n\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nexport default class CountQueuingStrategy implements QueuingStrategy<any> {\n  /** @internal */\n  readonly _countQueuingStrategyHighWaterMark!: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('highWaterMark');\n    }\n    return this._countQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by always returning 1.\n   * This ensures that the total queue size is a count of the number of chunks in the queue.\n   */\n  get size(): (chunk: any) => 1 {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('size');\n    }\n    return countSizeFunction;\n  }\n}\n\nObject.defineProperties(CountQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'CountQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the CountQueuingStrategy.\n\nfunction countBrandCheckException(name: string): TypeError {\n  return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n}\n\nexport function IsCountQueuingStrategy(x: any): x is CountQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof CountQueuingStrategy;\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from '../transform-stream/transformer';\nimport { TransformStreamDefaultController } from '../transform-stream';\n\nexport function convertTransformer<I, O>(original: Transformer<I, O> | null,\n                                         context: string): ValidatedTransformer<I, O> {\n  assertDictionary(original, context);\n  const flush = original?.flush;\n  const readableType = original?.readableType;\n  const start = original?.start;\n  const transform = original?.transform;\n  const writableType = original?.writableType;\n  return {\n    flush: flush === undefined ?\n      undefined :\n      convertTransformerFlushCallback(flush, original!, `${context} has member 'flush' that`),\n    readableType,\n    start: start === undefined ?\n      undefined :\n      convertTransformerStartCallback(start, original!, `${context} has member 'start' that`),\n    transform: transform === undefined ?\n      undefined :\n      convertTransformerTransformCallback(transform, original!, `${context} has member 'transform' that`),\n    writableType\n  };\n}\n\nfunction convertTransformerFlushCallback<I, O>(\n  fn: TransformerFlushCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): (controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertTransformerStartCallback<I, O>(\n  fn: TransformerStartCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): TransformerStartCallback<O> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertTransformerTransformCallback<I, O>(\n  fn: TransformerTransformCallback<I, O>,\n  original: Transformer<I, O>,\n  context: string\n): (chunk: I, controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: I, controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import assert from '../stub/assert';\nimport { newPromise, promiseRejectedWith, promiseResolvedWith, transformPromiseWith } from './helpers/webidl';\nimport { CreateReadableStream, ReadableStream, ReadableStreamDefaultController } from './readable-stream';\nimport {\n  ReadableStreamDefaultControllerCanCloseOrEnqueue,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure\n} from './readable-stream/default-controller';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { CreateWritableStream, WritableStream, WritableStreamDefaultControllerErrorIfNeeded } from './writable-stream';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from './transform-stream/transformer';\nimport { convertTransformer } from './validators/transformer';\n\n// Class TransformStream\n\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nexport class TransformStream<I = any, O = any> {\n  /** @internal */\n  _writable!: WritableStream<I>;\n  /** @internal */\n  _readable!: ReadableStream<O>;\n  /** @internal */\n  _backpressure!: boolean;\n  /** @internal */\n  _backpressureChangePromise!: Promise<void>;\n  /** @internal */\n  _backpressureChangePromise_resolve!: () => void;\n  /** @internal */\n  _transformStreamController!: TransformStreamDefaultController<O>;\n\n  constructor(\n    transformer?: Transformer<I, O>,\n    writableStrategy?: QueuingStrategy<I>,\n    readableStrategy?: QueuingStrategy<O>\n  );\n  constructor(rawTransformer: Transformer<I, O> | null | undefined = {},\n              rawWritableStrategy: QueuingStrategy<I> | null | undefined = {},\n              rawReadableStrategy: QueuingStrategy<O> | null | undefined = {}) {\n    if (rawTransformer === undefined) {\n      rawTransformer = null;\n    }\n\n    const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n    const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\n    const transformer = convertTransformer(rawTransformer, 'First parameter');\n    if (transformer.readableType !== undefined) {\n      throw new RangeError('Invalid readableType specified');\n    }\n    if (transformer.writableType !== undefined) {\n      throw new RangeError('Invalid writableType specified');\n    }\n\n    const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n    const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n    const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n    const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\n    let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n    const startPromise = newPromise<void>(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(\n      this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm\n    );\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    if (transformer.start !== undefined) {\n      startPromise_resolve(transformer.start(this._transformStreamController));\n    } else {\n      startPromise_resolve(undefined);\n    }\n  }\n\n  /**\n   * The readable side of the transform stream.\n   */\n  get readable(): ReadableStream<O> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  /**\n   * The writable side of the transform stream.\n   */\n  get writable(): WritableStream<I> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\nObject.defineProperties(TransformStream.prototype, {\n  readable: { enumerable: true },\n  writable: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n    value: 'TransformStream',\n    configurable: true\n  });\n}\n\nexport {\n  Transformer,\n  TransformerStartCallback,\n  TransformerFlushCallback,\n  TransformerTransformCallback\n};\n\n// Transform Stream Abstract Operations\n\nexport function CreateTransformStream<I, O>(startAlgorithm: () => void | PromiseLike<void>,\n                                            transformAlgorithm: (chunk: I) => Promise<void>,\n                                            flushAlgorithm: () => Promise<void>,\n                                            writableHighWaterMark = 1,\n                                            writableSizeAlgorithm: QueuingStrategySizeCallback<I> = () => 1,\n                                            readableHighWaterMark = 0,\n                                            readableSizeAlgorithm: QueuingStrategySizeCallback<O> = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream: TransformStream<I, O> = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n  const startPromise = newPromise<void>(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream<I, O>(stream: TransformStream<I, O>,\n                                         startPromise: Promise<void>,\n                                         writableHighWaterMark: number,\n                                         writableSizeAlgorithm: QueuingStrategySizeCallback<I>,\n                                         readableHighWaterMark: number,\n                                         readableSizeAlgorithm: QueuingStrategySizeCallback<O>) {\n  function startAlgorithm(): Promise<void> {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk: I): Promise<void> {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason: any): Promise<void> {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return promiseResolvedWith(undefined);\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined!;\n  stream._backpressureChangePromise = undefined!;\n  stream._backpressureChangePromise_resolve = undefined!;\n  TransformStreamSetBackpressure(stream, true);\n\n  stream._transformStreamController = undefined!;\n}\n\nfunction IsTransformStream(x: unknown): x is TransformStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return x instanceof TransformStream;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream: TransformStream, e: any) {\n  ReadableStreamDefaultControllerError(\n    stream._readable._readableStreamController as ReadableStreamDefaultController<any>,\n    e\n  );\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream: TransformStream, e: any) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream: TransformStream, backpressure: boolean) {\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = newPromise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nexport class TransformStreamDefaultController<O> {\n  /** @internal */\n  _controlledTransformStream: TransformStream<any, O>;\n  /** @internal */\n  _transformAlgorithm: (chunk: any) => Promise<void>;\n  /** @internal */\n  _flushAlgorithm: () => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n   */\n  get desiredSize(): number | null {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController as ReadableStreamDefaultController<O>);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the readable side of the controlled transform stream.\n   */\n  enqueue(chunk: O): void;\n  enqueue(chunk: O = undefined!): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors both the readable side and the writable side of the controlled transform stream, making all future\n   * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n   */\n  error(reason: any = undefined): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  /**\n   * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n   * transformer only needs to consume a portion of the chunks written to the writable side.\n   */\n  terminate(): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  terminate: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'TransformStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController<O = any>(x: any): x is TransformStreamDefaultController<O> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return x instanceof TransformStreamDefaultController;\n}\n\nfunction SetUpTransformStreamDefaultController<I, O>(stream: TransformStream<I, O>,\n                                                     controller: TransformStreamDefaultController<O>,\n                                                     transformAlgorithm: (chunk: I) => Promise<void>,\n                                                     flushAlgorithm: () => Promise<void>) {\n  assert(IsTransformStream(stream));\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer<I, O>(stream: TransformStream<I, O>,\n                                                                    transformer: ValidatedTransformer<I, O>) {\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = (chunk: I): Promise<void> => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk as unknown as O);\n      return promiseResolvedWith(undefined);\n    } catch (transformResultE) {\n      return promiseRejectedWith(transformResultE);\n    }\n  };\n\n  let flushAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (transformer.transform !== undefined) {\n    transformAlgorithm = chunk => transformer.transform!(chunk, controller);\n  }\n  if (transformer.flush !== undefined) {\n    flushAlgorithm = () => transformer.flush!(controller);\n  }\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller: TransformStreamDefaultController<any>) {\n  controller._transformAlgorithm = undefined!;\n  controller._flushAlgorithm = undefined!;\n}\n\nfunction TransformStreamDefaultControllerEnqueue<O>(controller: TransformStreamDefaultController<O>, chunk: O) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller: TransformStreamDefaultController<any>, e: any) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform<I, O>(controller: TransformStreamDefaultController<O>,\n                                                                chunk: I) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromiseWith(transformPromise, undefined, r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate<O>(controller: TransformStreamDefaultController<O>) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n\n  ReadableStreamDefaultControllerClose(readableController);\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm<I, O>(stream: TransformStream<I, O>, chunk: I): Promise<void> {\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return transformPromiseWith(backpressureChangePromise, () => {\n      const writable = stream._writable;\n      const state = writable._state;\n      if (state === 'erroring') {\n        throw writable._storedError;\n      }\n      assert(state === 'writable');\n      return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n    });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream: TransformStream, reason: any): Promise<void> {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return promiseResolvedWith(undefined);\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm<I, O>(stream: TransformStream<I, O>): Promise<void> {\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return transformPromiseWith(flushPromise, () => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    ReadableStreamDefaultControllerClose(readable._readableStreamController as ReadableStreamDefaultController<O>);\n  }, r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream: TransformStream): Promise<void> {\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n", "/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536;\n\nif (!globalThis.ReadableStream) {\n  try {\n    Object.assign(globalThis, require('stream/web'))\n  } catch (error) {\n\t\t// TODO: Remove when only supporting node >= 16.5.0\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  const {Blob} = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n\t\tBlob.prototype.stream = function name(params) {\n\t\t\tlet position = 0;\n\t\t\tconst blob = this;\n\n\t\t\treturn new ReadableStream({\n\t\t\t\ttype: 'bytes',\n\t\t\t\tasync pull(ctrl) {\n\t\t\t\t\tconst chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE));\n\t\t\t\t\tconst buffer = await chunk.arrayBuffer();\n\t\t\t\t\tposition += buffer.byteLength;\n\t\t\t\t\tctrl.enqueue(new Uint8Array(buffer))\n\n\t\t\t\t\tif (position === blob.size) {\n\t\t\t\t\t\tctrl.close()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n} catch (error) {}\n/* c8 ignore end */\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API_V1_1_STREAM_PREFIX = exports.API_V1_1_UPLOAD_PREFIX = exports.API_V1_1_PREFIX = exports.API_V2_LABS_PREFIX = exports.API_V2_PREFIX = void 0;\nexports.API_V2_PREFIX = 'https://api.twitter.com/2/';\nexports.API_V2_LABS_PREFIX = 'https://api.twitter.com/labs/2/';\nexports.API_V1_1_PREFIX = 'https://api.twitter.com/1.1/';\nexports.API_V1_1_UPLOAD_PREFIX = 'https://upload.twitter.com/1.1/';\nexports.API_V1_1_STREAM_PREFIX = 'https://stream.twitter.com/1.1/';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreviousableTwitterPaginator = exports.TwitterPaginator = void 0;\n/** TwitterPaginator: able to get consume data from initial request, then fetch next data sequentially. */\nclass TwitterPaginator {\n    // noinspection TypeScriptAbstractClassConstructorCanBeMadeProtected\n    constructor({ realData, rateLimit, instance, queryParams, sharedParams }) {\n        this._maxResultsWhenFetchLast = 100;\n        this._realData = realData;\n        this._rateLimit = rateLimit;\n        this._instance = instance;\n        this._queryParams = queryParams;\n        this._sharedParams = sharedParams;\n    }\n    get _isRateLimitOk() {\n        if (!this._rateLimit) {\n            return true;\n        }\n        const resetDate = this._rateLimit.reset * 1000;\n        if (resetDate < Date.now()) {\n            return true;\n        }\n        return this._rateLimit.remaining > 0;\n    }\n    makeRequest(queryParams) {\n        return this._instance.get(this.getEndpoint(), queryParams, { fullResponse: true, params: this._sharedParams });\n    }\n    makeNewInstanceFromResult(result, queryParams) {\n        // Construct a subclass\n        return new this.constructor({\n            realData: result.data,\n            rateLimit: result.rateLimit,\n            instance: this._instance,\n            queryParams,\n            sharedParams: this._sharedParams,\n        });\n    }\n    getEndpoint() {\n        return this._endpoint;\n    }\n    injectQueryParams(maxResults) {\n        return {\n            ...(maxResults ? { max_results: maxResults } : {}),\n            ...this._queryParams,\n        };\n    }\n    /* ---------------------- */\n    /* Real paginator methods */\n    /* ---------------------- */\n    /**\n     * Next page.\n     */\n    async next(maxResults) {\n        const queryParams = this.getNextQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        return this.makeNewInstanceFromResult(result, queryParams);\n    }\n    /**\n     * Next page, but store it in current instance.\n     */\n    async fetchNext(maxResults) {\n        const queryParams = this.getNextQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        // Await in case of async sub-methods\n        await this.refreshInstanceFromResult(result, true);\n        return this;\n    }\n    /**\n     * Fetch up to {count} items after current page,\n     * as long as rate limit is not hit and Twitter has some results\n     */\n    async fetchLast(count = Infinity) {\n        let queryParams = this.getNextQueryParams(this._maxResultsWhenFetchLast);\n        let resultCount = 0;\n        // Break at rate limit limit\n        while (resultCount < count && this._isRateLimitOk) {\n            const response = await this.makeRequest(queryParams);\n            await this.refreshInstanceFromResult(response, true);\n            resultCount += this.getPageLengthFromRequest(response);\n            if (this.isFetchLastOver(response)) {\n                break;\n            }\n            queryParams = this.getNextQueryParams(this._maxResultsWhenFetchLast);\n        }\n        return this;\n    }\n    get rateLimit() {\n        var _a;\n        return { ...(_a = this._rateLimit) !== null && _a !== void 0 ? _a : {} };\n    }\n    /** Get raw data returned by Twitter API. */\n    get data() {\n        return this._realData;\n    }\n    get done() {\n        return !this.canFetchNextPage(this._realData);\n    }\n    /**\n     * Iterate over currently fetched items.\n     */\n    *[Symbol.iterator]() {\n        yield* this.getItemArray();\n    }\n    /**\n     * Iterate over items \"indefinitely\" (until rate limit is hit / they're no more items available)\n     * This will **mutate the current instance** and fill data, metas, etc. inside this instance.\n     *\n     * If you need to handle concurrent requests, or you need to rely on immutability, please use `.fetchAndIterate()` instead.\n     */\n    async *[Symbol.asyncIterator]() {\n        yield* this.getItemArray();\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let paginator = this;\n        let canFetchNextPage = this.canFetchNextPage(this._realData);\n        while (canFetchNextPage && this._isRateLimitOk && paginator.getItemArray().length > 0) {\n            const next = await paginator.next(this._maxResultsWhenFetchLast);\n            // Store data into current instance [needed to access includes and meta]\n            this.refreshInstanceFromResult({ data: next._realData, headers: {}, rateLimit: next._rateLimit }, true);\n            canFetchNextPage = this.canFetchNextPage(next._realData);\n            const items = next.getItemArray();\n            yield* items;\n            paginator = next;\n        }\n    }\n    /**\n     * Iterate over items \"indefinitely\" without modifying the current instance (until rate limit is hit / they're no more items available)\n     *\n     * This will **NOT** mutate the current instance, meaning that current instance will not inherit from `includes` and `meta` (v2 API only).\n     * Use `Symbol.asyncIterator` (`for-await of`) to directly access items with current instance mutation.\n     */\n    async *fetchAndIterate() {\n        for (const item of this.getItemArray()) {\n            yield [item, this];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let paginator = this;\n        let canFetchNextPage = this.canFetchNextPage(this._realData);\n        while (canFetchNextPage && this._isRateLimitOk && paginator.getItemArray().length > 0) {\n            const next = await paginator.next(this._maxResultsWhenFetchLast);\n            // Store data into current instance [needed to access includes and meta]\n            this.refreshInstanceFromResult({ data: next._realData, headers: {}, rateLimit: next._rateLimit }, true);\n            canFetchNextPage = this.canFetchNextPage(next._realData);\n            for (const item of next.getItemArray()) {\n                yield [item, next];\n            }\n            this._rateLimit = next._rateLimit;\n            paginator = next;\n        }\n    }\n}\nexports.TwitterPaginator = TwitterPaginator;\n/** PreviousableTwitterPaginator: a TwitterPaginator able to get consume data from both side, next and previous. */\nclass PreviousableTwitterPaginator extends TwitterPaginator {\n    /**\n     * Previous page (new tweets)\n     */\n    async previous(maxResults) {\n        const queryParams = this.getPreviousQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        return this.makeNewInstanceFromResult(result, queryParams);\n    }\n    /**\n     * Previous page, but in current instance.\n     */\n    async fetchPrevious(maxResults) {\n        const queryParams = this.getPreviousQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        await this.refreshInstanceFromResult(result, false);\n        return this;\n    }\n}\nexports.PreviousableTwitterPaginator = PreviousableTwitterPaginator;\nexports.default = TwitterPaginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CursoredV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\nclass CursoredV1Paginator extends TwitterPaginator_1.default {\n    getNextQueryParams(maxResults) {\n        var _a;\n        return {\n            ...this._queryParams,\n            cursor: (_a = this._realData.next_cursor_str) !== null && _a !== void 0 ? _a : this._realData.next_cursor,\n            ...(maxResults ? { count: maxResults } : {}),\n        };\n    }\n    isFetchLastOver(result) {\n        // If we cant fetch next page\n        return !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        // If one of cursor is valid\n        return !this.isNextCursorInvalid(result.next_cursor) || !this.isNextCursorInvalid(result.next_cursor_str);\n    }\n    isNextCursorInvalid(value) {\n        return value === undefined\n            || value === 0\n            || value === -1\n            || value === '0'\n            || value === '-1';\n    }\n}\nexports.CursoredV1Paginator = CursoredV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WelcomeDmV1Paginator = exports.DmEventsV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass DmEventsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'direct_messages/events/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.events.push(...result.events);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.events.length;\n    }\n    getItemArray() {\n        return this.events;\n    }\n    /**\n     * Events returned by paginator.\n     */\n    get events() {\n        return this._realData.events;\n    }\n}\nexports.DmEventsV1Paginator = DmEventsV1Paginator;\nclass WelcomeDmV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'direct_messages/welcome_messages/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.welcome_messages.push(...result.welcome_messages);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.welcome_messages.length;\n    }\n    getItemArray() {\n        return this.welcomeMessages;\n    }\n    get welcomeMessages() {\n        return this._realData.welcome_messages;\n    }\n}\nexports.WelcomeDmV1Paginator = WelcomeDmV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EUploadMimeType = void 0;\nvar EUploadMimeType;\n(function (EUploadMimeType) {\n    EUploadMimeType[\"Jpeg\"] = \"image/jpeg\";\n    EUploadMimeType[\"Mp4\"] = \"video/mp4\";\n    EUploadMimeType[\"Mov\"] = \"video/quicktime\";\n    EUploadMimeType[\"Gif\"] = \"image/gif\";\n    EUploadMimeType[\"Png\"] = \"image/png\";\n    EUploadMimeType[\"Srt\"] = \"text/plain\";\n    EUploadMimeType[\"Webp\"] = \"image/webp\";\n})(EUploadMimeType = exports.EUploadMimeType || (exports.EUploadMimeType = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EDirectMessageEventTypeV1 = void 0;\n// Creation of DMs\nvar EDirectMessageEventTypeV1;\n(function (EDirectMessageEventTypeV1) {\n    EDirectMessageEventTypeV1[\"Create\"] = \"message_create\";\n    EDirectMessageEventTypeV1[\"WelcomeCreate\"] = \"welcome_message\";\n})(EDirectMessageEventTypeV1 = exports.EDirectMessageEventTypeV1 || (exports.EDirectMessageEventTypeV1 = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./streaming.v1.types\"), exports);\n__exportStar(require(\"./tweet.v1.types\"), exports);\n__exportStar(require(\"./entities.v1.types\"), exports);\n__exportStar(require(\"./user.v1.types\"), exports);\n__exportStar(require(\"./dev-utilities.v1.types\"), exports);\n__exportStar(require(\"./geo.v1.types\"), exports);\n__exportStar(require(\"./trends.v1.types\"), exports);\n__exportStar(require(\"./dm.v1.types\"), exports);\n__exportStar(require(\"./list.v1.types\"), exports);\n", "\"use strict\";\n// ---------------\n// -- Streaming --\n// ---------------\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./streaming.v2.types\"), exports);\n__exportStar(require(\"./tweet.v2.types\"), exports);\n__exportStar(require(\"./tweet.definition.v2\"), exports);\n__exportStar(require(\"./user.v2.types\"), exports);\n__exportStar(require(\"./spaces.v2.types\"), exports);\n__exportStar(require(\"./list.v2.types\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EApiV2ErrorCode = exports.EApiV1ErrorCode = exports.ApiResponseError = exports.ApiPartialResponseError = exports.ApiRequestError = exports.ETwitterApiError = void 0;\nvar ETwitterApiError;\n(function (ETwitterApiError) {\n    ETwitterApiError[\"Request\"] = \"request\";\n    ETwitterApiError[\"PartialResponse\"] = \"partial-response\";\n    ETwitterApiError[\"Response\"] = \"response\";\n})(ETwitterApiError = exports.ETwitterApiError || (exports.ETwitterApiError = {}));\n/* ERRORS INSTANCES */\nclass ApiError extends Error {\n    constructor() {\n        super(...arguments);\n        this.error = true;\n    }\n}\nclass ApiRequestError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.Request;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n    }\n    get request() {\n        return this._options.request;\n    }\n    get requestError() {\n        return this._options.requestError;\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            error: this.requestError,\n        };\n    }\n}\nexports.ApiRequestError = ApiRequestError;\nclass ApiPartialResponseError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.PartialResponse;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n    }\n    get request() {\n        return this._options.request;\n    }\n    get response() {\n        return this._options.response;\n    }\n    get responseError() {\n        return this._options.responseError;\n    }\n    get rawContent() {\n        return this._options.rawContent;\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            error: this.responseError,\n        };\n    }\n}\nexports.ApiPartialResponseError = ApiPartialResponseError;\nclass ApiResponseError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.Response;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n        this.code = options.code;\n        this.headers = options.headers;\n        this.rateLimit = options.rateLimit;\n        // Fix bad error data payload on some v1 endpoints (see https://github.com/PLhery/node-twitter-api-v2/issues/342)\n        if (options.data && typeof options.data === 'object' && 'error' in options.data && !options.data.errors) {\n            const data = { ...options.data };\n            data.errors = [{\n                    code: EApiV1ErrorCode.InternalError,\n                    message: data.error,\n                }];\n            this.data = data;\n        }\n        else {\n            this.data = options.data;\n        }\n    }\n    get request() {\n        return this._options.request;\n    }\n    get response() {\n        return this._options.response;\n    }\n    /** Check for presence of one of given v1/v2 error codes. */\n    hasErrorCode(...codes) {\n        const errors = this.errors;\n        // No errors\n        if (!(errors === null || errors === void 0 ? void 0 : errors.length)) {\n            return false;\n        }\n        // v1 errors\n        if ('code' in errors[0]) {\n            const v1errors = errors;\n            return v1errors.some(error => codes.includes(error.code));\n        }\n        // v2 error\n        const v2error = this.data;\n        return codes.includes(v2error.type);\n    }\n    get errors() {\n        var _a;\n        return (_a = this.data) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n    get rateLimitError() {\n        return this.code === 420 || this.code === 429;\n    }\n    get isAuthError() {\n        if (this.code === 401) {\n            return true;\n        }\n        return this.hasErrorCode(EApiV1ErrorCode.AuthTimestampInvalid, EApiV1ErrorCode.AuthenticationFail, EApiV1ErrorCode.BadAuthenticationData, EApiV1ErrorCode.InvalidOrExpiredToken);\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            code: this.code,\n            error: this.data,\n            rateLimit: this.rateLimit,\n            headers: this.headers,\n        };\n    }\n}\nexports.ApiResponseError = ApiResponseError;\nvar EApiV1ErrorCode;\n(function (EApiV1ErrorCode) {\n    // Location errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidCoordinates\"] = 3] = \"InvalidCoordinates\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoLocationFound\"] = 13] = \"NoLocationFound\";\n    // Authentication failures\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AuthenticationFail\"] = 32] = \"AuthenticationFail\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidOrExpiredToken\"] = 89] = \"InvalidOrExpiredToken\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UnableToVerifyCredentials\"] = 99] = \"UnableToVerifyCredentials\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AuthTimestampInvalid\"] = 135] = \"AuthTimestampInvalid\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"BadAuthenticationData\"] = 215] = \"BadAuthenticationData\";\n    // Resources not found or visible\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoUserMatch\"] = 17] = \"NoUserMatch\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UserNotFound\"] = 50] = \"UserNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"ResourceNotFound\"] = 34] = \"ResourceNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNotFound\"] = 144] = \"TweetNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNotVisible\"] = 179] = \"TweetNotVisible\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NotAllowedResource\"] = 220] = \"NotAllowedResource\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MediaIdNotFound\"] = 325] = \"MediaIdNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNoLongerAvailable\"] = 421] = \"TweetNoLongerAvailable\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetViolatedRules\"] = 422] = \"TweetViolatedRules\";\n    // Account errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TargetUserSuspended\"] = 63] = \"TargetUserSuspended\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"YouAreSuspended\"] = 64] = \"YouAreSuspended\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AccountUpdateFailed\"] = 120] = \"AccountUpdateFailed\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoSelfSpamReport\"] = 36] = \"NoSelfSpamReport\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoSelfMute\"] = 271] = \"NoSelfMute\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AccountLocked\"] = 326] = \"AccountLocked\";\n    // Application live errors / Twitter errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"RateLimitExceeded\"] = 88] = \"RateLimitExceeded\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoDMRightForApp\"] = 93] = \"NoDMRightForApp\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"OverCapacity\"] = 130] = \"OverCapacity\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InternalError\"] = 131] = \"InternalError\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManyFollowings\"] = 161] = \"TooManyFollowings\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetLimitExceeded\"] = 185] = \"TweetLimitExceeded\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DuplicatedTweet\"] = 187] = \"DuplicatedTweet\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManySpamReports\"] = 205] = \"TooManySpamReports\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"RequestLooksLikeSpam\"] = 226] = \"RequestLooksLikeSpam\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoWriteRightForApp\"] = 261] = \"NoWriteRightForApp\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetActionsDisabled\"] = 425] = \"TweetActionsDisabled\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetRepliesRestricted\"] = 433] = \"TweetRepliesRestricted\";\n    // Invalid request parameters\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NamedParameterMissing\"] = 38] = \"NamedParameterMissing\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidAttachmentUrl\"] = 44] = \"InvalidAttachmentUrl\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetTextTooLong\"] = 186] = \"TweetTextTooLong\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MissingUrlParameter\"] = 195] = \"MissingUrlParameter\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoMultipleGifs\"] = 323] = \"NoMultipleGifs\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidMediaIds\"] = 324] = \"InvalidMediaIds\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidUrl\"] = 407] = \"InvalidUrl\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManyTweetAttachments\"] = 386] = \"TooManyTweetAttachments\";\n    // Already sent/deleted item\n    EApiV1ErrorCode[EApiV1ErrorCode[\"StatusAlreadyFavorited\"] = 139] = \"StatusAlreadyFavorited\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"FollowRequestAlreadySent\"] = 160] = \"FollowRequestAlreadySent\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CannotUnmuteANonMutedAccount\"] = 272] = \"CannotUnmuteANonMutedAccount\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetAlreadyRetweeted\"] = 327] = \"TweetAlreadyRetweeted\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"ReplyToDeletedTweet\"] = 385] = \"ReplyToDeletedTweet\";\n    // DM Errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DMReceiverNotFollowingYou\"] = 150] = \"DMReceiverNotFollowingYou\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UnableToSendDM\"] = 151] = \"UnableToSendDM\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MustAllowDMFromAnyone\"] = 214] = \"MustAllowDMFromAnyone\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CannotSendDMToThisUser\"] = 349] = \"CannotSendDMToThisUser\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DMTextTooLong\"] = 354] = \"DMTextTooLong\";\n    // Application misconfiguration\n    EApiV1ErrorCode[EApiV1ErrorCode[\"SubscriptionAlreadyExists\"] = 355] = \"SubscriptionAlreadyExists\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CallbackUrlNotApproved\"] = 415] = \"CallbackUrlNotApproved\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"SuspendedApplication\"] = 416] = \"SuspendedApplication\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"OobOauthIsNotAllowed\"] = 417] = \"OobOauthIsNotAllowed\";\n})(EApiV1ErrorCode = exports.EApiV1ErrorCode || (exports.EApiV1ErrorCode = {}));\nvar EApiV2ErrorCode;\n(function (EApiV2ErrorCode) {\n    // Request errors\n    EApiV2ErrorCode[\"InvalidRequest\"] = \"https://api.twitter.com/2/problems/invalid-request\";\n    EApiV2ErrorCode[\"ClientForbidden\"] = \"https://api.twitter.com/2/problems/client-forbidden\";\n    EApiV2ErrorCode[\"UnsupportedAuthentication\"] = \"https://api.twitter.com/2/problems/unsupported-authentication\";\n    // Stream rules errors\n    EApiV2ErrorCode[\"InvalidRules\"] = \"https://api.twitter.com/2/problems/invalid-rules\";\n    EApiV2ErrorCode[\"TooManyRules\"] = \"https://api.twitter.com/2/problems/rule-cap\";\n    EApiV2ErrorCode[\"DuplicatedRules\"] = \"https://api.twitter.com/2/problems/duplicate-rules\";\n    // Twitter errors\n    EApiV2ErrorCode[\"RateLimitExceeded\"] = \"https://api.twitter.com/2/problems/usage-capped\";\n    EApiV2ErrorCode[\"ConnectionError\"] = \"https://api.twitter.com/2/problems/streaming-connection\";\n    EApiV2ErrorCode[\"ClientDisconnected\"] = \"https://api.twitter.com/2/problems/client-disconnected\";\n    EApiV2ErrorCode[\"TwitterDisconnectedYou\"] = \"https://api.twitter.com/2/problems/operational-disconnect\";\n    // Resource errors\n    EApiV2ErrorCode[\"ResourceNotFound\"] = \"https://api.twitter.com/2/problems/resource-not-found\";\n    EApiV2ErrorCode[\"ResourceUnauthorized\"] = \"https://api.twitter.com/2/problems/not-authorized-for-resource\";\n    EApiV2ErrorCode[\"DisallowedResource\"] = \"https://api.twitter.com/2/problems/disallowed-resource\";\n})(EApiV2ErrorCode = exports.EApiV2ErrorCode || (exports.EApiV2ErrorCode = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ETwitterStreamEvent = void 0;\nvar ETwitterStreamEvent;\n(function (ETwitterStreamEvent) {\n    ETwitterStreamEvent[\"Connected\"] = \"connected\";\n    ETwitterStreamEvent[\"ConnectError\"] = \"connect error\";\n    ETwitterStreamEvent[\"ConnectionError\"] = \"connection error\";\n    ETwitterStreamEvent[\"ConnectionClosed\"] = \"connection closed\";\n    ETwitterStreamEvent[\"ConnectionLost\"] = \"connection lost\";\n    ETwitterStreamEvent[\"ReconnectAttempt\"] = \"reconnect attempt\";\n    ETwitterStreamEvent[\"Reconnected\"] = \"reconnected\";\n    ETwitterStreamEvent[\"ReconnectError\"] = \"reconnect error\";\n    ETwitterStreamEvent[\"ReconnectLimitExceeded\"] = \"reconnect limit exceeded\";\n    ETwitterStreamEvent[\"DataKeepAlive\"] = \"data keep-alive\";\n    ETwitterStreamEvent[\"Data\"] = \"data event content\";\n    ETwitterStreamEvent[\"DataError\"] = \"data twitter error\";\n    ETwitterStreamEvent[\"TweetParseError\"] = \"data tweet parse error\";\n    ETwitterStreamEvent[\"Error\"] = \"stream error\";\n})(ETwitterStreamEvent = exports.ETwitterStreamEvent || (exports.ETwitterStreamEvent = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiPluginResponseOverride = void 0;\nclass TwitterApiPluginResponseOverride {\n    constructor(value) {\n        this.value = value;\n    }\n}\nexports.TwitterApiPluginResponseOverride = TwitterApiPluginResponseOverride;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./client.plugins.types\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./v1\"), exports);\n__exportStar(require(\"./v2\"), exports);\n__exportStar(require(\"./errors.types\"), exports);\n__exportStar(require(\"./responses.types\"), exports);\n__exportStar(require(\"./client.types\"), exports);\n__exportStar(require(\"./auth.types\"), exports);\n__exportStar(require(\"./plugins\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiV2Settings = void 0;\nexports.TwitterApiV2Settings = {\n    debug: false,\n    deprecationWarnings: true,\n    logger: { log: console.log.bind(console) },\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeDeprecationWarning = exports.hasMultipleItems = exports.isTweetStreamV2ErrorPayload = exports.trimUndefinedProperties = exports.arrayWrap = exports.sharedPromise = void 0;\nconst settings_1 = require(\"./settings\");\nfunction sharedPromise(getter) {\n    const sharedPromise = {\n        value: undefined,\n        promise: getter().then(val => {\n            sharedPromise.value = val;\n            return val;\n        }),\n    };\n    return sharedPromise;\n}\nexports.sharedPromise = sharedPromise;\nfunction arrayWrap(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [value];\n}\nexports.arrayWrap = arrayWrap;\nfunction trimUndefinedProperties(object) {\n    // Delete undefined parameters\n    for (const parameter in object) {\n        if (object[parameter] === undefined)\n            delete object[parameter];\n    }\n}\nexports.trimUndefinedProperties = trimUndefinedProperties;\nfunction isTweetStreamV2ErrorPayload(payload) {\n    // Is error only if 'errors' is present and 'data' does not exists\n    return typeof payload === 'object'\n        && 'errors' in payload\n        && !('data' in payload);\n}\nexports.isTweetStreamV2ErrorPayload = isTweetStreamV2ErrorPayload;\nfunction hasMultipleItems(item) {\n    if (Array.isArray(item) && item.length > 1) {\n        return true;\n    }\n    return item.toString().includes(',');\n}\nexports.hasMultipleItems = hasMultipleItems;\nconst deprecationWarningsCache = new Set();\nfunction safeDeprecationWarning(message) {\n    if (typeof console === 'undefined' || !console.warn || !settings_1.TwitterApiV2Settings.deprecationWarnings) {\n        return;\n    }\n    const hash = `${message.instance}-${message.method}-${message.problem}`;\n    if (deprecationWarningsCache.has(hash)) {\n        return;\n    }\n    const formattedMsg = `[twitter-api-v2] Deprecation warning: In ${message.instance}.${message.method}() call` +\n        `, ${message.problem}.\\n${message.resolution}.`;\n    console.warn(formattedMsg);\n    console.warn('To disable this message, import variable TwitterApiV2Settings from twitter-api-v2 and set TwitterApiV2Settings.deprecationWarnings to false.');\n    deprecationWarningsCache.add(hash);\n}\nexports.safeDeprecationWarning = safeDeprecationWarning;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestHandlerHelper = void 0;\nconst https_1 = require(\"https\");\nconst settings_1 = require(\"../settings\");\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nconst types_1 = require(\"../types\");\nconst zlib = __importStar(require(\"zlib\"));\nconst events_1 = require(\"events\");\nclass RequestHandlerHelper {\n    constructor(requestData) {\n        this.requestData = requestData;\n        this.requestErrorHandled = false;\n        this.responseData = [];\n    }\n    /* Request helpers */\n    get hrefPathname() {\n        const url = this.requestData.url;\n        return url.hostname + url.pathname;\n    }\n    isCompressionDisabled() {\n        return !this.requestData.compression || this.requestData.compression === 'identity';\n    }\n    isFormEncodedEndpoint() {\n        return this.requestData.url.href.startsWith('https://api.twitter.com/oauth/');\n    }\n    /* Error helpers */\n    createRequestError(error) {\n        if (settings_1.TwitterApiV2Settings.debug) {\n            settings_1.TwitterApiV2Settings.logger.log('Request error:', error);\n        }\n        return new types_1.ApiRequestError('Request failed.', {\n            request: this.req,\n            error,\n        });\n    }\n    createPartialResponseError(error, abortClose) {\n        const res = this.res;\n        let message = `Request failed with partial response with HTTP code ${res.statusCode}`;\n        if (abortClose) {\n            message += ' (connection abruptly closed)';\n        }\n        else {\n            message += ' (parse error)';\n        }\n        return new types_1.ApiPartialResponseError(message, {\n            request: this.req,\n            response: this.res,\n            responseError: error,\n            rawContent: Buffer.concat(this.responseData).toString(),\n        });\n    }\n    formatV1Errors(errors) {\n        return errors\n            .map(({ code, message }) => `${message} (Twitter code ${code})`)\n            .join(', ');\n    }\n    formatV2Error(error) {\n        return `${error.title}: ${error.detail} (see ${error.type})`;\n    }\n    createResponseError({ res, data, rateLimit, code }) {\n        var _a;\n        if (settings_1.TwitterApiV2Settings.debug) {\n            settings_1.TwitterApiV2Settings.logger.log(`Request failed with code ${code}, data:`, data);\n            settings_1.TwitterApiV2Settings.logger.log('Response headers:', res.headers);\n        }\n        // Errors formatting.\n        let errorString = `Request failed with code ${code}`;\n        if ((_a = data === null || data === void 0 ? void 0 : data.errors) === null || _a === void 0 ? void 0 : _a.length) {\n            const errors = data.errors;\n            if ('code' in errors[0]) {\n                errorString += ' - ' + this.formatV1Errors(errors);\n            }\n            else {\n                errorString += ' - ' + this.formatV2Error(data);\n            }\n        }\n        return new types_1.ApiResponseError(errorString, {\n            code,\n            data,\n            headers: res.headers,\n            request: this.req,\n            response: res,\n            rateLimit,\n        });\n    }\n    /* Response helpers */\n    getResponseDataStream(res) {\n        if (this.isCompressionDisabled()) {\n            return res;\n        }\n        const contentEncoding = (res.headers['content-encoding'] || 'identity').trim().toLowerCase();\n        if (contentEncoding === 'br') {\n            const brotli = zlib.createBrotliDecompress({\n                flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n                finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH,\n            });\n            res.pipe(brotli);\n            return brotli;\n        }\n        if (contentEncoding === 'gzip') {\n            const gunzip = zlib.createGunzip({\n                flush: zlib.constants.Z_SYNC_FLUSH,\n                finishFlush: zlib.constants.Z_SYNC_FLUSH,\n            });\n            res.pipe(gunzip);\n            return gunzip;\n        }\n        if (contentEncoding === 'deflate') {\n            const inflate = zlib.createInflate({\n                flush: zlib.constants.Z_SYNC_FLUSH,\n                finishFlush: zlib.constants.Z_SYNC_FLUSH,\n            });\n            res.pipe(inflate);\n            return inflate;\n        }\n        return res;\n    }\n    detectResponseType(res) {\n        var _a, _b;\n        // Auto parse if server responds with JSON body\n        if (((_a = res.headers['content-type']) === null || _a === void 0 ? void 0 : _a.includes('application/json')) || ((_b = res.headers['content-type']) === null || _b === void 0 ? void 0 : _b.includes('application/problem+json'))) {\n            return 'json';\n        }\n        // f-e oauth token endpoints\n        else if (this.isFormEncodedEndpoint()) {\n            return 'url';\n        }\n        return 'text';\n    }\n    getParsedResponse(res) {\n        const data = this.responseData;\n        const mode = this.requestData.forceParseMode || this.detectResponseType(res);\n        if (mode === 'buffer') {\n            return Buffer.concat(data);\n        }\n        else if (mode === 'text') {\n            return Buffer.concat(data).toString();\n        }\n        else if (mode === 'json') {\n            const asText = Buffer.concat(data).toString();\n            return asText.length ? JSON.parse(asText) : undefined;\n        }\n        else if (mode === 'url') {\n            const asText = Buffer.concat(data).toString();\n            const formEntries = {};\n            for (const [item, value] of new URLSearchParams(asText)) {\n                formEntries[item] = value;\n            }\n            return formEntries;\n        }\n        else {\n            // mode === 'none'\n            return undefined;\n        }\n    }\n    getRateLimitFromResponse(res) {\n        let rateLimit = undefined;\n        if (res.headers['x-rate-limit-limit']) {\n            rateLimit = {\n                limit: Number(res.headers['x-rate-limit-limit']),\n                remaining: Number(res.headers['x-rate-limit-remaining']),\n                reset: Number(res.headers['x-rate-limit-reset']),\n            };\n            if (res.headers['x-app-limit-24hour-limit']) {\n                rateLimit.day = {\n                    limit: Number(res.headers['x-app-limit-24hour-limit']),\n                    remaining: Number(res.headers['x-app-limit-24hour-remaining']),\n                    reset: Number(res.headers['x-app-limit-24hour-reset']),\n                };\n            }\n            if (this.requestData.rateLimitSaver) {\n                this.requestData.rateLimitSaver(rateLimit);\n            }\n        }\n        return rateLimit;\n    }\n    /* Request event handlers */\n    onSocketEventHandler(reject, cleanupListener, socket) {\n        const onClose = this.onSocketCloseHandler.bind(this, reject);\n        socket.on('close', onClose);\n        cleanupListener.on('complete', () => socket.off('close', onClose));\n    }\n    onSocketCloseHandler(reject) {\n        this.req.removeAllListeners('timeout');\n        const res = this.res;\n        if (res) {\n            // Response ok, res.close/res.end can handle request ending\n            return;\n        }\n        if (!this.requestErrorHandled) {\n            return reject(this.createRequestError(new Error('Socket closed without any information.')));\n        }\n        // else: other situation\n    }\n    requestErrorHandler(reject, requestError) {\n        var _a, _b;\n        (_b = (_a = this.requestData).requestEventDebugHandler) === null || _b === void 0 ? void 0 : _b.call(_a, 'request-error', { requestError });\n        this.requestErrorHandled = true;\n        reject(this.createRequestError(requestError));\n    }\n    timeoutErrorHandler() {\n        this.requestErrorHandled = true;\n        this.req.destroy(new Error('Request timeout.'));\n    }\n    /* Response event handlers */\n    classicResponseHandler(resolve, reject, res) {\n        this.res = res;\n        const dataStream = this.getResponseDataStream(res);\n        // Register the response data\n        dataStream.on('data', chunk => this.responseData.push(chunk));\n        dataStream.on('end', this.onResponseEndHandler.bind(this, resolve, reject));\n        dataStream.on('close', this.onResponseCloseHandler.bind(this, resolve, reject));\n        // Debug handlers\n        if (this.requestData.requestEventDebugHandler) {\n            this.requestData.requestEventDebugHandler('response', { res });\n            res.on('aborted', error => this.requestData.requestEventDebugHandler('response-aborted', { error }));\n            res.on('error', error => this.requestData.requestEventDebugHandler('response-error', { error }));\n            res.on('close', () => this.requestData.requestEventDebugHandler('response-close', { data: this.responseData }));\n            res.on('end', () => this.requestData.requestEventDebugHandler('response-end'));\n        }\n    }\n    onResponseEndHandler(resolve, reject) {\n        const rateLimit = this.getRateLimitFromResponse(this.res);\n        let data;\n        try {\n            data = this.getParsedResponse(this.res);\n        }\n        catch (e) {\n            reject(this.createPartialResponseError(e, false));\n            return;\n        }\n        // Handle bad error codes\n        const code = this.res.statusCode;\n        if (code >= 400) {\n            reject(this.createResponseError({ data, res: this.res, rateLimit, code }));\n            return;\n        }\n        if (settings_1.TwitterApiV2Settings.debug) {\n            settings_1.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${this.res.statusCode}`);\n            settings_1.TwitterApiV2Settings.logger.log('Response body:', data);\n        }\n        resolve({\n            data,\n            headers: this.res.headers,\n            rateLimit,\n        });\n    }\n    onResponseCloseHandler(resolve, reject) {\n        const res = this.res;\n        if (res.aborted) {\n            // Try to parse the request (?)\n            try {\n                this.getParsedResponse(this.res);\n                // Ok, try to resolve normally the request\n                return this.onResponseEndHandler(resolve, reject);\n            }\n            catch (e) {\n                // Parse error, just drop with content\n                return reject(this.createPartialResponseError(e, true));\n            }\n        }\n        if (!res.complete) {\n            return reject(this.createPartialResponseError(new Error('Response has been interrupted before response could be parsed.'), true));\n        }\n        // else: end has been called\n    }\n    streamResponseHandler(resolve, reject, res) {\n        const code = res.statusCode;\n        if (code < 400) {\n            if (settings_1.TwitterApiV2Settings.debug) {\n                settings_1.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode} (starting stream)`);\n            }\n            const dataStream = this.getResponseDataStream(res);\n            // HTTP code ok, consume stream\n            resolve({ req: this.req, res: dataStream, originalResponse: res, requestData: this.requestData });\n        }\n        else {\n            // Handle response normally, can only rejects\n            this.classicResponseHandler(() => undefined, reject, res);\n        }\n    }\n    /* Wrappers for request lifecycle */\n    debugRequest() {\n        const url = this.requestData.url;\n        settings_1.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]`, this.requestData.options);\n        if (url.search) {\n            settings_1.TwitterApiV2Settings.logger.log('Request parameters:', [...url.searchParams.entries()].map(([key, value]) => `${key}: ${value}`));\n        }\n        if (this.requestData.body) {\n            settings_1.TwitterApiV2Settings.logger.log('Request body:', this.requestData.body);\n        }\n    }\n    buildRequest() {\n        var _a;\n        const url = this.requestData.url;\n        const auth = url.username ? `${url.username}:${url.password}` : undefined;\n        const headers = (_a = this.requestData.options.headers) !== null && _a !== void 0 ? _a : {};\n        if (this.requestData.compression === true || this.requestData.compression === 'brotli') {\n            headers['accept-encoding'] = 'br;q=1.0, gzip;q=0.8, deflate;q=0.5, *;q=0.1';\n        }\n        else if (this.requestData.compression === 'gzip') {\n            headers['accept-encoding'] = 'gzip;q=1, deflate;q=0.5, *;q=0.1';\n        }\n        else if (this.requestData.compression === 'deflate') {\n            headers['accept-encoding'] = 'deflate;q=1, *;q=0.1';\n        }\n        if (settings_1.TwitterApiV2Settings.debug) {\n            this.debugRequest();\n        }\n        this.req = (0, https_1.request)({\n            ...this.requestData.options,\n            // Define URL params manually, addresses dependencies error https://github.com/PLhery/node-twitter-api-v2/issues/94\n            host: url.hostname,\n            port: url.port || undefined,\n            path: url.pathname + url.search,\n            protocol: url.protocol,\n            auth,\n            headers,\n        });\n    }\n    registerRequestEventDebugHandlers(req) {\n        req.on('close', () => this.requestData.requestEventDebugHandler('close'));\n        req.on('abort', () => this.requestData.requestEventDebugHandler('abort'));\n        req.on('socket', socket => {\n            this.requestData.requestEventDebugHandler('socket', { socket });\n            socket.on('error', error => this.requestData.requestEventDebugHandler('socket-error', { socket, error }));\n            socket.on('connect', () => this.requestData.requestEventDebugHandler('socket-connect', { socket }));\n            socket.on('close', withError => this.requestData.requestEventDebugHandler('socket-close', { socket, withError }));\n            socket.on('end', () => this.requestData.requestEventDebugHandler('socket-end', { socket }));\n            socket.on('lookup', (...data) => this.requestData.requestEventDebugHandler('socket-lookup', { socket, data }));\n            socket.on('timeout', () => this.requestData.requestEventDebugHandler('socket-timeout', { socket }));\n        });\n    }\n    makeRequest() {\n        this.buildRequest();\n        return new Promise((_resolve, _reject) => {\n            // Hooks to call when promise is fulfulled to cleanup the socket (shared between requests)\n            const resolve = value => {\n                cleanupListener.emit('complete');\n                _resolve(value);\n            };\n            const reject = value => {\n                cleanupListener.emit('complete');\n                _reject(value);\n            };\n            const cleanupListener = new events_1.EventEmitter();\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('socket', this.onSocketEventHandler.bind(this, reject, cleanupListener));\n            req.on('response', this.classicResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.options.timeout) {\n                req.on('timeout', this.timeoutErrorHandler.bind(this));\n            }\n            // Debug handlers\n            if (this.requestData.requestEventDebugHandler) {\n                this.registerRequestEventDebugHandlers(req);\n            }\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n    async makeRequestAsStream() {\n        const { req, res, requestData, originalResponse } = await this.makeRequestAndResolveWhenReady();\n        return new TweetStream_1.default(requestData, { req, res, originalResponse });\n    }\n    makeRequestAndResolveWhenReady() {\n        this.buildRequest();\n        return new Promise((resolve, reject) => {\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('response', this.streamResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n}\nexports.RequestHandlerHelper = RequestHandlerHelper;\nexports.default = RequestHandlerHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetStreamEventCombiner = void 0;\nconst events_1 = require(\"events\");\nconst types_1 = require(\"../types\");\nclass TweetStreamEventCombiner extends events_1.EventEmitter {\n    constructor(stream) {\n        super();\n        this.stream = stream;\n        this.stack = [];\n        this.onStreamData = this.onStreamData.bind(this);\n        this.onStreamError = this.onStreamError.bind(this);\n        this.onceNewEvent = this.once.bind(this, 'event');\n        // Init events from stream\n        stream.on(types_1.ETwitterStreamEvent.Data, this.onStreamData);\n        // Ignore reconnect errors: Don't close event combiner until connection error/closed\n        stream.on(types_1.ETwitterStreamEvent.ConnectionError, this.onStreamError);\n        stream.on(types_1.ETwitterStreamEvent.TweetParseError, this.onStreamError);\n        stream.on(types_1.ETwitterStreamEvent.ConnectionClosed, this.onStreamError);\n    }\n    /** Returns a new `Promise` that will `resolve` on next event (`data` or any sort of error). */\n    nextEvent() {\n        return new Promise(this.onceNewEvent);\n    }\n    /** Returns `true` if there's something in the stack. */\n    hasStack() {\n        return this.stack.length > 0;\n    }\n    /** Returns stacked data events, and clean the stack. */\n    popStack() {\n        const stack = this.stack;\n        this.stack = [];\n        return stack;\n    }\n    /** Cleanup all the listeners attached on stream. */\n    destroy() {\n        this.removeAllListeners();\n        this.stream.off(types_1.ETwitterStreamEvent.Data, this.onStreamData);\n        this.stream.off(types_1.ETwitterStreamEvent.ConnectionError, this.onStreamError);\n        this.stream.off(types_1.ETwitterStreamEvent.TweetParseError, this.onStreamError);\n        this.stream.off(types_1.ETwitterStreamEvent.ConnectionClosed, this.onStreamError);\n    }\n    emitEvent(type, payload) {\n        this.emit('event', { type, payload });\n    }\n    onStreamError(payload) {\n        this.emitEvent('error', payload);\n    }\n    onStreamData(payload) {\n        this.stack.push(payload);\n        this.emitEvent('data', payload);\n    }\n}\nexports.TweetStreamEventCombiner = TweetStreamEventCombiner;\nexports.default = TweetStreamEventCombiner;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EStreamParserEvent = void 0;\nconst events_1 = require(\"events\");\nclass TweetStreamParser extends events_1.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.currentMessage = '';\n    }\n    // Code partially belongs to twitter-stream-api for this\n    // https://github.com/trygve-lie/twitter-stream-api/blob/master/lib/parser.js\n    push(chunk) {\n        this.currentMessage += chunk;\n        chunk = this.currentMessage;\n        const size = chunk.length;\n        let start = 0;\n        let offset = 0;\n        while (offset < size) {\n            // Take [offset, offset+1] inside a new string\n            if (chunk.slice(offset, offset + 2) === '\\r\\n') {\n                // If chunk contains \\r\\n after current offset,\n                // parse [start, ..., offset] as a tweet\n                const piece = chunk.slice(start, offset);\n                start = offset += 2;\n                // If empty object\n                if (!piece.length) {\n                    continue;\n                }\n                try {\n                    const payload = JSON.parse(piece);\n                    if (payload) {\n                        this.emit(EStreamParserEvent.ParsedData, payload);\n                        continue;\n                    }\n                }\n                catch (error) {\n                    this.emit(EStreamParserEvent.ParseError, error);\n                }\n            }\n            offset++;\n        }\n        this.currentMessage = chunk.slice(start, size);\n    }\n    /** Reset the currently stored message (f.e. on connection reset) */\n    reset() {\n        this.currentMessage = '';\n    }\n}\nexports.default = TweetStreamParser;\nvar EStreamParserEvent;\n(function (EStreamParserEvent) {\n    EStreamParserEvent[\"ParsedData\"] = \"parsed data\";\n    EStreamParserEvent[\"ParseError\"] = \"parse error\";\n})(EStreamParserEvent = exports.EStreamParserEvent || (exports.EStreamParserEvent = {}));\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetStream = void 0;\nconst events_1 = require(\"events\");\nconst request_handler_helper_1 = __importDefault(require(\"../client-mixins/request-handler.helper\"));\nconst types_1 = require(\"../types\");\nconst TweetStreamEventCombiner_1 = __importDefault(require(\"./TweetStreamEventCombiner\"));\nconst TweetStreamParser_1 = __importStar(require(\"./TweetStreamParser\"));\n// In seconds\nconst basicRetriesAttempt = [5, 15, 30, 60, 90, 120, 180, 300, 600, 900];\n// Default retry function\nconst basicReconnectRetry = tryOccurrence => tryOccurrence > basicRetriesAttempt.length\n    ? 901000\n    : basicRetriesAttempt[tryOccurrence - 1] * 1000;\nclass TweetStream extends events_1.EventEmitter {\n    constructor(requestData, connection) {\n        super();\n        this.requestData = requestData;\n        this.autoReconnect = false;\n        this.autoReconnectRetries = 5;\n        // 2 minutes without any Twitter signal\n        this.keepAliveTimeoutMs = 1000 * 120;\n        this.nextRetryTimeout = basicReconnectRetry;\n        this.parser = new TweetStreamParser_1.default();\n        this.connectionProcessRunning = false;\n        this.onKeepAliveTimeout = this.onKeepAliveTimeout.bind(this);\n        this.initEventsFromParser();\n        if (connection) {\n            this.req = connection.req;\n            this.res = connection.res;\n            this.originalResponse = connection.originalResponse;\n            this.initEventsFromRequest();\n        }\n    }\n    on(event, handler) {\n        return super.on(event, handler);\n    }\n    initEventsFromRequest() {\n        if (!this.req || !this.res) {\n            throw new Error('TweetStream error: You cannot init TweetStream without a request and response object.');\n        }\n        const errorHandler = (err) => {\n            this.emit(types_1.ETwitterStreamEvent.ConnectionError, err);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.ConnectionError,\n                error: err,\n                message: 'Connection lost or closed by Twitter.',\n            });\n            this.onConnectionError();\n        };\n        this.req.on('error', errorHandler);\n        this.res.on('error', errorHandler);\n        // Usually, connection should not be closed by Twitter!\n        this.res.on('close', () => errorHandler(new Error('Connection closed by Twitter.')));\n        this.res.on('data', (chunk) => {\n            this.resetKeepAliveTimeout();\n            if (chunk.toString() === '\\r\\n') {\n                return this.emit(types_1.ETwitterStreamEvent.DataKeepAlive);\n            }\n            this.parser.push(chunk.toString());\n        });\n        // Starts the keep alive timeout\n        this.resetKeepAliveTimeout();\n    }\n    initEventsFromParser() {\n        const payloadIsError = this.requestData.payloadIsError;\n        this.parser.on(TweetStreamParser_1.EStreamParserEvent.ParsedData, (eventData) => {\n            if (payloadIsError && payloadIsError(eventData)) {\n                this.emit(types_1.ETwitterStreamEvent.DataError, eventData);\n                this.emit(types_1.ETwitterStreamEvent.Error, {\n                    type: types_1.ETwitterStreamEvent.DataError,\n                    error: eventData,\n                    message: 'Twitter sent a payload that is detected as an error payload.',\n                });\n            }\n            else {\n                this.emit(types_1.ETwitterStreamEvent.Data, eventData);\n            }\n        });\n        this.parser.on(TweetStreamParser_1.EStreamParserEvent.ParseError, (error) => {\n            this.emit(types_1.ETwitterStreamEvent.TweetParseError, error);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.TweetParseError,\n                error,\n                message: 'Failed to parse stream data.',\n            });\n        });\n    }\n    resetKeepAliveTimeout() {\n        this.unbindKeepAliveTimeout();\n        if (this.keepAliveTimeoutMs !== Infinity) {\n            this.keepAliveTimeout = setTimeout(this.onKeepAliveTimeout, this.keepAliveTimeoutMs);\n        }\n    }\n    onKeepAliveTimeout() {\n        this.emit(types_1.ETwitterStreamEvent.ConnectionLost);\n        this.onConnectionError();\n    }\n    unbindTimeouts() {\n        this.unbindRetryTimeout();\n        this.unbindKeepAliveTimeout();\n    }\n    unbindKeepAliveTimeout() {\n        if (this.keepAliveTimeout) {\n            clearTimeout(this.keepAliveTimeout);\n            this.keepAliveTimeout = undefined;\n        }\n    }\n    unbindRetryTimeout() {\n        if (this.retryTimeout) {\n            clearTimeout(this.retryTimeout);\n            this.retryTimeout = undefined;\n        }\n    }\n    closeWithoutEmit() {\n        this.unbindTimeouts();\n        if (this.res) {\n            this.res.removeAllListeners();\n            // Close response silently\n            this.res.destroy();\n        }\n        if (this.req) {\n            this.req.removeAllListeners();\n            // Close connection silently\n            this.req.destroy();\n        }\n    }\n    /** Terminate connection to Twitter. */\n    close() {\n        this.emit(types_1.ETwitterStreamEvent.ConnectionClosed);\n        this.closeWithoutEmit();\n    }\n    /** Unbind all listeners, and close connection. */\n    destroy() {\n        this.removeAllListeners();\n        this.close();\n    }\n    /**\n     * Make a new request that creates a new `TweetStream` instance with\n     * the same parameters, and bind current listeners to new stream.\n     */\n    async clone() {\n        const newRequest = new request_handler_helper_1.default(this.requestData);\n        const newStream = await newRequest.makeRequestAsStream();\n        // Clone attached listeners\n        const listenerNames = this.eventNames();\n        for (const listener of listenerNames) {\n            const callbacks = this.listeners(listener);\n            for (const callback of callbacks) {\n                newStream.on(listener, callback);\n            }\n        }\n        return newStream;\n    }\n    /** Start initial stream connection, setup options on current instance and returns itself. */\n    async connect(options = {}) {\n        if (typeof options.autoReconnect !== 'undefined') {\n            this.autoReconnect = options.autoReconnect;\n        }\n        if (typeof options.autoReconnectRetries !== 'undefined') {\n            this.autoReconnectRetries = options.autoReconnectRetries === 'unlimited'\n                ? Infinity\n                : options.autoReconnectRetries;\n        }\n        if (typeof options.keepAliveTimeout !== 'undefined') {\n            this.keepAliveTimeoutMs = options.keepAliveTimeout === 'disable'\n                ? Infinity\n                : options.keepAliveTimeout;\n        }\n        if (typeof options.nextRetryTimeout !== 'undefined') {\n            this.nextRetryTimeout = options.nextRetryTimeout;\n        }\n        // Make the connection\n        this.unbindTimeouts();\n        try {\n            await this.reconnect();\n        }\n        catch (e) {\n            this.emit(types_1.ETwitterStreamEvent.ConnectError, 0);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.ConnectError,\n                error: e,\n                message: 'Connect error - Initial connection just failed.',\n            });\n            // Only make a reconnection attempt if autoReconnect is true!\n            // Otherwise, let error be propagated\n            if (this.autoReconnect) {\n                this.makeAutoReconnectRetry(0, e);\n            }\n            else {\n                throw e;\n            }\n        }\n        return this;\n    }\n    /** Make a new request to (re)connect to Twitter. */\n    async reconnect() {\n        if (this.connectionProcessRunning) {\n            throw new Error('Connection process is already running.');\n        }\n        this.connectionProcessRunning = true;\n        try {\n            let initialConnection = true;\n            if (this.req) {\n                initialConnection = false;\n                this.closeWithoutEmit();\n            }\n            const { req, res, originalResponse } = await new request_handler_helper_1.default(this.requestData).makeRequestAndResolveWhenReady();\n            this.req = req;\n            this.res = res;\n            this.originalResponse = originalResponse;\n            this.emit(initialConnection ? types_1.ETwitterStreamEvent.Connected : types_1.ETwitterStreamEvent.Reconnected);\n            this.parser.reset();\n            this.initEventsFromRequest();\n        }\n        finally {\n            this.connectionProcessRunning = false;\n        }\n    }\n    async onConnectionError(retryOccurrence = 0) {\n        this.unbindTimeouts();\n        // Close the request if necessary\n        this.closeWithoutEmit();\n        // Terminate stream by events if necessary (no auto-reconnect or retries exceeded)\n        if (!this.autoReconnect) {\n            this.emit(types_1.ETwitterStreamEvent.ConnectionClosed);\n            return;\n        }\n        if (retryOccurrence >= this.autoReconnectRetries) {\n            this.emit(types_1.ETwitterStreamEvent.ReconnectLimitExceeded);\n            this.emit(types_1.ETwitterStreamEvent.ConnectionClosed);\n            return;\n        }\n        // If all other conditions fails, do a reconnect attempt\n        try {\n            this.emit(types_1.ETwitterStreamEvent.ReconnectAttempt, retryOccurrence);\n            await this.reconnect();\n        }\n        catch (e) {\n            this.emit(types_1.ETwitterStreamEvent.ReconnectError, retryOccurrence);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.ReconnectError,\n                error: e,\n                message: `Reconnect error - ${retryOccurrence + 1} attempts made yet.`,\n            });\n            this.makeAutoReconnectRetry(retryOccurrence, e);\n        }\n    }\n    makeAutoReconnectRetry(retryOccurrence, error) {\n        const nextRetry = this.nextRetryTimeout(retryOccurrence + 1, error);\n        this.retryTimeout = setTimeout(() => {\n            this.onConnectionError(retryOccurrence + 1);\n        }, nextRetry);\n    }\n    async *[Symbol.asyncIterator]() {\n        const eventCombiner = new TweetStreamEventCombiner_1.default(this);\n        try {\n            while (true) {\n                if (!this.req || this.req.aborted) {\n                    throw new Error('Connection closed');\n                }\n                if (eventCombiner.hasStack()) {\n                    yield* eventCombiner.popStack();\n                }\n                const { type, payload } = await eventCombiner.nextEvent();\n                if (type === 'error') {\n                    throw payload;\n                }\n            }\n        }\n        finally {\n            eventCombiner.destroy();\n        }\n    }\n}\nexports.TweetStream = TweetStream;\nexports.default = TweetStream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyResponseHooks = exports.hasRequestErrorPlugins = void 0;\nconst types_1 = require(\"../types\");\n/* Plugin helpers */\nfunction hasRequestErrorPlugins(client) {\n    var _a;\n    if (!((_a = client.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length)) {\n        return false;\n    }\n    for (const plugin of client.clientSettings.plugins) {\n        if (plugin.onRequestError || plugin.onResponseError) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasRequestErrorPlugins = hasRequestErrorPlugins;\nasync function applyResponseHooks(requestParams, computedParams, requestOptions, error) {\n    let override;\n    if (error instanceof types_1.ApiRequestError || error instanceof types_1.ApiPartialResponseError) {\n        override = await this.applyPluginMethod('onRequestError', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            error,\n        });\n    }\n    else if (error instanceof types_1.ApiResponseError) {\n        override = await this.applyPluginMethod('onResponseError', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            error,\n        });\n    }\n    if (override && override instanceof types_1.TwitterApiPluginResponseOverride) {\n        return override.value;\n    }\n    return Promise.reject(error);\n}\nexports.applyResponseHooks = applyResponseHooks;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth1Helper = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nclass OAuth1Helper {\n    constructor(options) {\n        this.nonceLength = 32;\n        this.consumerKeys = options.consumerKeys;\n    }\n    static percentEncode(str) {\n        return encodeURIComponent(str)\n            .replace(/!/g, '%21')\n            .replace(/\\*/g, '%2A')\n            .replace(/'/g, '%27')\n            .replace(/\\(/g, '%28')\n            .replace(/\\)/g, '%29');\n    }\n    hash(base, key) {\n        return crypto\n            .createHmac('sha1', key)\n            .update(base)\n            .digest('base64');\n    }\n    authorize(request, accessTokens = {}) {\n        const oauthInfo = {\n            oauth_consumer_key: this.consumerKeys.key,\n            oauth_nonce: this.getNonce(),\n            oauth_signature_method: 'HMAC-SHA1',\n            oauth_timestamp: this.getTimestamp(),\n            oauth_version: '1.0',\n        };\n        if (accessTokens.key !== undefined) {\n            oauthInfo.oauth_token = accessTokens.key;\n        }\n        if (!request.data) {\n            request.data = {};\n        }\n        oauthInfo.oauth_signature = this.getSignature(request, accessTokens.secret, oauthInfo);\n        return oauthInfo;\n    }\n    toHeader(oauthInfo) {\n        const sorted = sortObject(oauthInfo);\n        let header_value = 'OAuth ';\n        for (const element of sorted) {\n            if (element.key.indexOf('oauth_') !== 0) {\n                continue;\n            }\n            header_value += OAuth1Helper.percentEncode(element.key) + '=\"' + OAuth1Helper.percentEncode(element.value) + '\",';\n        }\n        return {\n            // Remove the last ,\n            Authorization: header_value.slice(0, header_value.length - 1),\n        };\n    }\n    getNonce() {\n        const wordCharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        let result = '';\n        for (let i = 0; i < this.nonceLength; i++) {\n            result += wordCharacters[Math.trunc(Math.random() * wordCharacters.length)];\n        }\n        return result;\n    }\n    getTimestamp() {\n        return Math.trunc(new Date().getTime() / 1000);\n    }\n    getSignature(request, tokenSecret, oauthInfo) {\n        return this.hash(this.getBaseString(request, oauthInfo), this.getSigningKey(tokenSecret));\n    }\n    getSigningKey(tokenSecret) {\n        return OAuth1Helper.percentEncode(this.consumerKeys.secret) + '&' + OAuth1Helper.percentEncode(tokenSecret || '');\n    }\n    getBaseString(request, oauthInfo) {\n        return request.method.toUpperCase() + '&'\n            + OAuth1Helper.percentEncode(this.getBaseUrl(request.url)) + '&'\n            + OAuth1Helper.percentEncode(this.getParameterString(request, oauthInfo));\n    }\n    getParameterString(request, oauthInfo) {\n        const baseStringData = sortObject(percentEncodeData(mergeObject(oauthInfo, mergeObject(request.data, deParamUrl(request.url)))));\n        let dataStr = '';\n        for (const { key, value } of baseStringData) {\n            // check if the value is an array\n            // this means that this key has multiple values\n            if (value && Array.isArray(value)) {\n                // sort the array first\n                value.sort();\n                let valString = '';\n                // serialize all values for this key: e.g. formkey=formvalue1&formkey=formvalue2\n                value.forEach((item, i) => {\n                    valString += key + '=' + item;\n                    if (i < value.length) {\n                        valString += '&';\n                    }\n                });\n                dataStr += valString;\n            }\n            else {\n                dataStr += key + '=' + value + '&';\n            }\n        }\n        // Remove the last character\n        return dataStr.slice(0, dataStr.length - 1);\n    }\n    getBaseUrl(url) {\n        return url.split('?')[0];\n    }\n}\nexports.OAuth1Helper = OAuth1Helper;\nexports.default = OAuth1Helper;\n// Helper functions //\nfunction mergeObject(obj1, obj2) {\n    return {\n        ...obj1 || {},\n        ...obj2 || {},\n    };\n}\nfunction sortObject(data) {\n    return Object.keys(data)\n        .sort()\n        .map(key => ({ key, value: data[key] }));\n}\nfunction deParam(string) {\n    const split = string.split('&');\n    const data = {};\n    for (const coupleKeyValue of split) {\n        const [key, value = ''] = coupleKeyValue.split('=');\n        // check if the key already exists\n        // this can occur if the QS part of the url contains duplicate keys like this: ?formkey=formvalue1&formkey=formvalue2\n        if (data[key]) {\n            // the key exists already\n            if (!Array.isArray(data[key])) {\n                // replace the value with an array containing the already present value\n                data[key] = [data[key]];\n            }\n            // and add the new found value to it\n            data[key].push(decodeURIComponent(value));\n        }\n        else {\n            // it doesn't exist, just put the found value in the data object\n            data[key] = decodeURIComponent(value);\n        }\n    }\n    return data;\n}\nfunction deParamUrl(url) {\n    const tmp = url.split('?');\n    if (tmp.length === 1)\n        return {};\n    return deParam(tmp[1]);\n}\nfunction percentEncodeData(data) {\n    const result = {};\n    for (const key in data) {\n        let value = data[key];\n        // check if the value is an array\n        if (value && Array.isArray(value)) {\n            value = value.map(v => OAuth1Helper.percentEncode(v));\n        }\n        else {\n            value = OAuth1Helper.percentEncode(value);\n        }\n        result[OAuth1Helper.percentEncode(key)] = value;\n    }\n    return result;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormDataHelper = void 0;\nconst helpers_1 = require(\"../helpers\");\n// This class is partially inspired by https://github.com/form-data/form-data/blob/master/lib/form_data.js\n// All credits to their authors.\nclass FormDataHelper {\n    constructor() {\n        this._boundary = '';\n        this._chunks = [];\n    }\n    bodyAppend(...values) {\n        const allAsBuffer = values.map(val => val instanceof Buffer ? val : Buffer.from(val));\n        this._chunks.push(...allAsBuffer);\n    }\n    append(field, value, contentType) {\n        const convertedValue = value instanceof Buffer ? value : value.toString();\n        const header = this.getMultipartHeader(field, convertedValue, contentType);\n        this.bodyAppend(header, convertedValue, FormDataHelper.LINE_BREAK);\n    }\n    getHeaders() {\n        return {\n            'content-type': 'multipart/form-data; boundary=' + this.getBoundary(),\n        };\n    }\n    /** Length of form-data (including footer length). */\n    getLength() {\n        return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);\n    }\n    getBuffer() {\n        const allChunks = [...this._chunks, this.getMultipartFooter()];\n        const totalBuffer = Buffer.alloc(this.getLength());\n        let i = 0;\n        for (const chunk of allChunks) {\n            for (let j = 0; j < chunk.length; i++, j++) {\n                totalBuffer[i] = chunk[j];\n            }\n        }\n        return totalBuffer;\n    }\n    getBoundary() {\n        if (!this._boundary) {\n            this.generateBoundary();\n        }\n        return this._boundary;\n    }\n    generateBoundary() {\n        // This generates a 50 character boundary similar to those used by Firefox.\n        let boundary = '--------------------------';\n        for (let i = 0; i < 24; i++) {\n            boundary += Math.floor(Math.random() * 10).toString(16);\n        }\n        this._boundary = boundary;\n    }\n    getMultipartHeader(field, value, contentType) {\n        // In this lib no need to guess more the content type, octet stream is ok of buffers\n        if (!contentType) {\n            contentType = value instanceof Buffer ? FormDataHelper.DEFAULT_CONTENT_TYPE : '';\n        }\n        const headers = {\n            'Content-Disposition': ['form-data', `name=\"${field}\"`],\n            'Content-Type': contentType,\n        };\n        let contents = '';\n        for (const [prop, header] of Object.entries(headers)) {\n            // skip nullish headers.\n            if (!header.length) {\n                continue;\n            }\n            contents += prop + ': ' + (0, helpers_1.arrayWrap)(header).join('; ') + FormDataHelper.LINE_BREAK;\n        }\n        return '--' + this.getBoundary() + FormDataHelper.LINE_BREAK + contents + FormDataHelper.LINE_BREAK;\n    }\n    getMultipartFooter() {\n        if (this._footerChunk) {\n            return this._footerChunk;\n        }\n        return this._footerChunk = Buffer.from('--' + this.getBoundary() + '--' + FormDataHelper.LINE_BREAK);\n    }\n}\nexports.FormDataHelper = FormDataHelper;\nFormDataHelper.LINE_BREAK = '\\r\\n';\nFormDataHelper.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestParamHelpers = void 0;\nconst form_data_helper_1 = require(\"./form-data.helper\");\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\n/* Helpers functions that are specific to this class but do not depends on instance */\nclass RequestParamHelpers {\n    static formatQueryToString(query) {\n        const formattedQuery = {};\n        for (const prop in query) {\n            if (typeof query[prop] === 'string') {\n                formattedQuery[prop] = query[prop];\n            }\n            else if (typeof query[prop] !== 'undefined') {\n                formattedQuery[prop] = String(query[prop]);\n            }\n        }\n        return formattedQuery;\n    }\n    static autoDetectBodyType(url) {\n        if (url.pathname.startsWith('/2/') || url.pathname.startsWith('/labs/2/')) {\n            // oauth2 takes url encoded\n            if (url.password.startsWith('/2/oauth2')) {\n                return 'url';\n            }\n            // Twitter API v2 has JSON-encoded requests for everything else\n            return 'json';\n        }\n        if (url.hostname === 'upload.twitter.com') {\n            if (url.pathname === '/1.1/media/upload.json') {\n                return 'form-data';\n            }\n            // json except for media/upload command, that is form-data.\n            return 'json';\n        }\n        const endpoint = url.pathname.split('/1.1/', 2)[1];\n        if (this.JSON_1_1_ENDPOINTS.has(endpoint)) {\n            return 'json';\n        }\n        return 'url';\n    }\n    static addQueryParamsToUrl(url, query) {\n        const queryEntries = Object.entries(query);\n        if (queryEntries.length) {\n            let search = '';\n            for (const [key, value] of queryEntries) {\n                search += (search.length ? '&' : '?') + `${oauth1_helper_1.default.percentEncode(key)}=${oauth1_helper_1.default.percentEncode(value)}`;\n            }\n            url.search = search;\n        }\n    }\n    static constructBodyParams(body, headers, mode) {\n        if (body instanceof Buffer) {\n            return body;\n        }\n        if (mode === 'json') {\n            if (!headers['content-type']) {\n                headers['content-type'] = 'application/json;charset=UTF-8';\n            }\n            return JSON.stringify(body);\n        }\n        else if (mode === 'url') {\n            if (!headers['content-type']) {\n                headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n            }\n            if (Object.keys(body).length) {\n                return new URLSearchParams(body)\n                    .toString()\n                    .replace(/\\*/g, '%2A'); // URLSearchParams doesnt encode '*', but Twitter wants it encoded.\n            }\n            return '';\n        }\n        else if (mode === 'raw') {\n            throw new Error('You can only use raw body mode with Buffers. To give a string, use Buffer.from(str).');\n        }\n        else {\n            const form = new form_data_helper_1.FormDataHelper();\n            for (const parameter in body) {\n                form.append(parameter, body[parameter]);\n            }\n            if (!headers['content-type']) {\n                const formHeaders = form.getHeaders();\n                headers['content-type'] = formHeaders['content-type'];\n            }\n            return form.getBuffer();\n        }\n    }\n    static setBodyLengthHeader(options, body) {\n        var _a;\n        options.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : {};\n        if (typeof body === 'string') {\n            options.headers['content-length'] = Buffer.byteLength(body);\n        }\n        else {\n            options.headers['content-length'] = body.length;\n        }\n    }\n    static isOAuthSerializable(item) {\n        return !(item instanceof Buffer);\n    }\n    static mergeQueryAndBodyForOAuth(query, body) {\n        const parameters = {};\n        for (const prop in query) {\n            parameters[prop] = query[prop];\n        }\n        if (this.isOAuthSerializable(body)) {\n            for (const prop in body) {\n                const bodyProp = body[prop];\n                if (this.isOAuthSerializable(bodyProp)) {\n                    parameters[prop] = typeof bodyProp === 'object' && bodyProp !== null && 'toString' in bodyProp\n                        ? bodyProp.toString()\n                        : bodyProp;\n                }\n            }\n        }\n        return parameters;\n    }\n    static moveUrlQueryParamsIntoObject(url, query) {\n        for (const [param, value] of url.searchParams) {\n            query[param] = value;\n        }\n        // Remove the query string\n        url.search = '';\n        return url;\n    }\n    /**\n     * Replace URL parameters available in pathname, like `:id`, with data given in `parameters`:\n     * `https://twitter.com/:id.json` + `{ id: '20' }` => `https://twitter.com/20.json`\n     */\n    static applyRequestParametersToUrl(url, parameters) {\n        url.pathname = url.pathname.replace(/:([A-Z_-]+)/ig, (fullMatch, paramName) => {\n            if (parameters[paramName] !== undefined) {\n                return String(parameters[paramName]);\n            }\n            return fullMatch;\n        });\n        return url;\n    }\n}\nexports.RequestParamHelpers = RequestParamHelpers;\nRequestParamHelpers.JSON_1_1_ENDPOINTS = new Set([\n    'direct_messages/events/new.json',\n    'direct_messages/welcome_messages/new.json',\n    'direct_messages/welcome_messages/rules/new.json',\n    'media/metadata/create.json',\n    'collections/entries/curate.json',\n]);\nexports.default = RequestParamHelpers;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2Helper = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nclass OAuth2Helper {\n    static getCodeVerifier() {\n        return this.generateRandomString(128);\n    }\n    static getCodeChallengeFromVerifier(verifier) {\n        return this.escapeBase64Url(crypto\n            .createHash('sha256')\n            .update(verifier)\n            .digest('base64'));\n    }\n    static getAuthHeader(clientId, clientSecret) {\n        const key = encodeURIComponent(clientId) + ':' + encodeURIComponent(clientSecret);\n        return Buffer.from(key).toString('base64');\n    }\n    static generateRandomString(length) {\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        for (let i = 0; i < length; i++) {\n            text += possible[Math.floor(Math.random() * possible.length)];\n        }\n        return text;\n    }\n    static escapeBase64Url(string) {\n        return string.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n}\nexports.OAuth2Helper = OAuth2Helper;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientRequestMaker = void 0;\nconst types_1 = require(\"../types\");\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nconst helpers_1 = require(\"../plugins/helpers\");\nconst helpers_2 = require(\"../helpers\");\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\nconst request_handler_helper_1 = __importDefault(require(\"./request-handler.helper\"));\nconst request_param_helper_1 = __importDefault(require(\"./request-param.helper\"));\nconst oauth2_helper_1 = require(\"./oauth2.helper\");\nclass ClientRequestMaker {\n    constructor(settings) {\n        this.rateLimits = {};\n        this.clientSettings = {};\n        if (settings) {\n            this.clientSettings = settings;\n        }\n    }\n    /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */\n    getRateLimits() {\n        return this.rateLimits;\n    }\n    saveRateLimit(originalUrl, rateLimit) {\n        this.rateLimits[originalUrl] = rateLimit;\n    }\n    /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */\n    async send(requestParams) {\n        var _a, _b, _c, _d, _e;\n        // Pre-request config hooks\n        if ((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length) {\n            const possibleResponse = await this.applyPreRequestConfigHooks(requestParams);\n            if (possibleResponse) {\n                return possibleResponse;\n            }\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            timeout: requestParams.timeout,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        // Pre-request hooks\n        if ((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length) {\n            await this.applyPreRequestHooks(requestParams, args, options);\n        }\n        let request = new request_handler_helper_1.default({\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            requestEventDebugHandler: requestParams.requestEventDebugHandler,\n            compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,\n            forceParseMode: requestParams.forceParseMode,\n        })\n            .makeRequest();\n        if ((0, helpers_1.hasRequestErrorPlugins)(this)) {\n            request = this.applyResponseErrorHooks(requestParams, args, options, request);\n        }\n        const response = await request;\n        // Post-request hooks\n        if ((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length) {\n            const responseOverride = await this.applyPostRequestHooks(requestParams, args, options, response);\n            if (responseOverride) {\n                return responseOverride.value;\n            }\n        }\n        return response;\n    }\n    sendStream(requestParams) {\n        var _a, _b;\n        // Pre-request hooks\n        if (this.clientSettings.plugins) {\n            this.applyPreStreamRequestConfigHooks(requestParams);\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        const enableAutoConnect = requestParams.autoConnect !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        const requestData = {\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            payloadIsError: requestParams.payloadIsError,\n            compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true,\n        };\n        const stream = new TweetStream_1.default(requestData);\n        if (!enableAutoConnect) {\n            return stream;\n        }\n        return stream.connect();\n    }\n    /* Token helpers */\n    initializeToken(token) {\n        if (typeof token === 'string') {\n            this.bearerToken = token;\n        }\n        else if (typeof token === 'object' && 'appKey' in token) {\n            this.consumerToken = token.appKey;\n            this.consumerSecret = token.appSecret;\n            if (token.accessToken && token.accessSecret) {\n                this.accessToken = token.accessToken;\n                this.accessSecret = token.accessSecret;\n            }\n            this._oauth = this.buildOAuth();\n        }\n        else if (typeof token === 'object' && 'username' in token) {\n            const key = encodeURIComponent(token.username) + ':' + encodeURIComponent(token.password);\n            this.basicToken = Buffer.from(key).toString('base64');\n        }\n        else if (typeof token === 'object' && 'clientId' in token) {\n            this.clientId = token.clientId;\n            this.clientSecret = token.clientSecret;\n        }\n    }\n    getActiveTokens() {\n        if (this.bearerToken) {\n            return {\n                type: 'oauth2',\n                bearerToken: this.bearerToken,\n            };\n        }\n        else if (this.basicToken) {\n            return {\n                type: 'basic',\n                token: this.basicToken,\n            };\n        }\n        else if (this.consumerSecret && this._oauth) {\n            return {\n                type: 'oauth-1.0a',\n                appKey: this.consumerToken,\n                appSecret: this.consumerSecret,\n                accessToken: this.accessToken,\n                accessSecret: this.accessSecret,\n            };\n        }\n        else if (this.clientId) {\n            return {\n                type: 'oauth2-user',\n                clientId: this.clientId,\n            };\n        }\n        return { type: 'none' };\n    }\n    buildOAuth() {\n        if (!this.consumerSecret || !this.consumerToken)\n            throw new Error('Invalid consumer tokens');\n        return new oauth1_helper_1.default({\n            consumerKeys: { key: this.consumerToken, secret: this.consumerSecret },\n        });\n    }\n    getOAuthAccessTokens() {\n        if (!this.accessSecret || !this.accessToken)\n            return;\n        return {\n            key: this.accessToken,\n            secret: this.accessSecret,\n        };\n    }\n    /* Plugin helpers */\n    getPlugins() {\n        var _a;\n        return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];\n    }\n    hasPlugins() {\n        var _a;\n        return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);\n    }\n    async applyPluginMethod(method, args) {\n        var _a;\n        let returnValue;\n        for (const plugin of this.getPlugins()) {\n            const value = await ((_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args));\n            if (value && value instanceof types_1.TwitterApiPluginResponseOverride) {\n                returnValue = value;\n            }\n        }\n        return returnValue;\n    }\n    /* Request helpers */\n    writeAuthHeaders({ headers, bodyInSignature, url, method, query, body }) {\n        headers = { ...headers };\n        if (this.bearerToken) {\n            headers.Authorization = 'Bearer ' + this.bearerToken;\n        }\n        else if (this.basicToken) {\n            // Basic auth, to request a bearer token\n            headers.Authorization = 'Basic ' + this.basicToken;\n        }\n        else if (this.clientId && this.clientSecret) {\n            // Basic auth with clientId + clientSecret\n            headers.Authorization = 'Basic ' + oauth2_helper_1.OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);\n        }\n        else if (this.consumerSecret && this._oauth) {\n            // Merge query and body\n            const data = bodyInSignature ? request_param_helper_1.default.mergeQueryAndBodyForOAuth(query, body) : query;\n            const auth = this._oauth.authorize({\n                url: url.toString(),\n                method,\n                data,\n            }, this.getOAuthAccessTokens());\n            headers = { ...headers, ...this._oauth.toHeader(auth) };\n        }\n        return headers;\n    }\n    getUrlObjectFromUrlString(url) {\n        // Add protocol to URL if needed\n        if (!url.startsWith('http')) {\n            url = 'https://' + url;\n        }\n        // Convert URL to object that will receive all URL modifications\n        return new URL(url);\n    }\n    getHttpRequestArgs({ url: stringUrl, method, query: rawQuery = {}, body: rawBody = {}, headers, forceBodyMode, enableAuth, params, }) {\n        let body = undefined;\n        method = method.toUpperCase();\n        headers = headers !== null && headers !== void 0 ? headers : {};\n        // Add user agent header (Twitter recommends it)\n        if (!headers['x-user-agent']) {\n            headers['x-user-agent'] = 'Node.twitter-api-v2';\n        }\n        const url = this.getUrlObjectFromUrlString(stringUrl);\n        // URL without query string to save as endpoint name\n        const rawUrl = url.origin + url.pathname;\n        // Apply URL parameters\n        if (params) {\n            request_param_helper_1.default.applyRequestParametersToUrl(url, params);\n        }\n        // Build a URL without anything in QS, and QSP in query\n        const query = request_param_helper_1.default.formatQueryToString(rawQuery);\n        request_param_helper_1.default.moveUrlQueryParamsIntoObject(url, query);\n        // Delete undefined parameters\n        if (!(rawBody instanceof Buffer)) {\n            (0, helpers_2.trimUndefinedProperties)(rawBody);\n        }\n        // OAuth signature should not include parameters when using multipart.\n        const bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : request_param_helper_1.default.autoDetectBodyType(url);\n        // If undefined or true, enable auth by headers\n        if (enableAuth !== false) {\n            // OAuth needs body signature only if body is URL encoded.\n            const bodyInSignature = ClientRequestMaker.BODY_METHODS.has(method) && bodyType === 'url';\n            headers = this.writeAuthHeaders({ headers, bodyInSignature, method, query, url, body: rawBody });\n        }\n        if (ClientRequestMaker.BODY_METHODS.has(method)) {\n            body = request_param_helper_1.default.constructBodyParams(rawBody, headers, bodyType) || undefined;\n        }\n        request_param_helper_1.default.addQueryParamsToUrl(url, query);\n        return {\n            rawUrl,\n            url,\n            method,\n            headers,\n            body,\n        };\n    }\n    /* Plugin helpers */\n    async applyPreRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            const result = await ((_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            }));\n            if (result) {\n                return result;\n            }\n        }\n    }\n    applyPreStreamRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            });\n        }\n    }\n    async applyPreRequestHooks(requestParams, computedParams, requestOptions) {\n        await this.applyPluginMethod('onBeforeRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n        });\n    }\n    async applyPostRequestHooks(requestParams, computedParams, requestOptions, response) {\n        return await this.applyPluginMethod('onAfterRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            response,\n        });\n    }\n    applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {\n        return promise.catch(helpers_1.applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));\n    }\n}\nexports.ClientRequestMaker = ClientRequestMaker;\nClientRequestMaker.BODY_METHODS = new Set(['POST', 'PUT', 'PATCH']);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst request_maker_mixin_1 = require(\"./client-mixins/request-maker.mixin\");\nconst helpers_1 = require(\"./helpers\");\nconst globals_1 = require(\"./globals\");\n/**\n * Base class for Twitter instances\n */\nclass TwitterApiBase {\n    constructor(token, settings = {}) {\n        this._currentUser = null;\n        this._currentUserV2 = null;\n        if (token instanceof TwitterApiBase) {\n            this._requestMaker = token._requestMaker;\n        }\n        else {\n            this._requestMaker = new request_maker_mixin_1.ClientRequestMaker(settings);\n            this._requestMaker.initializeToken(token);\n        }\n    }\n    /* Prefix/Token handling */\n    setPrefix(prefix) {\n        this._prefix = prefix;\n    }\n    cloneWithPrefix(prefix) {\n        const clone = this.constructor(this);\n        clone.setPrefix(prefix);\n        return clone;\n    }\n    getActiveTokens() {\n        return this._requestMaker.getActiveTokens();\n    }\n    /* Rate limit cache / Plugins */\n    getPlugins() {\n        return this._requestMaker.getPlugins();\n    }\n    getPluginOfType(type) {\n        return this.getPlugins().find(plugin => plugin instanceof type);\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Tells if you hit the Twitter rate limit for {endpoint}.\n     * (local data only, this should not ask anything to Twitter)\n     */\n    hasHitRateLimit(endpoint) {\n        var _a;\n        if (this.isRateLimitStatusObsolete(endpoint)) {\n            return false;\n        }\n        return ((_a = this.getLastRateLimitStatus(endpoint)) === null || _a === void 0 ? void 0 : _a.remaining) === 0;\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Tells if you hit the returned Twitter rate limit for {endpoint} has expired.\n     * If client has no saved rate limit data for {endpoint}, this will gives you `true`.\n     */\n    isRateLimitStatusObsolete(endpoint) {\n        const rateLimit = this.getLastRateLimitStatus(endpoint);\n        if (rateLimit === undefined) {\n            return true;\n        }\n        // Timestamps are exprimed in seconds, JS works with ms\n        return (rateLimit.reset * 1000) < Date.now();\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Get the last obtained Twitter rate limit information for {endpoint}.\n     * (local data only, this should not ask anything to Twitter)\n     */\n    getLastRateLimitStatus(endpoint) {\n        const endpointWithPrefix = endpoint.match(/^https?:\\/\\//) ? endpoint : (this._prefix + endpoint);\n        return this._requestMaker.getRateLimits()[endpointWithPrefix];\n    }\n    /* Current user cache */\n    /** Get cached current user. */\n    getCurrentUserObject(forceFetch = false) {\n        if (!forceFetch && this._currentUser) {\n            if (this._currentUser.value) {\n                return Promise.resolve(this._currentUser.value);\n            }\n            return this._currentUser.promise;\n        }\n        this._currentUser = (0, helpers_1.sharedPromise)(() => this.get('account/verify_credentials.json', { tweet_mode: 'extended' }, { prefix: globals_1.API_V1_1_PREFIX }));\n        return this._currentUser.promise;\n    }\n    /**\n     * Get cached current user from v2 API.\n     * This can only be the slimest available `UserV2` object, with only `id`, `name` and `username` properties defined.\n     *\n     * To get a customized `UserV2Result`, use `.v2.me()`\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    getCurrentUserV2Object(forceFetch = false) {\n        if (!forceFetch && this._currentUserV2) {\n            if (this._currentUserV2.value) {\n                return Promise.resolve(this._currentUserV2.value);\n            }\n            return this._currentUserV2.promise;\n        }\n        this._currentUserV2 = (0, helpers_1.sharedPromise)(() => this.get('users/me', undefined, { prefix: globals_1.API_V2_PREFIX }));\n        return this._currentUserV2.promise;\n    }\n    async get(url, query = {}, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'GET',\n            query,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async delete(url, query = {}, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'DELETE',\n            query,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async post(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'POST',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async put(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'PUT',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async patch(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'PATCH',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    getStream(url, query, { prefix = this._prefix, ...rest } = {}) {\n        return this._requestMaker.sendStream({\n            url: prefix ? prefix + url : url,\n            method: 'GET',\n            query,\n            ...rest,\n        });\n    }\n    postStream(url, body, { prefix = this._prefix, ...rest } = {}) {\n        return this._requestMaker.sendStream({\n            url: prefix ? prefix + url : url,\n            method: 'POST',\n            body,\n            ...rest,\n        });\n    }\n}\nexports.default = TwitterApiBase;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_base_1 = __importDefault(require(\"./client.base\"));\n/**\n * Base subclient for every v1 and v2 client.\n */\nclass TwitterApiSubClient extends client_base_1.default {\n    constructor(instance) {\n        if (!(instance instanceof client_base_1.default)) {\n            throw new Error('You must instance SubTwitterApi instance from existing TwitterApi instance.');\n        }\n        super(instance);\n    }\n}\nexports.default = TwitterApiSubClient;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserFavoritesV1Paginator = exports.ListTimelineV1Paginator = exports.UserTimelineV1Paginator = exports.MentionTimelineV1Paginator = exports.HomeTimelineV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass TweetTimelineV1Paginator extends TwitterPaginator_1.default {\n    constructor() {\n        super(...arguments);\n        this.hasFinishedFetch = false;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n            // HINT: This is an approximation, as \"end\" of pagination cannot be safely determined without cursors.\n            this.hasFinishedFetch = result.length === 0;\n        }\n    }\n    getNextQueryParams(maxResults) {\n        const latestId = BigInt(this._realData[this._realData.length - 1].id_str);\n        return {\n            ...this.injectQueryParams(maxResults),\n            max_id: (latestId - BigInt(1)).toString(),\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        return this._realData;\n    }\n    get done() {\n        return super.done || this.hasFinishedFetch;\n    }\n}\n// Timelines\n// Home\nclass HomeTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/home_timeline.json';\n    }\n}\nexports.HomeTimelineV1Paginator = HomeTimelineV1Paginator;\n// Mention\nclass MentionTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/mentions_timeline.json';\n    }\n}\nexports.MentionTimelineV1Paginator = MentionTimelineV1Paginator;\n// User\nclass UserTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/user_timeline.json';\n    }\n}\nexports.UserTimelineV1Paginator = UserTimelineV1Paginator;\n// Lists\nclass ListTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/statuses.json';\n    }\n}\nexports.ListTimelineV1Paginator = ListTimelineV1Paginator;\n// Favorites\nclass UserFavoritesV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'favorites/list.json';\n    }\n}\nexports.UserFavoritesV1Paginator = UserFavoritesV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MuteUserIdsV1Paginator = exports.MuteUserListV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass MuteUserListV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'mutes/users/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nexports.MuteUserListV1Paginator = MuteUserListV1Paginator;\nclass MuteUserIdsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'mutes/users/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.MuteUserIdsV1Paginator = MuteUserIdsV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserFollowerIdsV1Paginator = exports.UserFollowerListV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass UserFollowerListV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'followers/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nexports.UserFollowerListV1Paginator = UserFollowerListV1Paginator;\nclass UserFollowerIdsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'followers/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.UserFollowerIdsV1Paginator = UserFollowerIdsV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserFollowersIdsV1Paginator = exports.UserFriendListV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass UserFriendListV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friends/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nexports.UserFriendListV1Paginator = UserFriendListV1Paginator;\nclass UserFollowersIdsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friends/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.UserFollowersIdsV1Paginator = UserFollowersIdsV1Paginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FriendshipsOutgoingV1Paginator = exports.FriendshipsIncomingV1Paginator = exports.UserSearchV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\nconst paginator_v1_1 = require(\"./paginator.v1\");\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass UserSearchV1Paginator extends TwitterPaginator_1.default {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/search.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n        }\n    }\n    getNextQueryParams(maxResults) {\n        var _a;\n        const previousPage = Number((_a = this._queryParams.page) !== null && _a !== void 0 ? _a : '1');\n        return {\n            ...this._queryParams,\n            page: previousPage + 1,\n            ...maxResults ? { count: maxResults } : {},\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData;\n    }\n}\nexports.UserSearchV1Paginator = UserSearchV1Paginator;\nclass FriendshipsIncomingV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/incoming.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.FriendshipsIncomingV1Paginator = FriendshipsIncomingV1Paginator;\nclass FriendshipsOutgoingV1Paginator extends FriendshipsIncomingV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/outgoing.json';\n    }\n}\nexports.FriendshipsOutgoingV1Paginator = FriendshipsOutgoingV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListSubscribersV1Paginator = exports.ListMembersV1Paginator = exports.ListSubscriptionsV1Paginator = exports.ListOwnershipsV1Paginator = exports.ListMembershipsV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass ListListsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.lists.push(...result.lists);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.lists.length;\n    }\n    getItemArray() {\n        return this.lists;\n    }\n    /**\n     * Lists returned by paginator.\n     */\n    get lists() {\n        return this._realData.lists;\n    }\n}\nclass ListMembershipsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/memberships.json';\n    }\n}\nexports.ListMembershipsV1Paginator = ListMembershipsV1Paginator;\nclass ListOwnershipsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/ownerships.json';\n    }\n}\nexports.ListOwnershipsV1Paginator = ListOwnershipsV1Paginator;\nclass ListSubscriptionsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/subscriptions.json';\n    }\n}\nexports.ListSubscriptionsV1Paginator = ListSubscriptionsV1Paginator;\nclass ListUsersV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nclass ListMembersV1Paginator extends ListUsersV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/members.json';\n    }\n}\nexports.ListMembersV1Paginator = ListMembersV1Paginator;\nclass ListSubscribersV1Paginator extends ListUsersV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/subscribers.json';\n    }\n}\nexports.ListSubscribersV1Paginator = ListSubscribersV1Paginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_subclient_1 = __importDefault(require(\"../client.subclient\"));\nconst globals_1 = require(\"../globals\");\nconst helpers_1 = require(\"../helpers\");\nconst client_v1_1 = __importDefault(require(\"../v1/client.v1\"));\nconst tweet_paginator_v1_1 = require(\"../paginators/tweet.paginator.v1\");\nconst mutes_paginator_v1_1 = require(\"../paginators/mutes.paginator.v1\");\nconst followers_paginator_v1_1 = require(\"../paginators/followers.paginator.v1\");\nconst friends_paginator_v1_1 = require(\"../paginators/friends.paginator.v1\");\nconst user_paginator_v1_1 = require(\"../paginators/user.paginator.v1\");\nconst list_paginator_v1_1 = require(\"../paginators/list.paginator.v1\");\n/**\n * Base Twitter v1 client with only read right.\n */\nclass TwitterApiv1ReadOnly extends client_subclient_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V1_1_PREFIX;\n    }\n    /* Tweets */\n    /**\n     * Returns a single Tweet, specified by the id parameter. The Tweet's author will also be embedded within the Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-statuses-show-id\n     */\n    singleTweet(tweetId, options = {}) {\n        return this.get('statuses/show.json', { tweet_mode: 'extended', id: tweetId, ...options });\n    }\n    tweets(ids, options = {}) {\n        return this.post('statuses/lookup.json', { tweet_mode: 'extended', id: ids, ...options });\n    }\n    /**\n     * Returns a single Tweet, specified by either a Tweet web URL or the Tweet ID, in an oEmbed-compatible format.\n     * The returned HTML snippet will be automatically recognized as an Embedded Tweet when Twitter's widget JavaScript is included on the page.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-statuses-oembed\n     */\n    oembedTweet(tweetId, options = {}) {\n        return this.get('oembed', {\n            url: `https://twitter.com/i/statuses/${tweetId}`,\n            ...options,\n        }, { prefix: 'https://publish.twitter.com/' });\n    }\n    /* Tweets timelines */\n    /**\n     * Returns a collection of the most recent Tweets and Retweets posted by the authenticating user and the users they follow.\n     * The home timeline is central to how most users interact with the Twitter service.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-home_timeline\n     */\n    async homeTimeline(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('statuses/home_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.HomeTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the 20 most recent mentions (Tweets containing a users's @screen_name) for the authenticating user.\n     * The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-mentions_timeline\n     */\n    async mentionTimeline(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('statuses/mentions_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.MentionTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of the most recent Tweets posted by the user indicated by the user_id parameters.\n     * User timelines belonging to protected users may only be requested when the authenticated user either \"owns\" the timeline or is an approved follower of the owner.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-user_timeline\n     */\n    async userTimeline(userId, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            user_id: userId,\n            ...options,\n        };\n        const initialRq = await this.get('statuses/user_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of the most recent Tweets posted by the user indicated by the screen_name parameters.\n     * User timelines belonging to protected users may only be requested when the authenticated user either \"owns\" the timeline or is an approved follower of the owner.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-user_timeline\n     */\n    async userTimelineByUsername(username, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            screen_name: username,\n            ...options,\n        };\n        const initialRq = await this.get('statuses/user_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the most recent Tweets liked by the authenticating or specified user, 20 tweets by default.\n     * Note: favorites are now known as likes.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-favorites-list\n     */\n    async favoriteTimeline(userId, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            user_id: userId,\n            ...options,\n        };\n        const initialRq = await this.get('favorites/list.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserFavoritesV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the most recent Tweets liked by the authenticating or specified user, 20 tweets by default.\n     * Note: favorites are now known as likes.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-favorites-list\n     */\n    async favoriteTimelineByUsername(username, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            screen_name: username,\n            ...options,\n        };\n        const initialRq = await this.get('favorites/list.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserFavoritesV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Users */\n    /**\n     * Returns a variety of information about the user specified by the required user_id or screen_name parameter.\n     * The author's most recent Tweet will be returned inline when possible.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-show\n     */\n    user(user) {\n        return this.get('users/show.json', { tweet_mode: 'extended', ...user });\n    }\n    /**\n     * Returns fully-hydrated user objects for up to 100 users per request,\n     * as specified by comma-separated values passed to the user_id and/or screen_name parameters.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup\n     */\n    users(query) {\n        return this.get('users/lookup.json', { tweet_mode: 'extended', ...query });\n    }\n    /**\n     * Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful;\n     * returns a 401 status code and an error message if not.\n     * Use this method to test if supplied user credentials are valid.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-verify_credentials\n     */\n    verifyCredentials(options = {}) {\n        return this.get('account/verify_credentials.json', options);\n    }\n    /**\n     * Returns an array of user objects the authenticating user has muted.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-list\n     */\n    async listMutedUsers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('mutes/users/list.json', queryParams, { fullResponse: true });\n        return new mutes_paginator_v1_1.MuteUserListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids the authenticating user has muted.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-ids\n     */\n    async listMutedUserIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('mutes/users/ids.json', queryParams, { fullResponse: true });\n        return new mutes_paginator_v1_1.MuteUserIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of user objects of friends of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-list\n     */\n    async userFriendList(options = {}) {\n        const queryParams = {\n            ...options,\n        };\n        const initialRq = await this.get('friends/list.json', queryParams, { fullResponse: true });\n        return new friends_paginator_v1_1.UserFriendListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of user objects of followers of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-list\n     */\n    async userFollowerList(options = {}) {\n        const queryParams = {\n            ...options,\n        };\n        const initialRq = await this.get('followers/list.json', queryParams, { fullResponse: true });\n        return new followers_paginator_v1_1.UserFollowerListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids of followers of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-ids\n     */\n    async userFollowerIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('followers/ids.json', queryParams, { fullResponse: true });\n        return new followers_paginator_v1_1.UserFollowerIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids of friends of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-ids\n     */\n    async userFollowingIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friends/ids.json', queryParams, { fullResponse: true });\n        return new friends_paginator_v1_1.UserFollowersIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Provides a simple, relevance-based search interface to public user accounts on Twitter.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-search\n     */\n    async searchUsers(query, options = {}) {\n        const queryParams = {\n            q: query,\n            tweet_mode: 'extended',\n            page: 1,\n            ...options,\n        };\n        const initialRq = await this.get('users/search.json', queryParams, { fullResponse: true });\n        return new user_paginator_v1_1.UserSearchV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Friendship API */\n    /**\n     * Returns detailed information about the relationship between two arbitrary users.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-show\n     */\n    friendship(sources) {\n        return this.get('friendships/show.json', sources);\n    }\n    /**\n     * Returns the relationships of the authenticating user to the comma-separated list of up to 100 screen_names or user_ids provided.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-lookup\n     */\n    friendships(friendships) {\n        return this.get('friendships/lookup.json', friendships);\n    }\n    /**\n     * Returns a collection of user_ids that the currently authenticated user does not want to receive retweets from.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-no_retweets-ids\n     */\n    friendshipsNoRetweets() {\n        return this.get('friendships/no_retweets/ids.json', { stringify_ids: true });\n    }\n    /**\n     * Returns a collection of numeric IDs for every user who has a pending request to follow the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-incoming\n     */\n    async friendshipsIncoming(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friendships/incoming.json', queryParams, { fullResponse: true });\n        return new user_paginator_v1_1.FriendshipsIncomingV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of numeric IDs for every protected user for whom the authenticating user has a pending follow request.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-outgoing\n     */\n    async friendshipsOutgoing(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friendships/outgoing.json', queryParams, { fullResponse: true });\n        return new user_paginator_v1_1.FriendshipsOutgoingV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Account/user API */\n    /**\n     * Get current account settings for authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-settings\n     */\n    accountSettings() {\n        return this.get('account/settings.json');\n    }\n    /**\n     * Returns a map of the available size variations of the specified user's profile banner.\n     * If the user has not uploaded a profile banner, a HTTP 404 will be served instead.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-users-profile_banner\n     */\n    userProfileBannerSizes(params) {\n        return this.get('users/profile_banner.json', params);\n    }\n    /* Lists */\n    /**\n     * Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-show\n     */\n    list(options) {\n        return this.get('lists/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns all lists the authenticating or specified user subscribes to, including their own.\n     * If no user is given, the authenticating user is used.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-list\n     */\n    lists(options = {}) {\n        return this.get('lists/list.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-members\n     */\n    async listMembers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/members.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListMembersV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Check if the specified user is a member of the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-members-show\n     */\n    listGetMember(options) {\n        return this.get('lists/members/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns the lists the specified user has been added to.\n     * If user_id or screen_name are not provided, the memberships for the authenticating user are returned.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-memberships\n     */\n    async listMemberships(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/memberships.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListMembershipsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-ownerships\n     */\n    async listOwnerships(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/ownerships.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListOwnershipsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a timeline of tweets authored by members of the specified list. Retweets are included by default.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-statuses\n     */\n    async listStatuses(options) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/statuses.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.ListTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the subscribers of the specified list. Private list subscribers will only be shown if the authenticated user owns the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers\n     */\n    async listSubscribers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/subscribers.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListSubscribersV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Check if the specified user is a subscriber of the specified list. Returns the user if they are a subscriber.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers-show\n     */\n    listGetSubscriber(options) {\n        return this.get('lists/subscribers/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Obtain a collection of the lists the specified user is subscribed to, 20 lists per page by default.\n     * Does not include the user's own lists.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscriptions\n     */\n    async listSubscriptions(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/subscriptions.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListSubscriptionsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Media upload API */\n    /**\n     * The STATUS command (this method) is used to periodically poll for updates of media processing operation.\n     * After the STATUS command response returns succeeded, you can move on to the next step which is usually create Tweet with media_id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/get-media-upload-status\n     */\n    mediaInfo(mediaId) {\n        return this.get('media/upload.json', {\n            command: 'STATUS',\n            media_id: mediaId,\n        }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n    }\n    filterStream({ autoConnect, ...params } = {}) {\n        const parameters = {};\n        for (const [key, value] of Object.entries(params)) {\n            if (key === 'follow' || key === 'track') {\n                parameters[key] = value.toString();\n            }\n            else if (key === 'locations') {\n                const locations = value;\n                parameters.locations = (0, helpers_1.arrayWrap)(locations).map(loc => `${loc.lng},${loc.lat}`).join(',');\n            }\n            else {\n                parameters[key] = value;\n            }\n        }\n        const streamClient = this.stream;\n        return streamClient.postStream('statuses/filter.json', parameters, { autoConnect });\n    }\n    sampleStream({ autoConnect, ...params } = {}) {\n        const streamClient = this.stream;\n        return streamClient.getStream('statuses/sample.json', params, { autoConnect });\n    }\n    /**\n     * Create a client that is prefixed with `https//stream.twitter.com` instead of classic API URL.\n     */\n    get stream() {\n        const copiedClient = new client_v1_1.default(this);\n        copiedClient.setPrefix(globals_1.API_V1_1_STREAM_PREFIX);\n        return copiedClient;\n    }\n    /* Trends API */\n    /**\n     * Returns the top 50 trending topics for a specific id, if trending information is available for it.\n     * Note: The id parameter for this endpoint is the \"where on earth identifier\" or WOEID, which is a legacy identifier created by Yahoo and has been deprecated.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/trends/trends-for-location/api-reference/get-trends-place\n     */\n    trendsByPlace(woeId, options = {}) {\n        return this.get('trends/place.json', { id: woeId, ...options });\n    }\n    /**\n     * Returns the locations that Twitter has trending topic information for.\n     * The response is an array of \"locations\" that encode the location's WOEID\n     * and some other human-readable information such as a canonical name and country the location belongs in.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-with-trending-topics/api-reference/get-trends-available\n     */\n    trendsAvailable() {\n        return this.get('trends/available.json');\n    }\n    /**\n     * Returns the locations that Twitter has trending topic information for, closest to a specified location.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-with-trending-topics/api-reference/get-trends-closest\n     */\n    trendsClosest(lat, long) {\n        return this.get('trends/closest.json', { lat, long });\n    }\n    /* Geo API */\n    /**\n     * Returns all the information about a known place.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/geo/place-information/api-reference/get-geo-id-place_id\n     */\n    geoPlace(placeId) {\n        return this.get('geo/id/:place_id.json', undefined, { params: { place_id: placeId } });\n    }\n    /**\n     * Search for places that can be attached to a Tweet via POST statuses/update.\n     * This request will return a list of all the valid places that can be used as the place_id when updating a status.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-location/api-reference/get-geo-search\n     */\n    geoSearch(options) {\n        return this.get('geo/search.json', options);\n    }\n    /**\n     * Given a latitude and a longitude, searches for up to 20 places that can be used as a place_id when updating a status.\n     * This request is an informative call and will deliver generalized results about geography.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-location/api-reference/get-geo-reverse_geocode\n     */\n    geoReverseGeoCode(options) {\n        return this.get('geo/reverse_geocode.json', options);\n    }\n    /* Developer utilities */\n    /**\n     * Returns the current rate limits for methods belonging to the specified resource families.\n     * Each API resource belongs to a \"resource family\" which is indicated in its method documentation.\n     * The method's resource family can be determined from the first component of the path after the resource version.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities/rate-limit-status/api-reference/get-application-rate_limit_status\n     */\n    rateLimitStatuses(...resources) {\n        return this.get('application/rate_limit_status.json', { resources });\n    }\n    /**\n     * Returns the list of languages supported by Twitter along with the language code supported by Twitter.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities/supported-languages/api-reference/get-help-languages\n     */\n    supportedLanguages() {\n        return this.get('help/languages.json');\n    }\n}\nexports.default = TwitterApiv1ReadOnly;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readNextPartOf = exports.sleepSecs = exports.getMediaCategoryByMime = exports.getMimeType = exports.getFileSizeFromFileHandle = exports.getFileHandle = exports.readFileIntoBuffer = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../types\");\nasync function readFileIntoBuffer(file) {\n    const handle = await getFileHandle(file);\n    if (typeof handle === 'number') {\n        return new Promise((resolve, reject) => {\n            fs.readFile(handle, (err, data) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(data);\n            });\n        });\n    }\n    else if (handle instanceof Buffer) {\n        return handle;\n    }\n    else {\n        return handle.readFile();\n    }\n}\nexports.readFileIntoBuffer = readFileIntoBuffer;\nfunction getFileHandle(file) {\n    if (typeof file === 'string') {\n        return fs.promises.open(file, 'r');\n    }\n    else if (typeof file === 'number') {\n        return file;\n    }\n    else if (typeof file === 'object' && !(file instanceof Buffer)) {\n        return file;\n    }\n    else if (!(file instanceof Buffer)) {\n        throw new Error('Given file is not valid, please check its type.');\n    }\n    else {\n        return file;\n    }\n}\nexports.getFileHandle = getFileHandle;\nasync function getFileSizeFromFileHandle(fileHandle) {\n    // Get the file size\n    if (typeof fileHandle === 'number') {\n        const stats = await new Promise((resolve, reject) => {\n            fs.fstat(fileHandle, (err, stats) => {\n                if (err)\n                    reject(err);\n                resolve(stats);\n            });\n        });\n        return stats.size;\n    }\n    else if (fileHandle instanceof Buffer) {\n        return fileHandle.length;\n    }\n    else {\n        return (await fileHandle.stat()).size;\n    }\n}\nexports.getFileSizeFromFileHandle = getFileSizeFromFileHandle;\nfunction getMimeType(file, type, mimeType) {\n    if (typeof mimeType === 'string') {\n        return mimeType;\n    }\n    else if (typeof file === 'string' && !type) {\n        return getMimeByName(file);\n    }\n    else if (typeof type === 'string') {\n        return getMimeByType(type);\n    }\n    throw new Error('You must specify type if file is a file handle or Buffer.');\n}\nexports.getMimeType = getMimeType;\nfunction getMimeByName(name) {\n    if (name.endsWith('.jpeg') || name.endsWith('.jpg'))\n        return types_1.EUploadMimeType.Jpeg;\n    if (name.endsWith('.png'))\n        return types_1.EUploadMimeType.Png;\n    if (name.endsWith('.webp'))\n        return types_1.EUploadMimeType.Webp;\n    if (name.endsWith('.gif'))\n        return types_1.EUploadMimeType.Gif;\n    if (name.endsWith('.mpeg4') || name.endsWith('.mp4'))\n        return types_1.EUploadMimeType.Mp4;\n    if (name.endsWith('.mov') || name.endsWith('.mov'))\n        return types_1.EUploadMimeType.Mov;\n    if (name.endsWith('.srt'))\n        return types_1.EUploadMimeType.Srt;\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: 'options.mimeType is missing and filename couldn\\'t help to resolve MIME type, so it will fallback to image/jpeg',\n        resolution: 'If you except to give filenames without extensions, please specify explicitlty the MIME type using options.mimeType',\n    });\n    return types_1.EUploadMimeType.Jpeg;\n}\nfunction getMimeByType(type) {\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: 'you\\'re using options.type',\n        resolution: 'Remove options.type argument and migrate to options.mimeType which takes the real MIME type. ' +\n            'If you\\'re using type=longmp4, add options.longVideo alongside of mimeType=EUploadMimeType.Mp4',\n    });\n    if (type === 'gif')\n        return types_1.EUploadMimeType.Gif;\n    if (type === 'jpg')\n        return types_1.EUploadMimeType.Jpeg;\n    if (type === 'png')\n        return types_1.EUploadMimeType.Png;\n    if (type === 'webp')\n        return types_1.EUploadMimeType.Webp;\n    if (type === 'srt')\n        return types_1.EUploadMimeType.Srt;\n    if (type === 'mp4' || type === 'longmp4')\n        return types_1.EUploadMimeType.Mp4;\n    if (type === 'mov')\n        return types_1.EUploadMimeType.Mov;\n    return type;\n}\nfunction getMediaCategoryByMime(name, target) {\n    if (name === types_1.EUploadMimeType.Mp4 || name === types_1.EUploadMimeType.Mov)\n        return target === 'tweet' ? 'TweetVideo' : 'DmVideo';\n    if (name === types_1.EUploadMimeType.Gif)\n        return target === 'tweet' ? 'TweetGif' : 'DmGif';\n    if (name === types_1.EUploadMimeType.Srt)\n        return 'Subtitles';\n    else\n        return target === 'tweet' ? 'TweetImage' : 'DmImage';\n}\nexports.getMediaCategoryByMime = getMediaCategoryByMime;\nfunction sleepSecs(seconds) {\n    return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\nexports.sleepSecs = sleepSecs;\nasync function readNextPartOf(file, chunkLength, bufferOffset = 0, buffer) {\n    if (file instanceof Buffer) {\n        const rt = file.slice(bufferOffset, bufferOffset + chunkLength);\n        return [rt, rt.length];\n    }\n    if (!buffer) {\n        throw new Error('Well, we will need a buffer to store file content.');\n    }\n    let bytesRead;\n    if (typeof file === 'number') {\n        bytesRead = await new Promise((resolve, reject) => {\n            fs.read(file, buffer, 0, chunkLength, bufferOffset, (err, nread) => {\n                if (err)\n                    reject(err);\n                resolve(nread);\n            });\n        });\n    }\n    else {\n        const res = await file.read(buffer, 0, chunkLength, bufferOffset);\n        bytesRead = res.bytesRead;\n    }\n    return [buffer, bytesRead];\n}\nexports.readNextPartOf = readNextPartOf;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = __importStar(require(\"fs\"));\nconst globals_1 = require(\"../globals\");\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../types\");\nconst client_v1_read_1 = __importDefault(require(\"./client.v1.read\"));\nconst media_helpers_v1_1 = require(\"./media-helpers.v1\");\nconst UPLOAD_ENDPOINT = 'media/upload.json';\n/**\n * Base Twitter v1 client with read/write rights.\n */\nclass TwitterApiv1ReadWrite extends client_v1_read_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V1_1_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n    /* Tweet API */\n    /**\n     * Post a new tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    tweet(status, payload = {}) {\n        const queryParams = {\n            status,\n            tweet_mode: 'extended',\n            ...payload,\n        };\n        return this.post('statuses/update.json', queryParams);\n    }\n    /**\n     * Quote an existing tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    async quote(status, quotingStatusId, payload = {}) {\n        const url = 'https://twitter.com/i/statuses/' + quotingStatusId;\n        return this.tweet(status, { ...payload, attachment_url: url });\n    }\n    /**\n     * Post a series of tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    async tweetThread(tweets) {\n        const postedTweets = [];\n        for (const tweet of tweets) {\n            // Retrieve the last sent tweet\n            const lastTweet = postedTweets.length ? postedTweets[postedTweets.length - 1] : null;\n            // Build the tweet query params\n            const queryParams = { ...(typeof tweet === 'string' ? ({ status: tweet }) : tweet) };\n            // Reply to an existing tweet if needed\n            const inReplyToId = lastTweet ? lastTweet.id_str : queryParams.in_reply_to_status_id;\n            const status = queryParams.status;\n            if (inReplyToId) {\n                postedTweets.push(await this.reply(status, inReplyToId, queryParams));\n            }\n            else {\n                postedTweets.push(await this.tweet(status, queryParams));\n            }\n        }\n        return postedTweets;\n    }\n    /**\n     * Reply to an existing tweet. Shortcut to `.tweet` with tweaked parameters.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    reply(status, in_reply_to_status_id, payload = {}) {\n        return this.tweet(status, {\n            auto_populate_reply_metadata: true,\n            in_reply_to_status_id,\n            ...payload,\n        });\n    }\n    /**\n     * Delete an existing tweet belonging to you.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-destroy-id\n     */\n    deleteTweet(tweetId) {\n        return this.post('statuses/destroy/:id.json', { tweet_mode: 'extended' }, { params: { id: tweetId } });\n    }\n    /* User API */\n    /**\n     * Report the specified user as a spam account to Twitter.\n     * Additionally, optionally performs the equivalent of POST blocks/create on behalf of the authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/post-users-report_spam\n     */\n    reportUserAsSpam(options) {\n        return this.post('users/report_spam.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Turn on/off Retweets and device notifications from the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-update\n     */\n    updateFriendship(options) {\n        return this.post('friendships/update.json', options);\n    }\n    /**\n     * Follow the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-create\n     */\n    createFriendship(options) {\n        return this.post('friendships/create.json', options);\n    }\n    /**\n     * Unfollow the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-destroy\n     */\n    destroyFriendship(options) {\n        return this.post('friendships/destroy.json', options);\n    }\n    /* Account API */\n    /**\n     * Update current account settings for authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-settings\n     */\n    updateAccountSettings(options) {\n        return this.post('account/settings.json', options);\n    }\n    /**\n     * Sets some values that users are able to set under the \"Account\" tab of their settings page.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile\n     */\n    updateAccountProfile(options) {\n        return this.post('account/update_profile.json', options);\n    }\n    /**\n     * Uploads a profile banner on behalf of the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_banner\n     */\n    async updateAccountProfileBanner(file, options = {}) {\n        const queryParams = {\n            banner: await (0, media_helpers_v1_1.readFileIntoBuffer)(file),\n            ...options,\n        };\n        return this.post('account/update_profile_banner.json', queryParams, { forceBodyMode: 'form-data' });\n    }\n    /**\n     * Updates the authenticating user's profile image.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_image\n     */\n    async updateAccountProfileImage(file, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            image: await (0, media_helpers_v1_1.readFileIntoBuffer)(file),\n            ...options,\n        };\n        return this.post('account/update_profile_image.json', queryParams, { forceBodyMode: 'form-data' });\n    }\n    /**\n     * Removes the uploaded profile banner for the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-remove_profile_banner\n     */\n    removeAccountProfileBanner() {\n        return this.post('account/remove_profile_banner.json');\n    }\n    /* Lists */\n    /**\n     * Creates a new list for the authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-create\n     */\n    createList(options) {\n        return this.post('lists/create.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Updates the specified list. The authenticated user must own the list to be able to update it.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-update\n     */\n    updateList(options) {\n        return this.post('lists/update.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Deletes the specified list. The authenticated user must own the list to be able to destroy it.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-destroy\n     */\n    removeList(options) {\n        return this.post('lists/destroy.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.\n     * If you add a single `user_id` or `screen_name`, it will target `lists/members/create.json`, otherwise\n     * it will target `lists/members/create_all.json`.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-members-create_all\n     */\n    addListMembers(options) {\n        const hasMultiple = (options.user_id && (0, helpers_1.hasMultipleItems)(options.user_id)) || (options.screen_name && (0, helpers_1.hasMultipleItems)(options.screen_name));\n        const endpoint = hasMultiple ? 'lists/members/create_all.json' : 'lists/members/create.json';\n        return this.post(endpoint, options);\n    }\n    /**\n     * Removes multiple members to a list, by specifying a comma-separated list of member ids or screen names.\n     * If you add a single `user_id` or `screen_name`, it will target `lists/members/destroy.json`, otherwise\n     * it will target `lists/members/destroy_all.json`.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-members-destroy_all\n     */\n    removeListMembers(options) {\n        const hasMultiple = (options.user_id && (0, helpers_1.hasMultipleItems)(options.user_id)) || (options.screen_name && (0, helpers_1.hasMultipleItems)(options.screen_name));\n        const endpoint = hasMultiple ? 'lists/members/destroy_all.json' : 'lists/members/destroy.json';\n        return this.post(endpoint, options);\n    }\n    /**\n     * Subscribes the authenticated user to the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-create\n     */\n    subscribeToList(options) {\n        return this.post('lists/subscribers/create.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Unsubscribes the authenticated user of the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-destroy\n     */\n    unsubscribeOfList(options) {\n        return this.post('lists/subscribers/destroy.json', { tweet_mode: 'extended', ...options });\n    }\n    /* Media upload API */\n    /**\n     * This endpoint can be used to provide additional information about the uploaded media_id.\n     * This feature is currently only supported for images and GIFs.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-metadata-create\n     */\n    createMediaMetadata(mediaId, metadata) {\n        return this.post('media/metadata/create.json', { media_id: mediaId, ...metadata }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    /**\n     * Use this endpoint to associate uploaded subtitles to an uploaded video. You can associate subtitles to video before or after Tweeting.\n     * **To obtain subtitle media ID, you must upload each subtitle file separately using `.uploadMedia()` method.**\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-subtitles-create\n     */\n    createMediaSubtitles(mediaId, subtitles) {\n        return this.post('media/subtitles/create.json', { media_id: mediaId, media_category: 'TweetVideo', subtitle_info: { subtitles } }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    /**\n     * Use this endpoint to dissociate subtitles from a video and delete the subtitles. You can dissociate subtitles from a video before or after Tweeting.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-subtitles-delete\n     */\n    deleteMediaSubtitles(mediaId, ...languages) {\n        return this.post('media/subtitles/delete.json', {\n            media_id: mediaId,\n            media_category: 'TweetVideo',\n            subtitle_info: { subtitles: languages.map(lang => ({ language_code: lang })) },\n        }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    async uploadMedia(file, options = {}, returnFullMediaData = false) {\n        var _a;\n        const chunkLength = (_a = options.chunkLength) !== null && _a !== void 0 ? _a : (1024 * 1024);\n        const { fileHandle, mediaCategory, fileSize, mimeType } = await this.getUploadMediaRequirements(file, options);\n        // Get the file handle (if not buffer)\n        try {\n            // Finally! We can send INIT message.\n            const mediaData = await this.post(UPLOAD_ENDPOINT, {\n                command: 'INIT',\n                total_bytes: fileSize,\n                media_type: mimeType,\n                media_category: mediaCategory,\n                additional_owners: options.additionalOwners,\n                shared: options.shared ? true : undefined,\n            }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n            // Upload the media chunk by chunk\n            await this.mediaChunkedUpload(fileHandle, chunkLength, mediaData.media_id_string, options.maxConcurrentUploads);\n            // Finalize media\n            const fullMediaData = await this.post(UPLOAD_ENDPOINT, {\n                command: 'FINALIZE',\n                media_id: mediaData.media_id_string,\n            }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n            if (fullMediaData.processing_info && fullMediaData.processing_info.state !== 'succeeded') {\n                // Must wait if video is still computed\n                await this.awaitForMediaProcessingCompletion(fullMediaData);\n            }\n            // Video is ready, return media_id\n            if (returnFullMediaData) {\n                return fullMediaData;\n            }\n            else {\n                return fullMediaData.media_id_string;\n            }\n        }\n        finally {\n            // Close file if any\n            if (typeof file === 'number') {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                fs.close(file, () => { });\n            }\n            else if (typeof fileHandle === 'object' && !(fileHandle instanceof Buffer)) {\n                fileHandle.close();\n            }\n        }\n    }\n    async awaitForMediaProcessingCompletion(fullMediaData) {\n        var _a;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            fullMediaData = await this.mediaInfo(fullMediaData.media_id_string);\n            const { processing_info } = fullMediaData;\n            if (!processing_info || processing_info.state === 'succeeded') {\n                // Ok, completed!\n                return;\n            }\n            if ((_a = processing_info.error) === null || _a === void 0 ? void 0 : _a.code) {\n                const { name, message } = processing_info.error;\n                throw new Error(`Failed to process media: ${name} - ${message}.`);\n            }\n            if (processing_info.state === 'failed') {\n                // No error data\n                throw new Error('Failed to process the media.');\n            }\n            if (processing_info.check_after_secs) {\n                // Await for given seconds\n                await (0, media_helpers_v1_1.sleepSecs)(processing_info.check_after_secs);\n            }\n            else {\n                // No info; Await for 5 seconds\n                await (0, media_helpers_v1_1.sleepSecs)(5);\n            }\n        }\n    }\n    async getUploadMediaRequirements(file, { mimeType, type, target, longVideo } = {}) {\n        // Get the file handle (if not buffer)\n        let fileHandle;\n        try {\n            fileHandle = await (0, media_helpers_v1_1.getFileHandle)(file);\n            // Get the mimetype\n            const realMimeType = (0, media_helpers_v1_1.getMimeType)(file, type, mimeType);\n            // Get the media category\n            let mediaCategory;\n            // If explicit longmp4 OR explicit MIME type and not DM target\n            if (realMimeType === types_1.EUploadMimeType.Mp4 && ((!mimeType && !type && target !== 'dm') || longVideo)) {\n                mediaCategory = 'amplify_video';\n            }\n            else {\n                mediaCategory = (0, media_helpers_v1_1.getMediaCategoryByMime)(realMimeType, target !== null && target !== void 0 ? target : 'tweet');\n            }\n            return {\n                fileHandle,\n                mediaCategory,\n                fileSize: await (0, media_helpers_v1_1.getFileSizeFromFileHandle)(fileHandle),\n                mimeType: realMimeType,\n            };\n        }\n        catch (e) {\n            // Close file if any\n            if (typeof file === 'number') {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                fs.close(file, () => { });\n            }\n            else if (typeof fileHandle === 'object' && !(fileHandle instanceof Buffer)) {\n                fileHandle.close();\n            }\n            throw e;\n        }\n    }\n    async mediaChunkedUpload(fileHandle, chunkLength, mediaId, maxConcurrentUploads = 3) {\n        // Send chunk by chunk\n        let chunkIndex = 0;\n        if (maxConcurrentUploads < 1) {\n            throw new RangeError('Bad maxConcurrentUploads parameter.');\n        }\n        // Creating a buffer for doing file stuff (if we don't have one)\n        const buffer = fileHandle instanceof Buffer ? undefined : Buffer.alloc(chunkLength);\n        // Sliced/filled buffer returned for each part\n        let readBuffer;\n        // Needed to know when we should stop reading the file\n        let nread;\n        // Needed to use the buffer object (file handles always \"remembers\" file position)\n        let offset = 0;\n        [readBuffer, nread] = await (0, media_helpers_v1_1.readNextPartOf)(fileHandle, chunkLength, offset, buffer);\n        offset += nread;\n        // Handle max concurrent uploads\n        const currentUploads = new Set();\n        // Read buffer until file is completely read\n        while (nread) {\n            const mediaBufferPart = readBuffer.slice(0, nread);\n            // Sent part if part has something inside\n            if (mediaBufferPart.length) {\n                const request = this.post(UPLOAD_ENDPOINT, {\n                    command: 'APPEND',\n                    media_id: mediaId,\n                    segment_index: chunkIndex,\n                    media: mediaBufferPart,\n                }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n                currentUploads.add(request);\n                request.then(() => {\n                    currentUploads.delete(request);\n                });\n                chunkIndex++;\n            }\n            if (currentUploads.size >= maxConcurrentUploads) {\n                // Await for first promise to be finished\n                await Promise.race(currentUploads);\n            }\n            [readBuffer, nread] = await (0, media_helpers_v1_1.readNextPartOf)(fileHandle, chunkLength, offset, buffer);\n            offset += nread;\n        }\n        await Promise.all([...currentUploads]);\n    }\n}\nexports.default = TwitterApiv1ReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiv1 = void 0;\nconst globals_1 = require(\"../globals\");\nconst dm_paginator_v1_1 = require(\"../paginators/dm.paginator.v1\");\nconst types_1 = require(\"../types\");\nconst client_v1_write_1 = __importDefault(require(\"./client.v1.write\"));\n/**\n * Twitter v1.1 API client with read/write/DMs rights.\n */\nclass TwitterApiv1 extends client_v1_write_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V1_1_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /* Direct messages */\n    // Part: Sending and receiving events\n    /**\n     * Publishes a new message_create event resulting in a Direct Message sent to a specified user from the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/new-event\n     */\n    sendDm({ recipient_id, custom_profile_id, ...params }) {\n        const args = {\n            event: {\n                type: types_1.EDirectMessageEventTypeV1.Create,\n                [types_1.EDirectMessageEventTypeV1.Create]: {\n                    target: { recipient_id },\n                    message_data: params,\n                },\n            },\n        };\n        if (custom_profile_id) {\n            args.event[types_1.EDirectMessageEventTypeV1.Create].custom_profile_id = custom_profile_id;\n        }\n        return this.post('direct_messages/events/new.json', args, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a single Direct Message event by the given id.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/get-event\n     */\n    getDmEvent(id) {\n        return this.get('direct_messages/events/show.json', { id });\n    }\n    /**\n     * Deletes the direct message specified in the required ID parameter.\n     * The authenticating user must be the recipient of the specified direct message.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/delete-message-event\n     */\n    deleteDm(id) {\n        return this.delete('direct_messages/events/destroy.json', { id });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n    async listDmEvents(args = {}) {\n        const queryParams = { ...args };\n        const initialRq = await this.get('direct_messages/events/list.json', queryParams, { fullResponse: true });\n        return new dm_paginator_v1_1.DmEventsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    // Part: Welcome messages (events)\n    /**\n     * Creates a new Welcome Message that will be stored and sent in the future from the authenticating user in defined circumstances.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message\n     */\n    newWelcomeDm(name, data) {\n        const args = {\n            [types_1.EDirectMessageEventTypeV1.WelcomeCreate]: {\n                name,\n                message_data: data,\n            },\n        };\n        return this.post('direct_messages/welcome_messages/new.json', args, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a Welcome Message by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message\n     */\n    getWelcomeDm(id) {\n        return this.get('direct_messages/welcome_messages/show.json', { id });\n    }\n    /**\n     * Deletes a Welcome Message by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message\n     */\n    deleteWelcomeDm(id) {\n        return this.delete('direct_messages/welcome_messages/destroy.json', { id });\n    }\n    /**\n     * Updates a Welcome Message by the given ID.\n     * Updates to the welcome_message object are atomic.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/update-welcome-message\n     */\n    updateWelcomeDm(id, data) {\n        const args = { message_data: data };\n        return this.put('direct_messages/welcome_messages/update.json', args, {\n            forceBodyMode: 'json',\n            query: { id },\n        });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n    async listWelcomeDms(args = {}) {\n        const queryParams = { ...args };\n        const initialRq = await this.get('direct_messages/welcome_messages/list.json', queryParams, { fullResponse: true });\n        return new dm_paginator_v1_1.WelcomeDmV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    // Part: Welcome message (rules)\n    /**\n     * Creates a new Welcome Message Rule that determines which Welcome Message will be shown in a given conversation.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message-rule\n     */\n    newWelcomeDmRule(welcomeMessageId) {\n        return this.post('direct_messages/welcome_messages/rules/new.json', {\n            welcome_message_rule: { welcome_message_id: welcomeMessageId },\n        }, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a Welcome Message Rule by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message-rule\n     */\n    getWelcomeDmRule(id) {\n        return this.get('direct_messages/welcome_messages/rules/show.json', { id });\n    }\n    /**\n     * Deletes a Welcome Message Rule by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message-rule\n     */\n    deleteWelcomeDmRule(id) {\n        return this.delete('direct_messages/welcome_messages/rules/destroy.json', { id });\n    }\n    /**\n     * Retrieves all welcome DM rules for this account.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/list-welcome-message-rules\n     */\n    async listWelcomeDmRules(args = {}) {\n        const queryParams = { ...args };\n        return this.get('direct_messages/welcome_messages/rules/list.json', queryParams);\n    }\n    /**\n     * Set the current showed welcome message for logged account ; wrapper for Welcome DM rules.\n     * Test if a rule already exists, delete if any, then create a rule for current message ID.\n     *\n     * If you don't have already a welcome message, create it with `.newWelcomeMessage`.\n     */\n    async setWelcomeDm(welcomeMessageId, deleteAssociatedWelcomeDmWhenDeletingRule = true) {\n        var _a;\n        const existingRules = await this.listWelcomeDmRules();\n        if ((_a = existingRules.welcome_message_rules) === null || _a === void 0 ? void 0 : _a.length) {\n            for (const rule of existingRules.welcome_message_rules) {\n                await this.deleteWelcomeDmRule(rule.id);\n                if (deleteAssociatedWelcomeDmWhenDeletingRule) {\n                    await this.deleteWelcomeDm(rule.welcome_message_id);\n                }\n            }\n        }\n        return this.newWelcomeDmRule(welcomeMessageId);\n    }\n    // Part: Read indicator\n    /**\n     * Marks a message as read in the recipient\u2019s Direct Message conversation view with the sender.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-read-receipt\n     */\n    markDmAsRead(lastEventId, recipientId) {\n        return this.post('direct_messages/mark_read.json', {\n            last_read_event_id: lastEventId,\n            recipient_id: recipientId,\n        }, { forceBodyMode: 'url' });\n    }\n    /**\n     * Displays a visual typing indicator in the recipient\u2019s Direct Message conversation view with the sender.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-typing-indicator\n     */\n    indicateDmTyping(recipientId) {\n        return this.post('direct_messages/indicate_typing.json', {\n            recipient_id: recipientId,\n        }, { forceBodyMode: 'url' });\n    }\n    // Part: Images\n    /**\n     * Get a single image attached to a direct message. TwitterApi client must be logged with OAuth 1.0a.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/message-attachments/guides/retrieving-media\n     */\n    async downloadDmImage(urlOrDm) {\n        if (typeof urlOrDm !== 'string') {\n            const attachment = urlOrDm[types_1.EDirectMessageEventTypeV1.Create].message_data.attachment;\n            if (!attachment) {\n                throw new Error('The given direct message doesn\\'t contain any attachment');\n            }\n            urlOrDm = attachment.media.media_url_https;\n        }\n        const data = await this.get(urlOrDm, undefined, { forceParseMode: 'buffer', prefix: '' });\n        if (!data.length) {\n            throw new Error('Image not found. Make sure you are logged with credentials able to access direct messages, and check the URL.');\n        }\n        return data;\n    }\n}\nexports.TwitterApiv1 = TwitterApiv1;\nexports.default = TwitterApiv1;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterV2IncludesHelper = void 0;\n/**\n * Provide helpers for `.includes` of a v2 API result.\n * Needed expansions for a method to work are specified (*`like this`*).\n */\nclass TwitterV2IncludesHelper {\n    constructor(result) {\n        this.result = result;\n    }\n    /* Tweets */\n    get tweets() {\n        return TwitterV2IncludesHelper.tweets(this.result);\n    }\n    static tweets(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.tweets) !== null && _b !== void 0 ? _b : [];\n    }\n    tweetById(id) {\n        return TwitterV2IncludesHelper.tweetById(this.result, id);\n    }\n    static tweetById(result, id) {\n        return this.tweets(result).find(tweet => tweet.id === id);\n    }\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n    retweet(tweet) {\n        return TwitterV2IncludesHelper.retweet(this.result, tweet);\n    }\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n    static retweet(result, tweet) {\n        var _a;\n        const retweetIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'retweeted')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => retweetIds.includes(t.id));\n    }\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n    quote(tweet) {\n        return TwitterV2IncludesHelper.quote(this.result, tweet);\n    }\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n    static quote(result, tweet) {\n        var _a;\n        const quoteIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'quoted')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => quoteIds.includes(t.id));\n    }\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n    repliedTo(tweet) {\n        return TwitterV2IncludesHelper.repliedTo(this.result, tweet);\n    }\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n    static repliedTo(result, tweet) {\n        var _a;\n        const repliesIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'replied_to')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => repliesIds.includes(t.id));\n    }\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n    author(tweet) {\n        return TwitterV2IncludesHelper.author(this.result, tweet);\n    }\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n    static author(result, tweet) {\n        const authorId = tweet.author_id;\n        return authorId ? this.users(result).find(u => u.id === authorId) : undefined;\n    }\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n    repliedToAuthor(tweet) {\n        return TwitterV2IncludesHelper.repliedToAuthor(this.result, tweet);\n    }\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n    static repliedToAuthor(result, tweet) {\n        const inReplyUserId = tweet.in_reply_to_user_id;\n        return inReplyUserId ? this.users(result).find(u => u.id === inReplyUserId) : undefined;\n    }\n    /* Users */\n    get users() {\n        return TwitterV2IncludesHelper.users(this.result);\n    }\n    static users(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.users) !== null && _b !== void 0 ? _b : [];\n    }\n    userById(id) {\n        return TwitterV2IncludesHelper.userById(this.result, id);\n    }\n    static userById(result, id) {\n        return this.users(result).find(u => u.id === id);\n    }\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n    pinnedTweet(user) {\n        return TwitterV2IncludesHelper.pinnedTweet(this.result, user);\n    }\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n    static pinnedTweet(result, user) {\n        return user.pinned_tweet_id ? this.tweets(result).find(t => t.id === user.pinned_tweet_id) : undefined;\n    }\n    /* Medias */\n    get media() {\n        return TwitterV2IncludesHelper.media(this.result);\n    }\n    static media(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.media) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n    medias(tweet) {\n        return TwitterV2IncludesHelper.medias(this.result, tweet);\n    }\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n    static medias(result, tweet) {\n        var _a, _b;\n        const keys = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.media_keys) !== null && _b !== void 0 ? _b : [];\n        return this.media(result).filter(m => keys.includes(m.media_key));\n    }\n    /* Polls */\n    get polls() {\n        return TwitterV2IncludesHelper.polls(this.result);\n    }\n    static polls(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.polls) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n    poll(tweet) {\n        return TwitterV2IncludesHelper.poll(this.result, tweet);\n    }\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n    static poll(result, tweet) {\n        var _a, _b;\n        const pollIds = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.poll_ids) !== null && _b !== void 0 ? _b : [];\n        if (pollIds.length) {\n            const pollId = pollIds[0];\n            return this.polls(result).find(p => p.id === pollId);\n        }\n        return undefined;\n    }\n    /* Places */\n    get places() {\n        return TwitterV2IncludesHelper.places(this.result);\n    }\n    static places(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.places) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n    place(tweet) {\n        return TwitterV2IncludesHelper.place(this.result, tweet);\n    }\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n    static place(result, tweet) {\n        var _a;\n        const placeId = (_a = tweet.geo) === null || _a === void 0 ? void 0 : _a.place_id;\n        return placeId ? this.places(result).find(p => p.id === placeId) : undefined;\n    }\n    /* Lists */\n    /** List owner of the given list (*`owner_id`*) */\n    listOwner(list) {\n        return TwitterV2IncludesHelper.listOwner(this.result, list);\n    }\n    /** List owner of the given list (*`owner_id`*) */\n    static listOwner(result, list) {\n        const creatorId = list.owner_id;\n        return creatorId ? this.users(result).find(p => p.id === creatorId) : undefined;\n    }\n    /* Spaces */\n    /** Creator of the given space (*`creator_id`*) */\n    spaceCreator(space) {\n        return TwitterV2IncludesHelper.spaceCreator(this.result, space);\n    }\n    /** Creator of the given space (*`creator_id`*) */\n    static spaceCreator(result, space) {\n        const creatorId = space.creator_id;\n        return creatorId ? this.users(result).find(p => p.id === creatorId) : undefined;\n    }\n    /** Current hosts of the given space (*`host_ids`*) */\n    spaceHosts(space) {\n        return TwitterV2IncludesHelper.spaceHosts(this.result, space);\n    }\n    /** Current hosts of the given space (*`host_ids`*) */\n    static spaceHosts(result, space) {\n        var _a;\n        const hostIds = (_a = space.host_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => hostIds.includes(u.id));\n    }\n    /** Current speakers of the given space (*`speaker_ids`*) */\n    spaceSpeakers(space) {\n        return TwitterV2IncludesHelper.spaceSpeakers(this.result, space);\n    }\n    /** Current speakers of the given space (*`speaker_ids`*) */\n    static spaceSpeakers(result, space) {\n        var _a;\n        const speakerIds = (_a = space.speaker_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => speakerIds.includes(u.id));\n    }\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n    spaceInvitedUsers(space) {\n        return TwitterV2IncludesHelper.spaceInvitedUsers(this.result, space);\n    }\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n    static spaceInvitedUsers(result, space) {\n        var _a;\n        const invitedUserIds = (_a = space.invited_user_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => invitedUserIds.includes(u.id));\n    }\n}\nexports.TwitterV2IncludesHelper = TwitterV2IncludesHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TimelineV2Paginator = exports.TwitterV2Paginator = void 0;\nconst includes_v2_helper_1 = require(\"../v2/includes.v2.helper\");\nconst TwitterPaginator_1 = require(\"./TwitterPaginator\");\n/** A generic PreviousableTwitterPaginator with common v2 helper methods. */\nclass TwitterV2Paginator extends TwitterPaginator_1.PreviousableTwitterPaginator {\n    updateIncludes(data) {\n        // Update errors\n        if (data.errors) {\n            if (!this._realData.errors) {\n                this._realData.errors = [];\n            }\n            this._realData.errors = [...this._realData.errors, ...data.errors];\n        }\n        // Update includes\n        if (!data.includes) {\n            return;\n        }\n        if (!this._realData.includes) {\n            this._realData.includes = {};\n        }\n        const includesRealData = this._realData.includes;\n        for (const [includeKey, includeArray] of Object.entries(data.includes)) {\n            if (!includesRealData[includeKey]) {\n                includesRealData[includeKey] = [];\n            }\n            includesRealData[includeKey] = [\n                ...includesRealData[includeKey],\n                ...includeArray,\n            ];\n        }\n    }\n    /** Throw if the current paginator is not usable. */\n    assertUsable() {\n        if (this.unusable) {\n            throw new Error('Unable to use this paginator to fetch more data, as it does not contain any metadata.' +\n                ' Check .errors property for more details.');\n        }\n    }\n    get meta() {\n        return this._realData.meta;\n    }\n    get includes() {\n        var _a;\n        if (!((_a = this._realData) === null || _a === void 0 ? void 0 : _a.includes)) {\n            return new includes_v2_helper_1.TwitterV2IncludesHelper(this._realData);\n        }\n        if (this._includesInstance) {\n            return this._includesInstance;\n        }\n        return this._includesInstance = new includes_v2_helper_1.TwitterV2IncludesHelper(this._realData);\n    }\n    get errors() {\n        var _a;\n        return (_a = this._realData.errors) !== null && _a !== void 0 ? _a : [];\n    }\n    /** `true` if this paginator only contains error payload and no metadata found to consume data. */\n    get unusable() {\n        return this.errors.length > 0 && !this._realData.meta && !this._realData.data;\n    }\n}\nexports.TwitterV2Paginator = TwitterV2Paginator;\n/** A generic TwitterV2Paginator able to consume v2 timelines that use max_results and pagination tokens. */\nclass TimelineV2Paginator extends TwitterV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.previous_token = result.meta.previous_token;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.next_token,\n        };\n    }\n    getPreviousQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.previous_token,\n        };\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        var _a;\n        return !!((_a = result.meta) === null || _a === void 0 ? void 0 : _a.next_token);\n    }\n}\nexports.TimelineV2Paginator = TimelineV2Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetV2ListTweetsPaginator = exports.TweetV2UserLikedTweetsPaginator = exports.TweetBookmarksTimelineV2Paginator = exports.TweetUserMentionTimelineV2Paginator = exports.TweetUserTimelineV2Paginator = exports.TweetHomeTimelineV2Paginator = exports.QuotedTweetsTimelineV2Paginator = exports.TweetSearchAllV2Paginator = exports.TweetSearchRecentV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with since_id, until_id and next_token (when available). */\nclass TweetTimelineV2Paginator extends v2_paginator_1.TwitterV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        this.assertUsable();\n        const params = { ...this.injectQueryParams(maxResults) };\n        if (this._realData.meta.next_token) {\n            params.next_token = this._realData.meta.next_token;\n        }\n        else {\n            if (params.start_time) {\n                // until_id and start_time are forbidden together for some reason, so convert start_time to a since_id.\n                params.since_id = this.dateStringToSnowflakeId(params.start_time);\n                delete params.start_time;\n            }\n            if (params.end_time) {\n                // until_id overrides end_time, so delete it\n                delete params.end_time;\n            }\n            params.until_id = this._realData.meta.oldest_id;\n        }\n        return params;\n    }\n    getPreviousQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            since_id: this._realData.meta.newest_id,\n        };\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        return !!result.meta.next_token;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    dateStringToSnowflakeId(dateStr) {\n        const TWITTER_START_EPOCH = BigInt('1288834974657');\n        const date = new Date(dateStr);\n        if (isNaN(date.valueOf())) {\n            throw new Error('Unable to convert start_time/end_time to a valid date. A ISO 8601 DateTime is excepted, please check your input.');\n        }\n        const dateTimestamp = BigInt(date.valueOf());\n        return ((dateTimestamp - TWITTER_START_EPOCH) << BigInt('22')).toString();\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with pagination_tokens. */\nclass TweetPaginableTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        super.refreshInstanceFromResult(response, isNextPage);\n        const result = response.data;\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n        }\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n// ----------------\n// - Tweet search -\n// ----------------\nclass TweetSearchRecentV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/recent';\n    }\n}\nexports.TweetSearchRecentV2Paginator = TweetSearchRecentV2Paginator;\nclass TweetSearchAllV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/all';\n    }\n}\nexports.TweetSearchAllV2Paginator = TweetSearchAllV2Paginator;\nclass QuotedTweetsTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/quote_tweets';\n    }\n}\nexports.QuotedTweetsTimelineV2Paginator = QuotedTweetsTimelineV2Paginator;\n// -----------------\n// - Home timeline -\n// -----------------\nclass TweetHomeTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/timelines/reverse_chronological';\n    }\n}\nexports.TweetHomeTimelineV2Paginator = TweetHomeTimelineV2Paginator;\nclass TweetUserTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/tweets';\n    }\n}\nexports.TweetUserTimelineV2Paginator = TweetUserTimelineV2Paginator;\nclass TweetUserMentionTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/mentions';\n    }\n}\nexports.TweetUserMentionTimelineV2Paginator = TweetUserMentionTimelineV2Paginator;\n// -------------\n// - Bookmarks -\n// -------------\nclass TweetBookmarksTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/bookmarks';\n    }\n}\nexports.TweetBookmarksTimelineV2Paginator = TweetBookmarksTimelineV2Paginator;\n// ---------------------------------------------------------------------------------\n// - Tweet lists (consume tweets with pagination tokens instead of since/until id) -\n// ---------------------------------------------------------------------------------\n/** A generic TwitterPaginator able to consume TweetV2 timelines. */\nclass TweetListV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n}\nclass TweetV2UserLikedTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/liked_tweets';\n    }\n}\nexports.TweetV2UserLikedTweetsPaginator = TweetV2UserLikedTweetsPaginator;\nclass TweetV2ListTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/tweets';\n    }\n}\nexports.TweetV2ListTweetsPaginator = TweetV2ListTweetsPaginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetRetweetersUsersV2Paginator = exports.TweetLikingUsersV2Paginator = exports.UserListFollowersV2Paginator = exports.UserListMembersV2Paginator = exports.UserFollowingV2Paginator = exports.UserFollowersV2Paginator = exports.UserMutingUsersV2Paginator = exports.UserBlockingUsersV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\n/** A generic PreviousableTwitterPaginator able to consume UserV2 timelines. */\nclass UserTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nclass UserBlockingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/blocking';\n    }\n}\nexports.UserBlockingUsersV2Paginator = UserBlockingUsersV2Paginator;\nclass UserMutingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/muting';\n    }\n}\nexports.UserMutingUsersV2Paginator = UserMutingUsersV2Paginator;\nclass UserFollowersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/followers';\n    }\n}\nexports.UserFollowersV2Paginator = UserFollowersV2Paginator;\nclass UserFollowingV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/following';\n    }\n}\nexports.UserFollowingV2Paginator = UserFollowingV2Paginator;\nclass UserListMembersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/members';\n    }\n}\nexports.UserListMembersV2Paginator = UserListMembersV2Paginator;\nclass UserListFollowersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/followers';\n    }\n}\nexports.UserListFollowersV2Paginator = UserListFollowersV2Paginator;\nclass TweetLikingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/liking_users';\n    }\n}\nexports.TweetLikingUsersV2Paginator = TweetLikingUsersV2Paginator;\nclass TweetRetweetersUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/retweeted_by';\n    }\n}\nexports.TweetRetweetersUsersV2Paginator = TweetRetweetersUsersV2Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserListFollowedV2Paginator = exports.UserListMembershipsV2Paginator = exports.UserOwnedListsV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\nclass ListTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    getItemArray() {\n        return this.lists;\n    }\n    /**\n     * Lists returned by paginator.\n     */\n    get lists() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nclass UserOwnedListsV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/owned_lists';\n    }\n}\nexports.UserOwnedListsV2Paginator = UserOwnedListsV2Paginator;\nclass UserListMembershipsV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/list_memberships';\n    }\n}\nexports.UserListMembershipsV2Paginator = UserListMembershipsV2Paginator;\nclass UserListFollowedV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/followed_lists';\n    }\n}\nexports.UserListFollowedV2Paginator = UserListFollowedV2Paginator;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./tweet.paginator.v2\"), exports);\n__exportStar(require(\"./TwitterPaginator\"), exports);\n__exportStar(require(\"./dm.paginator.v1\"), exports);\n__exportStar(require(\"./mutes.paginator.v1\"), exports);\n__exportStar(require(\"./tweet.paginator.v1\"), exports);\n__exportStar(require(\"./user.paginator.v1\"), exports);\n__exportStar(require(\"./user.paginator.v2\"), exports);\n__exportStar(require(\"./list.paginator.v1\"), exports);\n__exportStar(require(\"./list.paginator.v2\"), exports);\n__exportStar(require(\"./friends.paginator.v1\"), exports);\n__exportStar(require(\"./followers.paginator.v1\"), exports);\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_subclient_1 = __importDefault(require(\"../client.subclient\"));\nconst globals_1 = require(\"../globals\");\n/**\n * Base Twitter v2 labs client with only read right.\n */\nclass TwitterApiv2LabsReadOnly extends client_subclient_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_LABS_PREFIX;\n    }\n}\nexports.default = TwitterApiv2LabsReadOnly;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationDMTimelineV2Paginator = exports.OneToOneDMTimelineV2Paginator = exports.FullDMTimelineV2Paginator = exports.DMTimelineV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\nclass DMTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    getItemArray() {\n        return this.events;\n    }\n    /**\n     * Events returned by paginator.\n     */\n    get events() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nexports.DMTimelineV2Paginator = DMTimelineV2Paginator;\nclass FullDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_events';\n    }\n}\nexports.FullDMTimelineV2Paginator = FullDMTimelineV2Paginator;\nclass OneToOneDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_conversations/with/:participant_id/dm_events';\n    }\n}\nexports.OneToOneDMTimelineV2Paginator = OneToOneDMTimelineV2Paginator;\nclass ConversationDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_conversations/:dm_conversation_id/dm_events';\n    }\n}\nexports.ConversationDMTimelineV2Paginator = ConversationDMTimelineV2Paginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_subclient_1 = __importDefault(require(\"../client.subclient\"));\nconst globals_1 = require(\"../globals\");\nconst paginators_1 = require(\"../paginators\");\nconst client_v2_labs_read_1 = __importDefault(require(\"../v2-labs/client.v2.labs.read\"));\nconst user_paginator_v2_1 = require(\"../paginators/user.paginator.v2\");\nconst helpers_1 = require(\"../helpers\");\nconst dm_paginator_v2_1 = require(\"../paginators/dm.paginator.v2\");\n/**\n * Base Twitter v2 client with only read right.\n */\nclass TwitterApiv2ReadOnly extends client_subclient_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_PREFIX;\n    }\n    /* Sub-clients */\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new client_v2_labs_read_1.default(this);\n    }\n    async search(queryOrOptions, options = {}) {\n        const queryParams = typeof queryOrOptions === 'string' ?\n            { ...options, query: queryOrOptions } :\n            { ...queryOrOptions };\n        const initialRq = await this.get('tweets/search/recent', queryParams, { fullResponse: true });\n        return new paginators_1.TweetSearchRecentV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * The full-archive search endpoint returns the complete history of public Tweets matching a search query;\n     * since the first Tweet was created March 26, 2006.\n     *\n     * This endpoint is only available to those users who have been approved for the Academic Research product track.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all\n     */\n    async searchAll(query, options = {}) {\n        const queryParams = { ...options, query };\n        const initialRq = await this.get('tweets/search/all', queryParams, { fullResponse: true });\n        return new paginators_1.TweetSearchAllV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a variety of information about a single Tweet specified by the requested ID.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    singleTweet(tweetId, options = {}) {\n        return this.get('tweets/:id', options, { params: { id: tweetId } });\n    }\n    /**\n     * Returns a variety of information about tweets specified by list of IDs.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    tweets(tweetIds, options = {}) {\n        return this.get('tweets', { ids: tweetIds, ...options });\n    }\n    /**\n     * The recent Tweet counts endpoint returns count of Tweets from the last seven days that match a search query.\n     * OAuth2 Bearer auth only.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-recent\n     */\n    tweetCountRecent(query, options = {}) {\n        return this.get('tweets/counts/recent', { query, ...options });\n    }\n    /**\n     * This endpoint is only available to those users who have been approved for the Academic Research product track.\n     * The full-archive search endpoint returns the complete history of public Tweets matching a search query;\n     * since the first Tweet was created March 26, 2006.\n     * OAuth2 Bearer auth only.\n     * **This endpoint has pagination, yet it is not supported by bundled paginators. Use `next_token` to fetch next page.**\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-all\n     */\n    tweetCountAll(query, options = {}) {\n        return this.get('tweets/counts/all', { query, ...options });\n    }\n    async tweetRetweetedBy(tweetId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const initialRq = await this.get('tweets/:id/retweeted_by', parameters, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        if (!asPaginator) {\n            return initialRq.data;\n        }\n        return new user_paginator_v2_1.TweetRetweetersUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: { id: tweetId },\n        });\n    }\n    async tweetLikedBy(tweetId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const initialRq = await this.get('tweets/:id/liking_users', parameters, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        if (!asPaginator) {\n            return initialRq.data;\n        }\n        return new user_paginator_v2_1.TweetLikingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: { id: tweetId },\n        });\n    }\n    /**\n     * Allows you to retrieve a collection of the most recent Tweets and Retweets posted by you and users you follow, also known as home timeline.\n     * This endpoint returns up to the last 3200 Tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-reverse-chronological\n     *\n     * OAuth 2 scopes: `tweet.read` `users.read`\n     */\n    async homeTimeline(options = {}) {\n        const meUser = await this.getCurrentUserV2Object();\n        const initialRq = await this.get('users/:id/timelines/reverse_chronological', options, {\n            fullResponse: true,\n            params: { id: meUser.data.id },\n        });\n        return new paginators_1.TweetHomeTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: meUser.data.id },\n        });\n    }\n    /**\n     * Returns Tweets composed by a single user, specified by the requested user ID.\n     * By default, the most recent ten Tweets are returned per request.\n     * Using pagination, the most recent 3,200 Tweets can be retrieved.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets\n     */\n    async userTimeline(userId, options = {}) {\n        const initialRq = await this.get('users/:id/tweets', options, {\n            fullResponse: true,\n            params: { id: userId },\n        });\n        return new paginators_1.TweetUserTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: userId },\n        });\n    }\n    /**\n     * Returns Tweets mentioning a single user specified by the requested user ID.\n     * By default, the most recent ten Tweets are returned per request.\n     * Using pagination, up to the most recent 800 Tweets can be retrieved.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions\n     */\n    async userMentionTimeline(userId, options = {}) {\n        const initialRq = await this.get('users/:id/mentions', options, {\n            fullResponse: true,\n            params: { id: userId },\n        });\n        return new paginators_1.TweetUserMentionTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: userId },\n        });\n    }\n    /**\n     * Returns Quote Tweets for a Tweet specified by the requested Tweet ID.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/quote-tweets/api-reference/get-tweets-id-quote_tweets\n     *\n     * OAuth2 scopes: `users.read` `tweet.read`\n     */\n    async quotes(tweetId, options = {}) {\n        const initialRq = await this.get('tweets/:id/quote_tweets', options, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        return new paginators_1.QuotedTweetsTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: tweetId },\n        });\n    }\n    /* Bookmarks */\n    /**\n     * Allows you to get information about a authenticated user\u2019s 800 most recent bookmarked Tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/get-users-id-bookmarks\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.read`\n     */\n    async bookmarks(options = {}) {\n        const user = await this.getCurrentUserV2Object();\n        const initialRq = await this.get('users/:id/bookmarks', options, {\n            fullResponse: true,\n            params: { id: user.data.id },\n        });\n        return new paginators_1.TweetBookmarksTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: user.data.id },\n        });\n    }\n    /* Users */\n    /**\n     * Returns information about an authorized user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    me(options = {}) {\n        return this.get('users/me', options);\n    }\n    /**\n     * Returns a variety of information about a single user specified by the requested ID.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-id\n     */\n    user(userId, options = {}) {\n        return this.get('users/:id', options, { params: { id: userId } });\n    }\n    /**\n     * Returns a variety of information about one or more users specified by the requested IDs.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users\n     */\n    users(userIds, options = {}) {\n        const ids = Array.isArray(userIds) ? userIds.join(',') : userIds;\n        return this.get('users', { ...options, ids });\n    }\n    /**\n     * Returns a variety of information about a single user specified by their username.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username\n     */\n    userByUsername(username, options = {}) {\n        return this.get('users/by/username/:username', options, { params: { username } });\n    }\n    /**\n     * Returns a variety of information about one or more users specified by their usernames.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    usersByUsernames(usernames, options = {}) {\n        usernames = Array.isArray(usernames) ? usernames.join(',') : usernames;\n        return this.get('users/by', { ...options, usernames });\n    }\n    async followers(userId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const params = { id: userId };\n        if (!asPaginator) {\n            return this.get('users/:id/followers', parameters, { params });\n        }\n        const initialRq = await this.get('users/:id/followers', parameters, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserFollowersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: params,\n        });\n    }\n    async following(userId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const params = { id: userId };\n        if (!asPaginator) {\n            return this.get('users/:id/following', parameters, { params });\n        }\n        const initialRq = await this.get('users/:id/following', parameters, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserFollowingV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: params,\n        });\n    }\n    /**\n     * Allows you to get information about a user\u2019s liked Tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-users-id-liked_tweets\n     */\n    async userLikedTweets(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/liked_tweets', options, { fullResponse: true, params });\n        return new paginators_1.TweetV2UserLikedTweetsPaginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are blocked by the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/get-users-blocking\n     */\n    async userBlockingUsers(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/blocking', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserBlockingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are muted by the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/get-users-muting\n     */\n    async userMutingUsers(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/muting', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserMutingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Lists */\n    /**\n     * Returns the details of a specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-lists-id\n     */\n    list(id, options = {}) {\n        return this.get('lists/:id', options, { params: { id } });\n    }\n    /**\n     * Returns all Lists owned by the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-users-id-owned_lists\n     */\n    async listsOwned(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/owned_lists', options, { fullResponse: true, params });\n        return new paginators_1.UserOwnedListsV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns all Lists a specified user is a member of.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships\n     */\n    async listMemberships(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/list_memberships', options, { fullResponse: true, params });\n        return new paginators_1.UserListMembershipsV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns all Lists a specified user follows.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/get-users-id-followed_lists\n     */\n    async listFollowed(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/followed_lists', options, { fullResponse: true, params });\n        return new paginators_1.UserListFollowedV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of Tweets from the specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-tweets/api-reference/get-lists-id-tweets\n     */\n    async listTweets(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/tweets', options, { fullResponse: true, params });\n        return new paginators_1.TweetV2ListTweetsPaginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are members of the specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-lists-id-members\n     */\n    async listMembers(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/members', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserListMembersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are followers of the specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/get-lists-id-followers\n     */\n    async listFollowers(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/followers', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserListFollowersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Direct messages */\n    /**\n     * Returns a list of Direct Messages for the authenticated user, both sent and received.\n     * Direct Message events are returned in reverse chronological order.\n     * Supports retrieving events from the previous 30 days.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_events\n     */\n    async listDmEvents(options = {}) {\n        const initialRq = await this.get('dm_events', options, { fullResponse: true });\n        return new dm_paginator_v2_1.FullDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n        });\n    }\n    /**\n     * Returns a list of Direct Messages (DM) events within a 1-1 conversation with the user specified in the participant_id path parameter.\n     * Messages are returned in reverse chronological order.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_conversations-dm_conversation_id-dm_events\n     */\n    async listDmEventsWithParticipant(participantId, options = {}) {\n        const params = { participant_id: participantId };\n        const initialRq = await this.get('dm_conversations/with/:participant_id/dm_events', options, { fullResponse: true, params });\n        return new dm_paginator_v2_1.OneToOneDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of Direct Messages within a conversation specified in the dm_conversation_id path parameter.\n     * Messages are returned in reverse chronological order.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_conversations-dm_conversation_id-dm_events\n     */\n    async listDmEventsOfConversation(dmConversationId, options = {}) {\n        const params = { dm_conversation_id: dmConversationId };\n        const initialRq = await this.get('dm_conversations/:dm_conversation_id/dm_events', options, { fullResponse: true, params });\n        return new dm_paginator_v2_1.ConversationDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Spaces */\n    /**\n     * Get a single space by ID.\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    space(spaceId, options = {}) {\n        return this.get('spaces/:id', options, { params: { id: spaceId } });\n    }\n    /**\n     * Get spaces using their IDs.\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    spaces(spaceIds, options = {}) {\n        return this.get('spaces', { ids: spaceIds, ...options });\n    }\n    /**\n     * Get spaces using their creator user ID(s). (no pagination available)\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    spacesByCreators(creatorIds, options = {}) {\n        return this.get('spaces/by/creator_ids', { user_ids: creatorIds, ...options });\n    }\n    /**\n     * Search through spaces using multiple params. (no pagination available)\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/search/api-reference/get-spaces-search\n     */\n    searchSpaces(options) {\n        return this.get('spaces/search', options);\n    }\n    /**\n    * Returns a list of user who purchased a ticket to the requested Space.\n    * You must authenticate the request using the Access Token of the creator of the requested Space.\n    *\n    * **OAuth 2.0 Access Token required**\n    *\n    * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers\n    *\n    * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n    */\n    spaceBuyers(spaceId, options = {}) {\n        return this.get('spaces/:id/buyers', options, { params: { id: spaceId } });\n    }\n    /**\n     * Returns Tweets shared in the requested Spaces.\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`, `space.read`\n     */\n    spaceTweets(spaceId, options = {}) {\n        return this.get('spaces/:id/tweets', options, { params: { id: spaceId } });\n    }\n    searchStream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/search/stream', options, { payloadIsError: helpers_1.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    /**\n     * Return a list of rules currently active on the streaming endpoint, either as a list or individually.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules\n     */\n    streamRules(options = {}) {\n        return this.get('tweets/search/stream/rules', options);\n    }\n    updateStreamRules(options, query = {}) {\n        return this.post('tweets/search/stream/rules', options, { query });\n    }\n    sampleStream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/sample/stream', options, { payloadIsError: helpers_1.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    sample10Stream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/sample10/stream', options, { payloadIsError: helpers_1.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    /* Batch compliance */\n    /**\n     * Returns a list of recent compliance jobs.\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs\n     */\n    complianceJobs(options) {\n        return this.get('compliance/jobs', options);\n    }\n    /**\n     * Get a single compliance job with the specified ID.\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs-id\n     */\n    complianceJob(jobId) {\n        return this.get('compliance/jobs/:id', undefined, { params: { id: jobId } });\n    }\n    /**\n     * Creates a new compliance job for Tweet IDs or user IDs, send your file, await result and parse it into an array.\n     * You can run one batch job at a time. Returns the created job, but **not the job result!**.\n     *\n     * You can obtain the result (**after job is completed**) with `.complianceJobResult`.\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs\n     */\n    async sendComplianceJob(jobParams) {\n        const job = await this.post('compliance/jobs', { type: jobParams.type, name: jobParams.name });\n        // Send the IDs\n        const rawIdsBody = jobParams.ids instanceof Buffer ? jobParams.ids : Buffer.from(jobParams.ids.join('\\n'));\n        // Upload the IDs\n        await this.put(job.data.upload_url, rawIdsBody, {\n            forceBodyMode: 'raw',\n            enableAuth: false,\n            headers: { 'Content-Type': 'text/plain' },\n            prefix: '',\n        });\n        return job;\n    }\n    /**\n     * Get the result of a running or completed job, obtained through `.complianceJob`, `.complianceJobs` or `.sendComplianceJob`.\n     * If job is still running (`in_progress`), it will await until job is completed. **This could be quite long!**\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs\n     */\n    async complianceJobResult(job) {\n        let runningJob = job;\n        while (runningJob.status !== 'complete') {\n            if (runningJob.status === 'expired' || runningJob.status === 'failed') {\n                throw new Error('Job failed to be completed.');\n            }\n            await new Promise(resolve => setTimeout(resolve, 3500));\n            runningJob = (await this.complianceJob(job.id)).data;\n        }\n        // Download and parse result\n        const result = await this.get(job.download_url, undefined, {\n            enableAuth: false,\n            prefix: '',\n        });\n        return result\n            .trim()\n            .split('\\n')\n            .filter(line => line)\n            .map(line => JSON.parse(line));\n    }\n}\nexports.default = TwitterApiv2ReadOnly;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globals_1 = require(\"../globals\");\nconst client_v2_labs_read_1 = __importDefault(require(\"./client.v2.labs.read\"));\n/**\n * Base Twitter v2 labs client with read/write rights.\n */\nclass TwitterApiv2LabsReadWrite extends client_v2_labs_read_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_LABS_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\nexports.default = TwitterApiv2LabsReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globals_1 = require(\"../globals\");\nconst client_v2_read_1 = __importDefault(require(\"./client.v2.read\"));\nconst client_v2_labs_write_1 = __importDefault(require(\"../v2-labs/client.v2.labs.write\"));\n/**\n * Base Twitter v2 client with read/write rights.\n */\nclass TwitterApiv2ReadWrite extends client_v2_read_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_PREFIX;\n    }\n    /* Sub-clients */\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new client_v2_labs_write_1.default(this);\n    }\n    /* Tweets */\n    /**\n     * Hides or unhides a reply to a Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/hide-replies/api-reference/put-tweets-id-hidden\n     */\n    hideReply(tweetId, makeHidden) {\n        return this.put('tweets/:id/hidden', { hidden: makeHidden }, { params: { id: tweetId } });\n    }\n    /**\n     * Causes the user ID identified in the path parameter to Like the target Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/post-users-user_id-likes\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    like(loggedUserId, targetTweetId) {\n        return this.post('users/:id/likes', { tweet_id: targetTweetId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to unlike a Tweet.\n     * The request succeeds with no action when the user sends a request to a user they're not liking the Tweet or have already unliked the Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/delete-users-id-likes-tweet_id\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unlike(loggedUserId, targetTweetId) {\n        return this.delete('users/:id/likes/:tweet_id', undefined, {\n            params: { id: loggedUserId, tweet_id: targetTweetId },\n        });\n    }\n    /**\n     * Causes the user ID identified in the path parameter to Retweet the target Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/post-users-id-retweets\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    retweet(loggedUserId, targetTweetId) {\n        return this.post('users/:id/retweets', { tweet_id: targetTweetId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to remove the Retweet of a Tweet.\n     * The request succeeds with no action when the user sends a request to a user they're not Retweeting the Tweet or have already removed the Retweet of.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/delete-users-id-retweets-tweet_id\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unretweet(loggedUserId, targetTweetId) {\n        return this.delete('users/:id/retweets/:tweet_id', undefined, {\n            params: { id: loggedUserId, tweet_id: targetTweetId },\n        });\n    }\n    tweet(status, payload = {}) {\n        if (typeof status === 'object') {\n            payload = status;\n        }\n        else {\n            payload = { text: status, ...payload };\n        }\n        return this.post('tweets', payload);\n    }\n    /**\n     * Reply to a Tweet on behalf of an authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    reply(status, toTweetId, payload = {}) {\n        var _a;\n        const reply = { in_reply_to_tweet_id: toTweetId, ...(_a = payload.reply) !== null && _a !== void 0 ? _a : {} };\n        return this.post('tweets', { text: status, ...payload, reply });\n    }\n    /**\n     * Quote an existing Tweet on behalf of an authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    quote(status, quotedTweetId, payload = {}) {\n        return this.tweet(status, { ...payload, quote_tweet_id: quotedTweetId });\n    }\n    /**\n     * Post a series of tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    async tweetThread(tweets) {\n        var _a, _b;\n        const postedTweets = [];\n        for (const tweet of tweets) {\n            // Retrieve the last sent tweet\n            const lastTweet = postedTweets.length ? postedTweets[postedTweets.length - 1] : null;\n            // Build the tweet query params\n            const queryParams = { ...(typeof tweet === 'string' ? ({ text: tweet }) : tweet) };\n            // Reply to an existing tweet if needed\n            const inReplyToId = lastTweet ? lastTweet.data.id : (_a = queryParams.reply) === null || _a === void 0 ? void 0 : _a.in_reply_to_tweet_id;\n            const status = (_b = queryParams.text) !== null && _b !== void 0 ? _b : '';\n            if (inReplyToId) {\n                postedTweets.push(await this.reply(status, inReplyToId, queryParams));\n            }\n            else {\n                postedTweets.push(await this.tweet(status, queryParams));\n            }\n        }\n        return postedTweets;\n    }\n    /**\n     * Allows a user or authenticated user ID to delete a Tweet\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/delete-tweets-id\n     */\n    deleteTweet(tweetId) {\n        return this.delete('tweets/:id', undefined, {\n            params: {\n                id: tweetId,\n            },\n        });\n    }\n    /* Bookmarks */\n    /**\n     * Causes the user ID of an authenticated user identified in the path parameter to Bookmark the target Tweet provided in the request body.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/post-users-id-bookmarks\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.write`\n     */\n    async bookmark(tweetId) {\n        const user = await this.getCurrentUserV2Object();\n        return this.post('users/:id/bookmarks', { tweet_id: tweetId }, { params: { id: user.data.id } });\n    }\n    /**\n     * Allows a user or authenticated user ID to remove a Bookmark of a Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/delete-users-id-bookmarks-tweet_id\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.write`\n     */\n    async deleteBookmark(tweetId) {\n        const user = await this.getCurrentUserV2Object();\n        return this.delete('users/:id/bookmarks/:tweet_id', undefined, { params: { id: user.data.id, tweet_id: tweetId } });\n    }\n    /* Users */\n    /**\n     * Allows a user ID to follow another user.\n     * If the target user does not have public Tweets, this endpoint will send a follow request.\n     * https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/post-users-source_user_id-following\n     *\n     * OAuth2 scope: `follows.write`\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    follow(loggedUserId, targetUserId) {\n        return this.post('users/:id/following', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user ID to unfollow another user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/delete-users-source_id-following\n     *\n     * OAuth2 scope: `follows.write`\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unfollow(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/following/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /**\n     * Causes the user (in the path) to block the target user.\n     * The user (in the path) must match the user context authorizing the request.\n     * https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/post-users-user_id-blocking\n     *\n     * **Note**: You must specify the currently logged user ID; you can obtain it through v1.1 API.\n     */\n    block(loggedUserId, targetUserId) {\n        return this.post('users/:id/blocking', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to unblock another user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/delete-users-user_id-blocking\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unblock(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/blocking/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /**\n     * Allows an authenticated user ID to mute the target user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/post-users-user_id-muting\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    mute(loggedUserId, targetUserId) {\n        return this.post('users/:id/muting', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows an authenticated user ID to unmute the target user.\n     * The request succeeds with no action when the user sends a request to a user they're not muting or have already unmuted.\n     * https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/delete-users-user_id-muting\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unmute(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/muting/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /* Lists */\n    /**\n     * Creates a new list for the authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists\n     */\n    createList(options) {\n        return this.post('lists', options);\n    }\n    /**\n     * Updates the specified list. The authenticated user must own the list to be able to update it.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/put-lists-id\n     */\n    updateList(listId, options = {}) {\n        return this.put('lists/:id', options, { params: { id: listId } });\n    }\n    /**\n     * Deletes the specified list. The authenticated user must own the list to be able to destroy it.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id\n     */\n    removeList(listId) {\n        return this.delete('lists/:id', undefined, { params: { id: listId } });\n    }\n    /**\n     * Adds a member to a list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists-id-members\n     */\n    addListMember(listId, userId) {\n        return this.post('lists/:id/members', { user_id: userId }, { params: { id: listId } });\n    }\n    /**\n     * Remember a member to a list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id-members-user_id\n     */\n    removeListMember(listId, userId) {\n        return this.delete('lists/:id/members/:user_id', undefined, { params: { id: listId, user_id: userId } });\n    }\n    /**\n     * Subscribes the authenticated user to the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-users-id-followed-lists\n     */\n    subscribeToList(loggedUserId, listId) {\n        return this.post('users/:id/followed_lists', { list_id: listId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Unsubscribes the authenticated user to the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-users-id-followed-lists-list_id\n     */\n    unsubscribeOfList(loggedUserId, listId) {\n        return this.delete('users/:id/followed_lists/:list_id', undefined, { params: { id: loggedUserId, list_id: listId } });\n    }\n    /**\n     * Enables the authenticated user to pin a List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-users-id-pinned-lists\n     */\n    pinList(loggedUserId, listId) {\n        return this.post('users/:id/pinned_lists', { list_id: listId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Enables the authenticated user to unpin a List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-users-id-pinned-lists-list_id\n     */\n    unpinList(loggedUserId, listId) {\n        return this.delete('users/:id/pinned_lists/:list_id', undefined, { params: { id: loggedUserId, list_id: listId } });\n    }\n    /* Direct messages */\n    /**\n     * Creates a Direct Message on behalf of an authenticated user, and adds it to the specified conversation.\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations-dm_conversation_id-messages\n     */\n    sendDmInConversation(conversationId, message) {\n        return this.post('dm_conversations/:dm_conversation_id/messages', message, { params: { dm_conversation_id: conversationId } });\n    }\n    /**\n     * Creates a one-to-one Direct Message and adds it to the one-to-one conversation.\n     * This method either creates a new one-to-one conversation or retrieves the current conversation and adds the Direct Message to it.\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations-with-participant_id-messages\n     */\n    sendDmToParticipant(participantId, message) {\n        return this.post('dm_conversations/with/:participant_id/messages', message, { params: { participant_id: participantId } });\n    }\n    /**\n     * Creates a new group conversation and adds a Direct Message to it on behalf of an authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations\n     */\n    createDmConversation(options) {\n        return this.post('dm_conversations', options);\n    }\n}\nexports.default = TwitterApiv2ReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiv2Labs = void 0;\nconst globals_1 = require(\"../globals\");\nconst client_v2_labs_write_1 = __importDefault(require(\"./client.v2.labs.write\"));\n/**\n * Twitter v2 labs client with all rights (read/write/DMs)\n */\nclass TwitterApiv2Labs extends client_v2_labs_write_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_LABS_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n}\nexports.TwitterApiv2Labs = TwitterApiv2Labs;\nexports.default = TwitterApiv2Labs;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiv2 = void 0;\nconst globals_1 = require(\"../globals\");\nconst client_v2_write_1 = __importDefault(require(\"./client.v2.write\"));\nconst client_v2_labs_1 = __importDefault(require(\"../v2-labs/client.v2.labs\"));\n/**\n * Twitter v2 client with all rights (read/write/DMs)\n */\nclass TwitterApiv2 extends client_v2_write_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_PREFIX;\n        /** API endpoints */\n    }\n    /* Sub-clients */\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new client_v2_labs_1.default(this);\n    }\n}\nexports.TwitterApiv2 = TwitterApiv2;\nexports.default = TwitterApiv2;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __importDefault(require(\".\"));\nconst client_base_1 = __importDefault(require(\"../client.base\"));\nconst client_v1_read_1 = __importDefault(require(\"../v1/client.v1.read\"));\nconst client_v2_read_1 = __importDefault(require(\"../v2/client.v2.read\"));\nconst oauth2_helper_1 = require(\"../client-mixins/oauth2.helper\");\nconst request_param_helper_1 = __importDefault(require(\"../client-mixins/request-param.helper\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadOnly extends client_base_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_read_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_read_1.default(this);\n    }\n    /**\n     * Fetch and cache current user.\n     * This method can only be called with a OAuth 1.0a user authentication.\n     *\n     * You can use this method to test if authentication was successful.\n     * Next calls to this methods will use the cached user, unless `forceFetch: true` is given.\n     */\n    async currentUser(forceFetch = false) {\n        return await this.getCurrentUserObject(forceFetch);\n    }\n    /**\n     * Fetch and cache current user.\n     * This method can only be called with a OAuth 1.0a or OAuth2 user authentication.\n     *\n     * This can only be the slimest available `UserV2` object, with only id, name and username properties defined.\n     * To get a customized `UserV2Result`, use `.v2.me()`\n     *\n     * You can use this method to test if authentication was successful.\n     * Next calls to this methods will use the cached user, unless `forceFetch: true` is given.\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    async currentUserV2(forceFetch = false) {\n        return await this.getCurrentUserV2Object(forceFetch);\n    }\n    /* Shortcuts to endpoints */\n    search(what, options) {\n        return this.v2.search(what, options);\n    }\n    /* Authentication */\n    /**\n     * Generate the OAuth request token link for user-based OAuth 1.0 auth.\n     *\n     * ```ts\n     * // Instantiate TwitterApi with consumer keys\n     * const client = new TwitterApi({ appKey: 'consumer_key', appSecret: 'consumer_secret' });\n     *\n     * const tokenRequest = await client.generateAuthLink('oob-or-your-callback-url');\n     * // redirect end-user to tokenRequest.url\n     *\n     * // Save tokenRequest.oauth_token_secret somewhere, it will be needed for next auth step.\n     * ```\n     */\n    async generateAuthLink(oauth_callback = 'oob', { authAccessType, linkMode = 'authenticate', forceLogin, screenName, } = {}) {\n        const oauthResult = await this.post('https://api.twitter.com/oauth/request_token', { oauth_callback, x_auth_access_type: authAccessType });\n        let url = `https://api.twitter.com/oauth/${linkMode}?oauth_token=${encodeURIComponent(oauthResult.oauth_token)}`;\n        if (forceLogin !== undefined) {\n            url += `&force_login=${encodeURIComponent(forceLogin)}`;\n        }\n        if (screenName !== undefined) {\n            url += `&screen_name=${encodeURIComponent(screenName)}`;\n        }\n        if (this._requestMaker.hasPlugins()) {\n            this._requestMaker.applyPluginMethod('onOAuth1RequestToken', {\n                client: this._requestMaker,\n                url,\n                oauthResult,\n            });\n        }\n        return {\n            url,\n            ...oauthResult,\n        };\n    }\n    /**\n     * Obtain access to user-based OAuth 1.0 auth.\n     *\n     * After user is redirect from your callback, use obtained oauth_token and oauth_verifier to\n     * instantiate the new TwitterApi instance.\n     *\n     * ```ts\n     * // Use the saved oauth_token_secret associated to oauth_token returned by callback\n     * const requestClient = new TwitterApi({\n     *  appKey: 'consumer_key',\n     *  appSecret: 'consumer_secret',\n     *  accessToken: 'oauth_token',\n     *  accessSecret: 'oauth_token_secret'\n     * });\n     *\n     * // Use oauth_verifier obtained from callback request\n     * const { client: userClient } = await requestClient.login('oauth_verifier');\n     *\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * ```\n     */\n    async login(oauth_verifier) {\n        const tokens = this.getActiveTokens();\n        if (tokens.type !== 'oauth-1.0a')\n            throw new Error('You must setup TwitterApi instance with consumer keys to accept OAuth 1.0 login');\n        const oauth_result = await this.post('https://api.twitter.com/oauth/access_token', { oauth_token: tokens.accessToken, oauth_verifier });\n        const client = new _1.default({\n            appKey: tokens.appKey,\n            appSecret: tokens.appSecret,\n            accessToken: oauth_result.oauth_token,\n            accessSecret: oauth_result.oauth_token_secret,\n        }, this._requestMaker.clientSettings);\n        return {\n            accessToken: oauth_result.oauth_token,\n            accessSecret: oauth_result.oauth_token_secret,\n            userId: oauth_result.user_id,\n            screenName: oauth_result.screen_name,\n            client,\n        };\n    }\n    /**\n     * Enable application-only authentication.\n     *\n     * To make the request, instantiate TwitterApi with consumer and secret.\n     *\n     * ```ts\n     * const requestClient = new TwitterApi({ appKey: 'consumer', appSecret: 'secret' });\n     * const appClient = await requestClient.appLogin();\n     *\n     * // Use {appClient} to make requests\n     * ```\n     */\n    async appLogin() {\n        const tokens = this.getActiveTokens();\n        if (tokens.type !== 'oauth-1.0a')\n            throw new Error('You must setup TwitterApi instance with consumer keys to accept app-only login');\n        // Create a client with Basic authentication\n        const basicClient = new _1.default({ username: tokens.appKey, password: tokens.appSecret }, this._requestMaker.clientSettings);\n        const res = await basicClient.post('https://api.twitter.com/oauth2/token', { grant_type: 'client_credentials' });\n        // New object with Bearer token\n        return new _1.default(res.access_token, this._requestMaker.clientSettings);\n    }\n    /* OAuth 2 user authentication */\n    /**\n     * Generate the OAuth request token link for user-based OAuth 2.0 auth.\n     *\n     * - **You can only use v2 API endpoints with this authentication method.**\n     * - **You need to specify which scope you want to have when you create your auth link. Make sure it matches your needs.**\n     *\n     * See https://developer.twitter.com/en/docs/authentication/oauth-2-0/user-access-token for details.\n     *\n     * ```ts\n     * // Instantiate TwitterApi with client ID\n     * const client = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * // Generate a link to callback URL that will gives a token with tweet+user read access\n     * const link = client.generateOAuth2AuthLink('your-callback-url', { scope: ['tweet.read', 'users.read'] });\n     *\n     * // Extract props from generate link\n     * const { url, state, codeVerifier } = link;\n     *\n     * // redirect end-user to url\n     * // Save `state` and `codeVerifier` somewhere, it will be needed for next auth step.\n     * ```\n     */\n    generateOAuth2AuthLink(redirectUri, options = {}) {\n        var _a, _b;\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. You can find your client ID in Twitter Developer Portal. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const state = (_a = options.state) !== null && _a !== void 0 ? _a : oauth2_helper_1.OAuth2Helper.generateRandomString(32);\n        const codeVerifier = oauth2_helper_1.OAuth2Helper.getCodeVerifier();\n        const codeChallenge = oauth2_helper_1.OAuth2Helper.getCodeChallengeFromVerifier(codeVerifier);\n        const rawScope = (_b = options.scope) !== null && _b !== void 0 ? _b : '';\n        const scope = Array.isArray(rawScope) ? rawScope.join(' ') : rawScope;\n        const url = new URL('https://twitter.com/i/oauth2/authorize');\n        const query = {\n            response_type: 'code',\n            client_id: this._requestMaker.clientId,\n            redirect_uri: redirectUri,\n            state,\n            code_challenge: codeChallenge,\n            code_challenge_method: 's256',\n            scope,\n        };\n        request_param_helper_1.default.addQueryParamsToUrl(url, query);\n        const result = {\n            url: url.toString(),\n            state,\n            codeVerifier,\n            codeChallenge,\n        };\n        if (this._requestMaker.hasPlugins()) {\n            this._requestMaker.applyPluginMethod('onOAuth2RequestToken', {\n                client: this._requestMaker,\n                result,\n                redirectUri,\n            });\n        }\n        return result;\n    }\n    /**\n     * Obtain access to user-based OAuth 2.0 auth.\n     *\n     * After user is redirect from your callback, use obtained code to\n     * instantiate the new TwitterApi instance.\n     *\n     * You need to obtain `codeVerifier` from a call to `.generateOAuth2AuthLink`.\n     *\n     * ```ts\n     * // Use the saved codeVerifier associated to state (present in query string of callback)\n     * const requestClient = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * const { client: userClient, refreshToken } = await requestClient.loginWithOAuth2({\n     *  code: 'codeFromQueryString',\n     *  // the same URL given to generateOAuth2AuthLink\n     *  redirectUri,\n     *  // the verifier returned by generateOAuth2AuthLink\n     *  codeVerifier,\n     * });\n     *\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * // {refreshToken} is defined if 'offline.access' is in scope.\n     * ```\n     */\n    async loginWithOAuth2({ code, codeVerifier, redirectUri }) {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const accessTokenResult = await this.post('https://api.twitter.com/2/oauth2/token', {\n            code,\n            code_verifier: codeVerifier,\n            redirect_uri: redirectUri,\n            grant_type: 'authorization_code',\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n        });\n        return this.parseOAuth2AccessTokenResult(accessTokenResult);\n    }\n    /**\n     * Obtain a new access token to user-based OAuth 2.0 auth from a refresh token.\n     *\n     * ```ts\n     * const requestClient = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * const { client: userClient } = await requestClient.refreshOAuth2Token('refreshToken');\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * ```\n     */\n    async refreshOAuth2Token(refreshToken) {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const accessTokenResult = await this.post('https://api.twitter.com/2/oauth2/token', {\n            refresh_token: refreshToken,\n            grant_type: 'refresh_token',\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n        });\n        return this.parseOAuth2AccessTokenResult(accessTokenResult);\n    }\n    /**\n     * Revoke a single user-based OAuth 2.0 token.\n     *\n     * You must specify its source, access token (directly after login)\n     * or refresh token (if you've called `.refreshOAuth2Token` before).\n     */\n    async revokeOAuth2Token(token, tokenType = 'access_token') {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        return await this.post('https://api.twitter.com/2/oauth2/revoke', {\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n            token,\n            token_type_hint: tokenType,\n        });\n    }\n    parseOAuth2AccessTokenResult(result) {\n        const client = new _1.default(result.access_token, this._requestMaker.clientSettings);\n        const scope = result.scope.split(' ').filter(e => e);\n        return {\n            client,\n            expiresIn: result.expires_in,\n            accessToken: result.access_token,\n            scope,\n            refreshToken: result.refresh_token,\n        };\n    }\n}\nexports.default = TwitterApiReadOnly;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_v1_write_1 = __importDefault(require(\"../v1/client.v1.write\"));\nconst client_v2_write_1 = __importDefault(require(\"../v2/client.v2.write\"));\nconst readonly_1 = __importDefault(require(\"./readonly\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadWrite extends readonly_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_write_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_write_1.default(this);\n    }\n    /**\n     * Get a client with read only rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\nexports.default = TwitterApiReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiReadOnly = exports.TwitterApiReadWrite = exports.TwitterApi = void 0;\nconst client_v1_1 = __importDefault(require(\"../v1/client.v1\"));\nconst client_v2_1 = __importDefault(require(\"../v2/client.v2\"));\nconst readwrite_1 = __importDefault(require(\"./readwrite\"));\n// \"Real\" exported client for usage of TwitterApi.\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApi extends readwrite_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_1.default(this);\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /* Static helpers */\n    static getErrors(error) {\n        var _a;\n        if (typeof error !== 'object')\n            return [];\n        if (!('data' in error))\n            return [];\n        return (_a = error.data.errors) !== null && _a !== void 0 ? _a : [];\n    }\n    /** Extract another image size than obtained in a `profile_image_url` or `profile_image_url_https` field of a user object. */\n    static getProfileImageInSize(profileImageUrl, size) {\n        const lastPart = profileImageUrl.split('/').pop();\n        const sizes = ['normal', 'bigger', 'mini'];\n        let originalUrl = profileImageUrl;\n        for (const availableSize of sizes) {\n            if (lastPart.includes(`_${availableSize}`)) {\n                originalUrl = profileImageUrl.replace(`_${availableSize}`, '');\n                break;\n            }\n        }\n        if (size === 'original') {\n            return originalUrl;\n        }\n        const extPos = originalUrl.lastIndexOf('.');\n        if (extPos !== -1) {\n            const ext = originalUrl.slice(extPos + 1);\n            return originalUrl.slice(0, extPos) + '_' + size + '.' + ext;\n        }\n        else {\n            return originalUrl + '_' + size;\n        }\n    }\n}\nexports.TwitterApi = TwitterApi;\nvar readwrite_2 = require(\"./readwrite\");\nObject.defineProperty(exports, \"TwitterApiReadWrite\", { enumerable: true, get: function () { return __importDefault(readwrite_2).default; } });\nvar readonly_1 = require(\"./readonly\");\nObject.defineProperty(exports, \"TwitterApiReadOnly\", { enumerable: true, get: function () { return __importDefault(readonly_1).default; } });\nexports.default = TwitterApi;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar client_1 = require(\"./client\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return __importDefault(client_1).default; } });\n__exportStar(require(\"./client\"), exports);\n__exportStar(require(\"./v1/client.v1\"), exports);\n__exportStar(require(\"./v2/client.v2\"), exports);\n__exportStar(require(\"./v2/includes.v2.helper\"), exports);\n__exportStar(require(\"./v2-labs/client.v2.labs\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./paginators\"), exports);\n__exportStar(require(\"./stream/TweetStream\"), exports);\n__exportStar(require(\"./settings\"), exports);\n", "import { ReactElement } from \"react\";\nimport { useV2 } from \"./common\";\nimport { TweetSendThreadForm } from \"./v1/components/send\";\nimport { TweetSendThreadFormV2 } from \"./v2/components/send\";\n\nexport default function SendTweetRoot({ launchContext }: { launchContext?: { defaultValue: string } }): ReactElement {\n  if (useV2()) {\n    return <TweetSendThreadFormV2 defaultValue={launchContext?.defaultValue} />;\n  } else {\n    return <TweetSendThreadForm />;\n  }\n}\n", "import { getPreferenceValues } from \"@raycast/api\";\nimport { getClientId } from \"./v2/lib/oauth\";\n\nexport function shouldShowListWithDetails(): boolean {\n  const pref = getPreferenceValues();\n  const val: boolean | undefined = pref.listwithdetail as boolean;\n  if (val === undefined) {\n    return true;\n  }\n  return val;\n}\n\nexport function useV2(): boolean {\n  return true; // v1 does not work anymore with X\n  /*const pref = getPreferenceValues();\n  const appKey = (pref.appkey as string) || \"\";\n  const appSecret = (pref.appsecret as string) || \"\";\n  const accessToken = (pref.accesstoken as string) || \"\";\n  const accessSecret = (pref.accesssecret as string) || \"\";\n  if (appKey.length > 0 || appSecret.length > 0 || accessToken.length > 0 || accessSecret.length > 0) {\n    console.log(\"use v1\");\n    return false;\n  }\n  console.log(\"use v2\");\n  return true;*/\n}\n\nexport function hasRestrictedAccess() {\n  const ci = getClientId();\n  if (!ci || ci === \"\" || ci === \"-\") {\n    return true;\n  }\n  return false;\n}\n", "import { OAuth, getPreferenceValues } from \"@raycast/api\";\nimport fetch from \"node-fetch\";\nimport { XIcon } from \"../../icon\";\n\n// Register a new OAuth app via https://developer.twitter.com/en/portal/dashboard\n// Select OAuth 2.0\n// As type of app choose: Native App\n// For the redirect URL enter: https://raycast.com/redirect\n// For the website URL enter: https://raycast.com\n\ninterface Preferences {\n  clientid?: string;\n}\n\nexport function getClientId(): string {\n  const prefs = getPreferenceValues<Preferences>();\n  return prefs.clientid || \"\";\n}\n\nconst oauthClient = new OAuth.PKCEClient({\n  redirectMethod: OAuth.RedirectMethod.Web,\n  providerName: \"Twitter\",\n  providerIcon: XIcon(),\n  providerId: \"twitter\",\n  description: \"Connect your X account\",\n});\n\n// Authorization\n\nexport async function authorize(): Promise<void> {\n  const tokenSet = await oauthClient.getTokens();\n  if (tokenSet?.accessToken) {\n    if (tokenSet.refreshToken && tokenSet.isExpired()) {\n      await oauthClient.setTokens(await refreshTokens(tokenSet.refreshToken));\n    }\n    return;\n  }\n\n  const authRequest = await oauthClient.authorizationRequest({\n    endpoint: \"https://twitter.com/i/oauth2/authorize\",\n    clientId: getClientId(),\n    scope: \"tweet.read tweet.write users.read follows.read like.read like.write offline.access\",\n  });\n  const { authorizationCode } = await oauthClient.authorize(authRequest);\n  await oauthClient.setTokens(await fetchTokens(authRequest, authorizationCode));\n}\n\nexport async function fetchTokens(\n  authRequest: OAuth.AuthorizationRequest,\n  authCode: string,\n): Promise<OAuth.TokenResponse> {\n  const params = new URLSearchParams();\n  params.append(\"client_id\", getClientId());\n  params.append(\"code\", authCode);\n  params.append(\"code_verifier\", authRequest.codeVerifier);\n  params.append(\"grant_type\", \"authorization_code\");\n  params.append(\"redirect_uri\", authRequest.redirectURI);\n\n  const response = await fetch(\"https://api.twitter.com/2/oauth2/token\", { method: \"POST\", body: params });\n  if (!response.ok) {\n    console.error(\"fetch tokens error:\", await response.text());\n    throw new Error(response.statusText);\n  }\n  return (await response.json()) as OAuth.TokenResponse;\n}\n\nexport async function getOAuthTokens(): Promise<OAuth.TokenSet | undefined> {\n  return await oauthClient.getTokens();\n}\n\nexport async function resetOAuthTokens(): Promise<void> {\n  await oauthClient.removeTokens();\n}\n\nasync function refreshTokens(refreshToken: string): Promise<OAuth.TokenResponse> {\n  const params = new URLSearchParams();\n  params.append(\"client_id\", getClientId());\n  params.append(\"refresh_token\", refreshToken);\n  params.append(\"grant_type\", \"refresh_token\");\n\n  const response = await fetch(\"https://api.twitter.com/2/oauth2/token\", { method: \"POST\", body: params });\n  if (!response.ok) {\n    console.error(\"refresh tokens error:\", await response.text());\n    throw new Error(response.statusText);\n  }\n\n  const tokenResponse = (await response.json()) as OAuth.TokenResponse;\n  tokenResponse.refresh_token = tokenResponse.refresh_token ?? refreshToken;\n  return tokenResponse;\n}\n", "/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'http';\nimport https from 'https';\nimport zlib from 'zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'stream';\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nexport {Headers, Request, Response, FetchError, AbortError, isRedirect};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst options = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(options.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${options.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (options.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tresponse.body.destroy(error);\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : new URL(location, request.url);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), reject);\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), reject);\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), reject);\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tbody = (chunk[0] & 0x0F) === 0x08 ? pump(body, zlib.createInflate(), reject) : pump(body, zlib.createInflateRaw(), reject);\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), reject);\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(request_, request);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\n\t\trequest.on('abort', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t});\n\n\t\tsocket.on('data', buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t});\n\t});\n}\n", "\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'stream';\nimport {types} from 'util';\n\nimport Blob from 'fetch-blob';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {formDataIterator, getBoundary, getFormDataLength} from './utils/form-data.js';\nimport {isBlob, isURLSearchParameters, isFormData} from './utils/is.js';\n\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (isFormData(body)) {\n\t\t\t// Body is an instance of formdata-node\n\t\t\tboundary = `NodeFetchFormDataBoundary${getBoundary()}`;\n\t\t\tbody = Stream.Readable.from(formDataIterator(body, boundary));\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.buffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn JSON.parse(buffer.toString());\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn buffer.toString();\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tlet {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\tbody = Stream.Readable.from(body.stream());\n\t}\n\n\t// Body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body;\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance;\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t}\n\n\tif (isFormData(body)) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request;\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is a spec-compliant form-data\n\tif (isFormData(body)) {\n\t\treturn getFormDataLength(request[INTERNALS].boundary);\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {void}\n */\nexport const writeToStream = (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\t// Body is Blob\n\t\tStream.Readable.from(body.stream()).pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// Body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tbody.pipe(dest);\n\t}\n};\n", "\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs';\n\n/** @typedef {import('buffer').Blob} NodeBlob} */\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536;\n\n/** @param {(Blob | NodeBlob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n\tfor (let part of parts) {\n\t\tif ('stream' in part) {\n\t\t\tyield * part.stream();\n\t\t} else if (ArrayBuffer.isView(part)) {\n\t\t\tif (clone) {\n\t\t\t\tlet position = part.byteOffset;\n\t\t\t\tlet end = part.byteOffset + part.byteLength;\n\t\t\t\twhile (position !== end) {\n\t\t\t\t\tconst size = Math.min(end - position, POOL_SIZE);\n\t\t\t\t\tconst chunk = part.buffer.slice(position, position + size);\n\t\t\t\t\tposition += chunk.byteLength;\n\t\t\t\t\tyield new Uint8Array(chunk);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield part;\n\t\t\t}\n\t\t} else {\n\t\t\t/* c8 ignore start */\n\t\t\t// For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n\t\t\tlet position = 0;\n\t\t\twhile (position !== part.size) {\n\t\t\t\tconst chunk = part.slice(position, Math.min(part.size, position + POOL_SIZE));\n\t\t\t\tconst buffer = await chunk.arrayBuffer();\n\t\t\t\tposition += buffer.byteLength;\n\t\t\t\tyield new Uint8Array(buffer);\n\t\t\t}\n\t\t\t/* c8 ignore end */\n\t\t}\n\t}\n}\n\nconst _Blob = class Blob {\n\n\t/** @type {Array.<(Blob|Uint8Array)>} */\n\t#parts = [];\n\t#type = '';\n\t#size = 0;\n\n\t/**\n\t * The Blob() constructor returns a new Blob object. The content\n\t * of the blob consists of the concatenation of the values given\n\t * in the parameter array.\n\t *\n\t * @param {*} blobParts\n\t * @param {{ type?: string }} [options]\n\t */\n\tconstructor(blobParts = [], options = {}) {\n\t\tlet size = 0;\n\n\t\tconst parts = blobParts.map(element => {\n\t\t\tlet part;\n\t\t\tif (ArrayBuffer.isView(element)) {\n\t\t\t\tpart = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));\n\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\tpart = new Uint8Array(element.slice(0));\n\t\t\t} else if (element instanceof Blob) {\n\t\t\t\tpart = element;\n\t\t\t} else {\n\t\t\t\tpart = new TextEncoder().encode(element);\n\t\t\t}\n\n\t\t\tsize += ArrayBuffer.isView(part) ? part.byteLength : part.size;\n\t\t\treturn part;\n\t\t});\n\n\t\tconst type = options.type === undefined ? '' : String(options.type);\n\n\t\tthis.#type = /[^\\u0020-\\u007E]/.test(type) ? '' : type;\n\t\tthis.#size = size;\n\t\tthis.#parts = parts;\n\t}\n\n\t/**\n\t * The Blob interface's size property returns the\n\t * size of the Blob in bytes.\n\t */\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t/**\n\t * The type property of a Blob object returns the MIME type of the file.\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n\t/**\n\t * The text() method in the Blob interface returns a Promise\n\t * that resolves with a string containing the contents of\n\t * the blob, interpreted as UTF-8.\n\t *\n\t * @return {Promise<string>}\n\t */\n\tasync text() {\n\t\t// More optimized than using this.arrayBuffer()\n\t\t// that requires twice as much ram\n\t\tconst decoder = new TextDecoder();\n\t\tlet str = '';\n\t\tfor await (let part of toIterator(this.#parts, false)) {\n\t\t\tstr += decoder.decode(part, { stream: true });\n\t\t}\n\t\t// Remaining\n\t\tstr += decoder.decode();\n\t\treturn str;\n\t}\n\n\t/**\n\t * The arrayBuffer() method in the Blob interface returns a\n\t * Promise that resolves with the contents of the blob as\n\t * binary data contained in an ArrayBuffer.\n\t *\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tasync arrayBuffer() {\n\t\t// Easier way... Just a unnecessary overhead\n\t\t// const view = new Uint8Array(this.size);\n\t\t// await this.stream().getReader({mode: 'byob'}).read(view);\n\t\t// return view.buffer;\n\n\t\tconst data = new Uint8Array(this.size);\n\t\tlet offset = 0;\n\t\tfor await (const chunk of toIterator(this.#parts, false)) {\n\t\t\tdata.set(chunk, offset);\n\t\t\toffset += chunk.length;\n\t\t}\n\n\t\treturn data.buffer;\n\t}\n\n\tstream() {\n\t\tconst it = toIterator(this.#parts, true);\n\n\t\treturn new ReadableStream({\n\t\t\ttype: 'bytes',\n\t\t\tasync pull(ctrl) {\n\t\t\t\tconst chunk = await it.next();\n\t\t\t\tchunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * The Blob interface's slice() method creates and returns a\n\t * new Blob object which contains data from a subset of the\n\t * blob on which it's called.\n\t *\n\t * @param {number} [start]\n\t * @param {number} [end]\n\t * @param {string} [type]\n\t */\n\tslice(start = 0, end = this.size, type = '') {\n\t\tconst {size} = this;\n\n\t\tlet relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n\t\tlet relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\t\tconst parts = this.#parts;\n\t\tconst blobParts = [];\n\t\tlet added = 0;\n\n\t\tfor (const part of parts) {\n\t\t\t// don't add the overflow to new blobParts\n\t\t\tif (added >= span) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst size = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n\t\t\tif (relativeStart && size <= relativeStart) {\n\t\t\t\t// Skip the beginning and change the relative\n\t\t\t\t// start & end position as we skip the unwanted parts\n\t\t\t\trelativeStart -= size;\n\t\t\t\trelativeEnd -= size;\n\t\t\t} else {\n\t\t\t\tlet chunk\n\t\t\t\tif (ArrayBuffer.isView(part)) {\n\t\t\t\t\tchunk = part.subarray(relativeStart, Math.min(size, relativeEnd));\n\t\t\t\t\tadded += chunk.byteLength\n\t\t\t\t} else {\n\t\t\t\t\tchunk = part.slice(relativeStart, Math.min(size, relativeEnd));\n\t\t\t\t\tadded += chunk.size\n\t\t\t\t}\n\t\t\t\tblobParts.push(chunk);\n\t\t\t\trelativeStart = 0; // All next sequential parts should start at 0\n\t\t\t}\n\t\t}\n\n\t\tconst blob = new Blob([], {type: String(type).toLowerCase()});\n\t\tblob.#size = span;\n\t\tblob.#parts = blobParts;\n\n\t\treturn blob;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Blob';\n\t}\n\n\tstatic [Symbol.hasInstance](object) {\n\t\treturn (\n\t\t\tobject &&\n\t\t\ttypeof object === 'object' &&\n\t\t\ttypeof object.constructor === 'function' &&\n\t\t\t(\n\t\t\t\ttypeof object.stream === 'function' ||\n\t\t\t\ttypeof object.arrayBuffer === 'function'\n\t\t\t) &&\n\t\t\t/^(Blob|File)$/.test(object[Symbol.toStringTag])\n\t\t);\n\t}\n}\n\nObject.defineProperties(_Blob.prototype, {\n\tsize: {enumerable: true},\n\ttype: {enumerable: true},\n\tslice: {enumerable: true}\n});\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob;\nexport default Blob;\n", "export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n", "\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n", "import {randomBytes} from 'crypto';\n\nimport {isBlob} from './is.js';\n\nconst carriage = '\\r\\n';\nconst dashes = '-'.repeat(2);\nconst carriageLength = Buffer.byteLength(carriage);\n\n/**\n * @param {string} boundary\n */\nconst getFooter = boundary => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;\n\n/**\n * @param {string} boundary\n * @param {string} name\n * @param {*} field\n *\n * @return {string}\n */\nfunction getHeader(boundary, name, field) {\n\tlet header = '';\n\n\theader += `${dashes}${boundary}${carriage}`;\n\theader += `Content-Disposition: form-data; name=\"${name}\"`;\n\n\tif (isBlob(field)) {\n\t\theader += `; filename=\"${field.name}\"${carriage}`;\n\t\theader += `Content-Type: ${field.type || 'application/octet-stream'}`;\n\t}\n\n\treturn `${header}${carriage.repeat(2)}`;\n}\n\n/**\n * @return {string}\n */\nexport const getBoundary = () => randomBytes(8).toString('hex');\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nexport async function * formDataIterator(form, boundary) {\n\tfor (const [name, value] of form) {\n\t\tyield getHeader(boundary, name, value);\n\n\t\tif (isBlob(value)) {\n\t\t\tyield * value.stream();\n\t\t} else {\n\t\t\tyield value;\n\t\t}\n\n\t\tyield carriage;\n\t}\n\n\tyield getFooter(boundary);\n}\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nexport function getFormDataLength(form, boundary) {\n\tlet length = 0;\n\n\tfor (const [name, value] of form) {\n\t\tlength += Buffer.byteLength(getHeader(boundary, name, value));\n\n\t\tlength += isBlob(value) ? value.size : Buffer.byteLength(String(value));\n\n\t\tlength += carriageLength;\n\t}\n\n\tlength += Buffer.byteLength(getFooter(boundary));\n\n\treturn length;\n}\n", "/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n *\n * @param  {*} obj\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n *\n * @param  {*} obj\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is a spec-compliant `FormData` object\n *\n * @param {*} object\n * @return {boolean}\n */\nexport function isFormData(object) {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.keys === 'function' &&\n\t\ttypeof object.values === 'function' &&\n\t\ttypeof object.entries === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\tobject[NAME] === 'FormData'\n\t);\n}\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n *\n * @param  {*} obj\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n", "/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'util';\nimport http from 'http';\n\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* c8 ignore next */\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n", "const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n", "/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n", "\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'url';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} obj\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (((init.body != null || isRequest(input)) && input.body !== null) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Manually spread the URL object instead of spread syntax\n\tconst requestOptions = {\n\t\tpath: parsedURL.pathname + search,\n\t\tpathname: parsedURL.pathname,\n\t\thostname: parsedURL.hostname,\n\t\tprotocol: parsedURL.protocol,\n\t\tport: parsedURL.port,\n\t\thash: parsedURL.hash,\n\t\tsearch: parsedURL.search,\n\t\tquery: parsedURL.query,\n\t\thref: parsedURL.href,\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn requestOptions;\n};\n", "export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n", "import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n", "import { Image } from \"@raycast/api\";\n\nexport function XIcon(): Image {\n  return { source: { light: \"logo.png\", dark: \"logo@dark.png\" } };\n}\n", "import { Action, ActionPanel, Color, confirmAlert, Form, Icon, popToRoot, showToast, Toast } from \"@raycast/api\";\nimport { Fragment, ReactElement, useState } from \"react\";\nimport { TweetV1 } from \"twitter-api-v2\";\nimport { twitterClient } from \"../lib/twitterapi\";\nimport { getErrorMessage } from \"../../utils\";\nimport { XIcon } from \"../../icon\";\n\ninterface TweetFormValues {\n  text: string;\n}\n\nasync function submit(values: TweetFormValues, replyTweet?: TweetV1 | undefined) {\n  try {\n    const text = values.text;\n    if (text.length <= 0) {\n      throw Error(\"Please enter a text\");\n    }\n    if (text.length > 280) {\n      throw Error(\"Tweet text could not be longer than 280 characters\");\n    }\n    if (replyTweet) {\n      await twitterClient().v1.reply(text, replyTweet.id_str);\n      await showToast({\n        style: Toast.Style.Success,\n        title: \"Tweet created\",\n        message: \"Reply Tweet creation successful\",\n      });\n    } else {\n      await twitterClient().v1.tweet(text);\n      await showToast({ style: Toast.Style.Success, title: \"Tweet created\", message: \"Tweet creation successful\" });\n    }\n    popToRoot();\n  } catch (error) {\n    await showToast({ style: Toast.Style.Failure, title: \"Error\", message: getErrorMessage(error) });\n  }\n}\n\nfunction TweetLengthCounter(props: { text: string }): ReactElement | null {\n  const t = props.text;\n  const isValid = validTweetText(t);\n  return <Form.Description text={`${t.length}/280 ${isValid ? \"\u2705\" : \"\u274C\"}`} />;\n}\n\nexport function TweetSendForm(props: { replyTweet?: TweetV1 | undefined }) {\n  const rt = props.replyTweet;\n  const submitText = rt ? \"Send Reply\" : \"Send Tweet\";\n  const fromTitle = rt ? \"Reply\" : \"Tweet\";\n  const placeholder = rt ? \"Tweet your reply\" : \"What's happening?\";\n  const [text, setText] = useState<string>(\"\");\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          {text.length > 0 && text.length <= 280 && (\n            <Action.SubmitForm title={submitText} onSubmit={(values: TweetFormValues) => submit(values, rt)} />\n          )}\n        </ActionPanel>\n      }\n    >\n      <Form.TextArea id=\"text\" title={fromTitle} placeholder={placeholder} onChange={setText} />\n      <TweetLengthCounter text={text} />\n    </Form>\n  );\n}\n\ninterface TweetContent {\n  text: string;\n}\n\nfunction TweetFragment(props: {\n  content: TweetContent;\n  index: number;\n  onTextChange: (text: string, index: number) => void;\n}): ReactElement {\n  const index = props.index;\n  const content = props.content;\n  const placeholder = index === 0 ? \"What's happening?\" : \"Another Tweet\";\n  return (\n    <Fragment>\n      <Form.TextArea\n        id={`${index}`}\n        title={`Tweet ${index > 0 ? index + 1 : \"\"}`}\n        placeholder={placeholder}\n        value={content.text}\n        onChange={(newtext) => props.onTextChange(newtext, index)}\n      />\n      <TweetLengthCounter text={content.text} />\n    </Fragment>\n  );\n}\n\nfunction validTweetText(text: string): boolean {\n  const l = text.length;\n  if (l < 1 || l > 280) {\n    return false;\n  }\n  return true;\n}\n\nfunction validTweet(content: TweetContent): boolean {\n  return validTweetText(content.text);\n}\n\nfunction validTweets(tweets: TweetContent[]): boolean {\n  if (tweets.length < 1) {\n    return false;\n  }\n  for (const t of tweets) {\n    if (!validTweet(t)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nasync function submitTweets(tweets: TweetContent[]) {\n  try {\n    if (!validTweets(tweets)) {\n      await showToast({ style: Toast.Style.Failure, title: \"Invalid Tweet\", message: \"Tweets are not valid\" });\n      return;\n    }\n    if (tweets.length === 1) {\n      const t = tweets[0];\n      await twitterClient().v1.tweet(t.text);\n      await showToast({ style: Toast.Style.Success, title: \"Tweet created\", message: \"Tweet creation successful\" });\n      popToRoot();\n    } else {\n      const tweetTexts: string[] = tweets.map((t) => t.text);\n      await twitterClient().v1.tweetThread(tweetTexts);\n      await showToast({ style: Toast.Style.Success, title: \"Thread created\", message: \"Thread creation successful\" });\n      popToRoot();\n    }\n  } catch (error) {\n    await showToast({ style: Toast.Style.Failure, title: \"Error\", message: getErrorMessage(error) });\n  }\n}\n\nexport function TweetSendThreadForm(): ReactElement {\n  const [tweets, setTweets] = useState<TweetContent[]>([{ text: \"\" }]);\n  const addTweet = () => {\n    const nt = [...tweets, { text: \"\" }];\n    setTweets(nt);\n  };\n  const submitText = tweets && tweets.length > 1 ? \"Send Thread\" : \"Send Tweet\";\n  const removeTweet = async () => {\n    if (tweets.length > 1) {\n      const lt = tweets[tweets.length - 1];\n      let remove = true;\n      if (lt.text.length > 0) {\n        remove = await confirmAlert({\n          title: \"Really remove last Tweet?\",\n          message: \"You last tweet contain content, it will get lost\",\n          icon: \"\u26A0\uFE0F\",\n        });\n      }\n      if (remove) {\n        const nt = [...tweets];\n        nt.pop();\n        setTweets(nt);\n      }\n    }\n  };\n  const updateTweet = (text: string, index: number) => {\n    const nt = [...tweets];\n    nt[index].text = text;\n    setTweets(nt);\n  };\n  const addTweetNumber = () => {\n    const nt = [...tweets];\n    for (let i = 0; i < nt.length; i++) {\n      nt[i].text += ` ${i + 1}/${nt.length}`;\n    }\n    setTweets(nt);\n  };\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <ActionPanel.Section>\n            {validTweets(tweets) && (\n              <Action.SubmitForm title={submitText} icon={XIcon()} onSubmit={() => submitTweets(tweets)} />\n            )}\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Thread\">\n            <Action\n              title=\"Add Tweet\"\n              onAction={addTweet}\n              icon={{ source: Icon.Plus, tintColor: Color.PrimaryText }}\n              shortcut={{ modifiers: [\"cmd\"], key: \"+\" }}\n            />\n            {tweets.length > 1 && (\n              <Action\n                title=\"Remove Last Tweet\"\n                onAction={removeTweet}\n                icon={{ source: Icon.Trash, tintColor: Color.Red }}\n                shortcut={{ modifiers: [\"cmd\"], key: \"-\" }}\n              />\n            )}\n            {tweets.length > 1 && (\n              <Action\n                title=\"Add Tweet Numbers\"\n                onAction={addTweetNumber}\n                icon={Icon.Document}\n                shortcut={{ modifiers: [\"cmd\"], key: \"n\" }}\n              />\n            )}\n          </ActionPanel.Section>\n        </ActionPanel>\n      }\n    >\n      {tweets.map((t, index) => (\n        <TweetFragment key={index} index={index} content={t} onTextChange={updateTweet} />\n      ))}\n    </Form>\n  );\n}\n", "import { getPreferenceValues } from \"@raycast/api\";\nimport { useEffect, useState } from \"react\";\nimport { AccountSettingsV1, TweetV1, TwitterApi } from \"twitter-api-v2\";\nimport { getErrorMessage } from \"../../utils\";\n\nfunction createClient(): TwitterApi {\n  const pref = getPreferenceValues();\n  const appKey = (pref.appkey as string) || \"\";\n  const appSecret = (pref.appsecret as string) || \"\";\n  const accessToken = (pref.accesstoken as string) || \"\";\n  const accessSecret = (pref.accesssecret as string) || \"\";\n  const client = new TwitterApi({\n    appKey: appKey,\n    appSecret: appSecret,\n    accessToken: accessToken,\n    accessSecret: accessSecret,\n  });\n  return client;\n}\n\nlet _twitterClient: TwitterApi | null = null;\n\nexport function twitterClient(): TwitterApi {\n  if (!_twitterClient) {\n    _twitterClient = createClient();\n  }\n  return _twitterClient;\n}\n\nlet activeAccount: AccountSettingsV1 | undefined;\n\nexport async function loggedInUserAccount(): Promise<AccountSettingsV1> {\n  if (!activeAccount) {\n    const account = await twitterClient().v1.accountSettings();\n    activeAccount = account;\n  }\n  return activeAccount;\n}\n\nexport async function refreshTweets(tweets?: TweetV1[]): Promise<TweetV1[] | undefined> {\n  if (tweets) {\n    const tweetIds = tweets.map((t) => t.id_str);\n    const unorderedFreshTweets = await twitterClient().v1.tweets(tweetIds);\n\n    const freshTweets: TweetV1[] = [];\n    for (const tid of tweetIds) {\n      const t = unorderedFreshTweets.find((t) => tid === t.id_str);\n      if (t) {\n        freshTweets.push(t);\n      }\n    }\n    return freshTweets;\n  } else {\n    return undefined;\n  }\n}\n\nexport async function refreshTweet(tweet: TweetV1): Promise<TweetV1 | undefined> {\n  const tweets = await refreshTweets([tweet]);\n  if (tweets && tweets.length === 1) {\n    return tweets[0];\n  }\n  return undefined;\n}\n\nexport interface Fetcher {\n  updateInline: () => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useRefresher<T>(\n  fn: (updateInline: boolean) => Promise<T>,\n  deps?: React.DependencyList | undefined,\n): {\n  data: T | undefined;\n  error?: string;\n  isLoading: boolean;\n  fetcher: Fetcher;\n} {\n  const [data, setData] = useState<T>();\n  const [error, setError] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [timestamp, setTimestamp] = useState<Date>(new Date());\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const depsAll: any[] = [timestamp];\n  if (deps) {\n    for (const d of deps) {\n      depsAll.push(d);\n    }\n  }\n  let cancel = false;\n\n  const fetcher: Fetcher = {\n    updateInline: async () => {\n      await fetchData(true);\n    },\n    refresh: async () => {\n      setTimestamp(new Date());\n    },\n  };\n\n  async function fetchData(updateInline = false) {\n    if (cancel) {\n      return;\n    }\n\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const data = await fn(updateInline);\n      if (!cancel) {\n        setData(data);\n      }\n    } catch (e) {\n      if (!cancel) {\n        setError(getErrorMessage(e));\n      }\n    } finally {\n      if (!cancel) {\n        setIsLoading(false);\n      }\n    }\n  }\n  useEffect(() => {\n    fetchData();\n\n    return () => {\n      cancel = true;\n    };\n  }, depsAll);\n\n  return { data, error, isLoading, fetcher };\n}\n\nexport function getPhotoUrlFromTweet(tweet: TweetV1): string | undefined {\n  const media = tweet.entities.media;\n  if (media) {\n    for (const m of media) {\n      if (m.type === \"photo\" && m.media_url_https) {\n        return m.media_url_https;\n      }\n    }\n  }\n  return undefined;\n}\n", "export function getErrorMessage(error: unknown): string {\n  return error instanceof Error ? error.message : \"unknown error\";\n}\n\nexport const padStart = (str: string | number, length: number): string => {\n  return String(str).padStart(length, \"\u2000\");\n};\n\nconst fmt = new Intl.NumberFormat(\"en\", { notation: \"compact\" });\n\nexport function compactNumberFormat(num: number): string {\n  return fmt.format(num);\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function replaceAll(str: string, find: RegExp, replace: string): string {\n  return str.replace(find, replace);\n}\n", "import { Action, ActionPanel, Color, confirmAlert, Form, Icon, popToRoot, showToast, Toast, open } from \"@raycast/api\";\nimport { Fragment, ReactElement, useState } from \"react\";\nimport { Tweet } from \"../lib/twitter\";\nimport { clientV2 } from \"../lib/twitterapi_v2\";\nimport { getErrorMessage } from \"../../utils\";\nimport { hasRestrictedAccess } from \"../../common\";\nimport { XIcon } from \"../../icon\";\n\ninterface TweetFormValues {\n  text: string;\n}\n\nasync function submit(values: TweetFormValues, replyTweet: Tweet | undefined) {\n  try {\n    const text = values.text;\n    if (text.length <= 0) {\n      throw Error(\"Please enter a text\");\n    }\n    if (text.length > 280) {\n      throw Error(\"Tweet text could not be longer than 280 characters\");\n    }\n    if (replyTweet) {\n      await clientV2.replyTweet(text, replyTweet);\n      await showToast({\n        style: Toast.Style.Success,\n        title: \"Tweet created\",\n        message: \"Reply Tweet creation successful\",\n      });\n    }\n    popToRoot();\n  } catch (error) {\n    await showToast({ style: Toast.Style.Failure, title: \"Error\", message: getErrorMessage(error) });\n  }\n}\n\nfunction TweetLengthCounter(props: { text: string }): ReactElement | null {\n  const t = props.text;\n  const isValid = validTweetText(t);\n  return <Form.Description text={`${t.length}/280 ${isValid ? \"\u2705\" : \"\u274C\"}`} />;\n}\n\nexport function TweetSendForm(props: { replyTweet: Tweet | undefined }) {\n  const rt = props.replyTweet;\n  const submitText = rt ? \"Send Reply\" : \"Send Tweet\";\n  const fromTitle = rt ? \"Reply\" : \"Tweet\";\n  const placeholder = rt ? \"Tweet your reply\" : \"What's happening?\";\n  const [text, setText] = useState<string>(\"\");\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          {text.length > 0 && text.length <= 280 && (\n            <Action.SubmitForm\n              title={submitText}\n              onSubmit={(values: TweetFormValues) => submit(values, props.replyTweet)}\n            />\n          )}\n        </ActionPanel>\n      }\n    >\n      <Form.TextArea id=\"text\" title={fromTitle} placeholder={placeholder} onChange={setText} />\n      <TweetLengthCounter text={text} />\n    </Form>\n  );\n}\n\ninterface TweetContent {\n  text: string;\n}\n\nfunction TweetFragment(props: {\n  content: TweetContent;\n  index: number;\n  onTextChange: (text: string, index: number) => void;\n}): ReactElement {\n  const index = props.index;\n  const content = props.content;\n  const placeholder = index === 0 ? \"What's happening?\" : \"Another Tweet\";\n  return (\n    <Fragment>\n      <Form.TextArea\n        id={`${index}`}\n        title={`Tweet ${index > 0 ? index + 1 : \"\"}`}\n        placeholder={placeholder}\n        value={content.text}\n        onChange={(newtext) => props.onTextChange(newtext, index)}\n      />\n      <TweetLengthCounter text={content.text} />\n    </Fragment>\n  );\n}\n\nfunction validTweetText(text: string): boolean {\n  const l = text.length;\n  if (l < 1 || l > 280) {\n    return false;\n  }\n  return true;\n}\n\nfunction validTweet(content: TweetContent): boolean {\n  return validTweetText(content.text);\n}\n\nfunction validTweets(tweets: TweetContent[]): boolean {\n  if (tweets.length < 1) {\n    return false;\n  }\n  for (const t of tweets) {\n    if (!validTweet(t)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nasync function submitTweets(tweets: TweetContent[]) {\n  try {\n    if (!validTweets(tweets)) {\n      await showToast({ style: Toast.Style.Failure, title: \"Invalid Tweet\", message: \"Tweets are not valid\" });\n      return;\n    }\n    if (tweets.length === 1) {\n      const t = tweets[0];\n      if (hasRestrictedAccess()) {\n        const url = new URL(\"https://twitter.com/intent/tweet\");\n        url.searchParams.append(\"text\", t.text);\n        open(url.href);\n      } else {\n        await clientV2.sendTweet(t.text);\n        await showToast({ style: Toast.Style.Success, title: \"Tweet created\", message: \"Tweet creation successful\" });\n      }\n      popToRoot();\n    } else {\n      if (hasRestrictedAccess()) {\n        throw new Error(\"This Operation requires a an OAuth client\");\n      }\n      const tweetTexts: string[] = tweets.map((t) => t.text);\n      await clientV2.sendThread(tweetTexts);\n      await showToast({ style: Toast.Style.Success, title: \"Thread created\", message: \"Thread creation successful\" });\n      popToRoot();\n    }\n  } catch (error) {\n    await showToast({ style: Toast.Style.Failure, title: \"Error\", message: getErrorMessage(error) });\n  }\n}\n\nexport function TweetSendThreadFormV2({ defaultValue }: { defaultValue?: string }): ReactElement {\n  const [tweets, setTweets] = useState<TweetContent[]>([{ text: defaultValue || \"\" }]);\n  const addTweet = () => {\n    const nt = [...tweets, { text: \"\" }];\n    setTweets(nt);\n  };\n  const submitText = tweets && tweets.length > 1 ? \"Send Thread\" : \"Send Tweet\";\n  const removeTweet = async () => {\n    if (tweets.length > 1) {\n      const lt = tweets[tweets.length - 1];\n      let remove = true;\n      if (lt.text.length > 0) {\n        remove = await confirmAlert({\n          title: \"Really remove last Tweet?\",\n          message: \"You last tweet contain content, it will get lost\",\n          icon: \"\u26A0\uFE0F\",\n        });\n      }\n      if (remove) {\n        const nt = [...tweets];\n        nt.pop();\n        setTweets(nt);\n      }\n    }\n  };\n  const updateTweet = (text: string, index: number) => {\n    const nt = [...tweets];\n    nt[index].text = text;\n    setTweets(nt);\n  };\n  const addTweetNumber = () => {\n    const nt = [...tweets];\n    for (let i = 0; i < nt.length; i++) {\n      nt[i].text += ` ${i + 1}/${nt.length}`;\n    }\n    setTweets(nt);\n  };\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <ActionPanel.Section>\n            {validTweets(tweets) && (\n              <Action.SubmitForm title={submitText} icon={XIcon()} onSubmit={() => submitTweets(tweets)} />\n            )}\n          </ActionPanel.Section>\n          {!hasRestrictedAccess() && (\n            <ActionPanel.Section title=\"Thread\">\n              <Action\n                title=\"Add Tweet\"\n                onAction={addTweet}\n                icon={{ source: Icon.Plus, tintColor: Color.PrimaryText }}\n                shortcut={{ modifiers: [\"cmd\"], key: \"+\" }}\n              />\n              {tweets.length > 1 && (\n                <Action\n                  title=\"Remove Last Tweet\"\n                  onAction={removeTweet}\n                  icon={{ source: Icon.Trash, tintColor: Color.Red }}\n                  shortcut={{ modifiers: [\"cmd\"], key: \"-\" }}\n                />\n              )}\n              {tweets.length > 1 && (\n                <Action\n                  title=\"Add Tweet Numbers\"\n                  onAction={addTweetNumber}\n                  icon={Icon.Document}\n                  shortcut={{ modifiers: [\"cmd\"], key: \"n\" }}\n                />\n              )}\n            </ActionPanel.Section>\n          )}\n        </ActionPanel>\n      }\n    >\n      {tweets.map((t, index) => (\n        <TweetFragment key={index} index={index} content={t} onTextChange={updateTweet} />\n      ))}\n    </Form>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport {\n  TTweetv2Expansion,\n  TTweetv2MediaField,\n  TTweetv2TweetField,\n  TweetHomeTimelineV2Paginator,\n  TweetUserTimelineV2Paginator,\n  TweetV2,\n  TwitterApi,\n  TwitterV2IncludesHelper,\n  UserV2,\n} from \"twitter-api-v2\";\nimport { authorize, getOAuthTokens } from \"./oauth\";\nimport { Tweet, TweetNonPublicMetrics, TweetOrganicMetrics, User } from \"./twitter\";\nimport { getErrorMessage } from \"../../utils\";\n\nconst max_results = 20;\n\nconst defaultFields: TTweetv2TweetField[] = [\n  \"public_metrics\",\n  \"author_id\",\n  \"attachments\",\n  \"created_at\",\n  \"id\",\n  \"entities\",\n  \"conversation_id\",\n];\n\nconst defaultExpansions: TTweetv2Expansion[] = [\n  \"attachments.media_keys\",\n  \"author_id\",\n  \"in_reply_to_user_id\",\n  \"entities.mentions.username\",\n  \"referenced_tweets.id\",\n];\n\nconst defaultMediaFields: TTweetv2MediaField[] = [\"url\", \"type\", \"media_key\", \"preview_image_url\"];\n\nfunction twitterUserToUser(result: UserV2): User {\n  const u: User = {\n    id: result.id,\n    name: result.name,\n    username: result.username,\n    profile_image_url: result.profile_image_url,\n  };\n  return u;\n}\n\nexport class ClientV2 {\n  private userCache: Record<string, User> = {};\n  private meCache: User | undefined;\n\n  async getAPI(): Promise<TwitterApi> {\n    await authorize();\n    const tokens = await getOAuthTokens();\n    const at = tokens?.accessToken;\n    const c = new TwitterApi(at || \"\");\n    return c;\n  }\n\n  async getUserAccount(userId: string): Promise<User> {\n    if (userId in this.userCache) {\n      return this.userCache[userId];\n    }\n    const api = await this.getAPI();\n    const r = await api.v2.user(userId, { \"user.fields\": [\"profile_image_url\"] });\n    const u = twitterUserToUser(r.data);\n    this.userCache[userId] = u;\n    return u;\n  }\n\n  async prefetchUserAccounts(tweetsRaw: TweetUserTimelineV2Paginator | TweetHomeTimelineV2Paginator): Promise<void> {\n    const userIDs: string[] = [];\n    for (const t of tweetsRaw) {\n      if (t.author_id && !(t.author_id in this.userCache)) {\n        userIDs.push(t.author_id);\n      }\n    }\n    if (userIDs.length > 0) {\n      const api = await this.getAPI();\n      const usersRaw = await api.v2.users(userIDs, { \"user.fields\": [\"profile_image_url\"] });\n      for (const ru of usersRaw.data) {\n        const u = twitterUserToUser(ru);\n        this.userCache[u.id] = u;\n      }\n    }\n  }\n\n  async me(): Promise<User> {\n    if (this.meCache) {\n      return this.meCache;\n    }\n    const api = await this.getAPI();\n    const me = await api.v2.me();\n    const u: User = {\n      id: me.data.id,\n      name: me.data.name,\n      username: me.data.username,\n      profile_image_url: me.data.profile_image_url,\n    };\n    this.meCache = u;\n    return u;\n  }\n\n  async getMyTweets(): Promise<Tweet[]> {\n    const api = await this.getAPI();\n    const me = await api.v2.me();\n    return await this.getTweetsFromAuthor(me.data.id, [\"non_public_metrics\", \"organic_metrics\"]);\n  }\n\n  async getTweetsFromAuthor(authorID: string, extraFields?: TTweetv2TweetField[]): Promise<Tweet[]> {\n    const api = await this.getAPI();\n    const fields = [...defaultFields];\n    if (extraFields) {\n      fields.push(...extraFields);\n    }\n    const tweetsRaw = await api.v2.userTimeline(authorID, {\n      max_results: max_results,\n      \"tweet.fields\": fields,\n      \"media.fields\": defaultMediaFields,\n      expansions: defaultExpansions,\n    });\n    const includes = new TwitterV2IncludesHelper(tweetsRaw);\n    const tweets: Tweet[] = [];\n    await this.prefetchUserAccounts(tweetsRaw);\n    for (const t of tweetsRaw) {\n      tweets.push(await this.tweetV2ToTweet(t, includes));\n    }\n    return tweets;\n  }\n\n  private async tweetV2ToTweet(tweet: TweetV2, includes: TwitterV2IncludesHelper): Promise<Tweet> {\n    const t = tweet;\n    const media = includes.medias(t);\n    let non_public_metrics: TweetNonPublicMetrics | undefined;\n    if (t.non_public_metrics) {\n      non_public_metrics = {\n        impression_count: t.non_public_metrics.impression_count,\n        url_link_clicks: t.non_public_metrics.url_link_clicks,\n      };\n    }\n    let organic_metrics: TweetOrganicMetrics | undefined;\n    if (t.organic_metrics) {\n      organic_metrics = {\n        impression_count: t.organic_metrics.impression_count,\n        url_link_clicks: t.organic_metrics.url_link_clicks,\n        user_profile_clicks: t.organic_metrics.user_profile_clicks,\n        retweet_count: t.organic_metrics.retweet_count,\n        reply_count: t.organic_metrics.reply_count,\n        like_count: t.organic_metrics.like_count,\n      };\n    }\n    let image_url: string | undefined = undefined;\n    if (media && media.length > 0) {\n      const m = media[0];\n      if (m.type === \"animated_gif\" || m.type === \"video\") {\n        image_url = m.preview_image_url;\n      } else {\n        image_url = m.url;\n      }\n    }\n    if (!t.author_id) {\n      throw Error(\"No author ID\");\n    }\n    const nt: Tweet = {\n      id: t.id,\n      text: t.text,\n      created_at: t.created_at,\n      conversation_id: t.conversation_id,\n      source: t.source || \"\",\n      image_url: image_url,\n      user: await this.getUserAccount(t.author_id),\n      quote_count: t.public_metrics?.quote_count || 0,\n      reply_count: t.public_metrics?.reply_count || 0,\n      retweet_count: t.public_metrics?.retweet_count || 0,\n      like_count: t.public_metrics?.like_count || 0,\n      non_public_metrics: non_public_metrics,\n      organic_metrics: organic_metrics,\n    };\n    return nt;\n  }\n\n  async refreshTweets(tweets: Tweet[] | undefined): Promise<Tweet[] | undefined> {\n    if (tweets === undefined) {\n      return undefined;\n    }\n    const containsNonPublicMetrics = (): boolean => {\n      return tweets.length === tweets.filter((t) => t.non_public_metrics !== undefined).length;\n    };\n    const containsOrganicMetrics = (): boolean => {\n      return tweets.length === tweets.filter((t) => t.organic_metrics !== undefined).length;\n    };\n    const api = await this.getAPI();\n    const tweetIds = tweets.map((t) => t.id);\n    const fields = [...defaultFields];\n    if (containsNonPublicMetrics()) {\n      fields.push(\"non_public_metrics\");\n    }\n    if (containsOrganicMetrics()) {\n      fields.push(\"organic_metrics\");\n    }\n    const tweetsRaw = await api.v2.tweets(tweetIds, {\n      \"tweet.fields\": fields,\n      \"media.fields\": defaultMediaFields,\n      expansions: defaultExpansions,\n    });\n    const includes = new TwitterV2IncludesHelper(tweetsRaw);\n    const nts = await Promise.all(\n      tweetsRaw.data.map(async (t) => {\n        return await this.tweetV2ToTweet(t, includes);\n      }),\n    );\n    return nts;\n  }\n\n  async sendTweet(text: string): Promise<void> {\n    const api = await this.getAPI();\n    await api.v2.tweet(text);\n  }\n\n  async sendThread(texts: string[]): Promise<void> {\n    const api = await this.getAPI();\n    await api.v2.tweetThread(texts);\n  }\n\n  async replyTweetID(text: string, tweetID: string): Promise<void> {\n    const api = await this.getAPI();\n    await api.v2.reply(text, tweetID);\n  }\n  async replyTweet(text: string, tweet: Tweet): Promise<void> {\n    await this.replyTweetID(text, tweet.id);\n  }\n\n  async retweet(tweet: Tweet): Promise<void> {\n    const api = await this.getAPI();\n    const me = await this.me();\n    await api.v2.retweet(me.id, tweet.id);\n  }\n\n  async deleteTweetID(tweetID: string): Promise<void> {\n    const api = await this.getAPI();\n    await api.v2.deleteTweet(tweetID);\n  }\n  async deleteTweet(tweet: Tweet): Promise<void> {\n    await this.deleteTweetID(tweet.id);\n  }\n\n  async likeTweet(tweet: Tweet): Promise<void> {\n    const api = await this.getAPI();\n    const me = await this.me();\n    api.v2.like(me.id, tweet.id);\n  }\n\n  async unlikeTweet(tweet: Tweet): Promise<void> {\n    const api = await this.getAPI();\n    const me = await this.me();\n    api.v2.unlike(me.id, tweet.id);\n  }\n\n  async homeTimeline(): Promise<Tweet[] | undefined> {\n    const api = await this.getAPI();\n    const tweetsRaw = await api.v2.homeTimeline({\n      exclude: \"replies\",\n      max_results: max_results,\n      \"tweet.fields\": [\"public_metrics\", \"author_id\", \"attachments\", \"created_at\", \"id\", \"entities\", \"conversation_id\"],\n      \"media.fields\": [\"url\", \"type\", \"media_key\", \"preview_image_url\"],\n      expansions: [\n        \"attachments.media_keys\",\n        \"author_id\",\n        \"in_reply_to_user_id\",\n        \"entities.mentions.username\",\n        \"referenced_tweets.id\",\n      ],\n    });\n    const includes = new TwitterV2IncludesHelper(tweetsRaw);\n    const tweets: Tweet[] = [];\n    await this.prefetchUserAccounts(tweetsRaw);\n    for (const t of tweetsRaw) {\n      const media = includes.medias(t);\n      let image_url: string | undefined = undefined;\n      if (media && media.length > 0) {\n        const m = media[0];\n        if (m.type === \"animated_gif\" || m.type === \"video\") {\n          image_url = m.preview_image_url;\n        } else {\n          image_url = m.url;\n        }\n      }\n      if (!t.author_id) {\n        continue;\n      }\n      const nt: Tweet = {\n        id: t.id,\n        text: t.text,\n        created_at: t.created_at,\n        conversation_id: t.conversation_id,\n        source: t.source || \"\",\n        image_url: image_url,\n        user: await this.getUserAccount(t.author_id),\n        quote_count: t.public_metrics?.quote_count || 0,\n        reply_count: t.public_metrics?.reply_count || 0,\n        retweet_count: t.public_metrics?.retweet_count || 0,\n        like_count: t.public_metrics?.like_count || 0,\n      };\n      tweets.push(nt);\n    }\n    return tweets;\n  }\n}\n\nexport function createClientV2(): ClientV2 {\n  return new ClientV2();\n}\n\nexport const clientV2 = createClientV2();\n\nexport interface Fetcher {\n  updateInline: () => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useRefresher<T>(\n  fn: (updateInline: boolean) => Promise<T>,\n  deps?: React.DependencyList | undefined,\n): {\n  data: T | undefined;\n  error?: string;\n  isLoading: boolean;\n  fetcher: Fetcher;\n} {\n  const [data, setData] = useState<T>();\n  const [error, setError] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [timestamp, setTimestamp] = useState<Date>(new Date());\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const depsAll: any[] = [timestamp];\n  if (deps) {\n    for (const d of deps) {\n      depsAll.push(d);\n    }\n  }\n  let cancel = false;\n\n  const fetcher: Fetcher = {\n    updateInline: async () => {\n      await fetchData(true);\n    },\n    refresh: async () => {\n      setTimestamp(new Date());\n    },\n  };\n\n  async function fetchData(updateInline = false) {\n    if (cancel) {\n      return;\n    }\n\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const data = await fn(updateInline);\n      if (!cancel) {\n        setData(data);\n      }\n    } catch (e) {\n      if (!cancel) {\n        setError(getErrorMessage(e));\n      }\n    } finally {\n      if (!cancel) {\n        setIsLoading(false);\n      }\n    }\n  }\n  useEffect(() => {\n    fetchData();\n\n    return () => {\n      cancel = true;\n    };\n  }, depsAll);\n\n  return { data, error, isLoading, fetcher };\n}\n"],
  "mappings": "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",
  "names": ["dataUriToBuffer", "uri", "firstComma", "meta", "charset", "base64", "type", "typeFull", "i", "encoding", "data", "buffer", "module", "SymbolPolyfill", "description", "noop", "getGlobals", "globals", "typeIsObject", "x", "rethrowAssertionErrorRejection", "originalPromise", "originalPromiseThen", "originalPromiseResolve", "originalPromiseReject", "newPromise", "executor", "promiseResolvedWith", "value", "promiseRejectedWith", "reason", "PerformPromiseThen", "promise", "onFulfilled", "onRejected", "uponPromise", "uponFulfillment", "uponRejection", "transformPromiseWith", "fulfillmentHandler", "rejectionHandler", "setPromiseIsHandledToTrue", "queueMicrotask", "globalQueueMicrotask", "resolvedPromise", "fn", "reflectCall", "F", "V", "args", "promiseCall", "QUEUE_MAX_ARRAY_SIZE", "SimpleQueue", "element", "oldBack", "newBack", "oldFront", "newFront", "oldCursor", "newCursor", "elements", "callback", "i", "node", "front", "cursor", "ReadableStreamReaderGenericInitialize", "reader", "stream", "defaultReaderClosedPromiseInitialize", "defaultReaderClosedPromiseInitializeAsResolved", "defaultReaderClosedPromiseInitializeAsRejected", "ReadableStreamReaderGenericCancel", "ReadableStreamCancel", "ReadableStreamReaderGenericRelease", "defaultReaderClosedPromiseReject", "defaultReaderClosedPromiseResetToRejected", "readerLockException", "name", "resolve", "reject", "defaultReaderClosedPromiseResolve", "AbortSteps", "Symbol", "ErrorSteps", "CancelSteps", "PullSteps", "NumberIsFinite", "MathTrunc", "v", "isDictionary", "assertDictionary", "obj", "context", "assertFunction", "isObject", "assertObject", "assertRequiredArgument", "position", "assertRequiredField", "field", "convertUnrestrictedDouble", "censorNegativeZero", "integerPart", "convertUnsignedLongLongWithEnforceRange", "upperBound", "assertReadableStream", "IsReadableStream", "AcquireReadableStreamDefaultReader", "ReadableStreamDefaultReader", "ReadableStreamAddReadRequest", "readRequest", "ReadableStreamFulfillReadRequest", "chunk", "done", "ReadableStreamGetNumReadRequests", "ReadableStreamHasDefaultReader", "IsReadableStreamDefaultReader", "IsReadableStreamLocked", "defaultReaderBrandCheckException", "resolvePromise", "rejectPromise", "ReadableStreamDefaultReaderRead", "e", "AsyncIteratorPrototype", "ReadableStreamAsyncIteratorImpl", "preventCancel", "nextSteps", "returnSteps", "result", "ReadableStreamAsyncIteratorPrototype", "IsReadableStreamAsyncIterator", "streamAsyncIteratorBrandCheckException", "AcquireReadableStreamAsyncIterator", "impl", "iterator", "NumberIsNaN", "CreateArrayFromList", "CopyDataBlockBytes", "dest", "destOffset", "src", "srcOffset", "n", "TransferArrayBuffer", "O", "IsDetachedBuffer", "ArrayBufferSlice", "buffer", "begin", "end", "length", "slice", "IsNonNegativeNumber", "CloneAsUint8Array", "DequeueValue", "container", "pair", "EnqueueValueWithSize", "size", "PeekQueueValue", "ResetQueue", "ReadableStreamBYOBRequest", "IsReadableStreamBYOBRequest", "byobRequestBrandCheckException", "bytesWritten", "ReadableByteStreamControllerRespond", "view", "ReadableByteStreamControllerRespondWithNewView", "ReadableByteStreamController", "IsReadableByteStreamController", "byteStreamControllerBrandCheckException", "ReadableByteStreamControllerGetBYOBRequest", "ReadableByteStreamControllerGetDesiredSize", "state", "ReadableByteStreamControllerClose", "ReadableByteStreamControllerEnqueue", "ReadableByteStreamControllerError", "ReadableByteStreamControllerClearPendingPullIntos", "ReadableByteStreamControllerClearAlgorithms", "entry", "ReadableByteStreamControllerHandleQueueDrain", "autoAllocateChunkSize", "bufferE", "pullIntoDescriptor", "ReadableByteStreamControllerCallPullIfNeeded", "controller", "ReadableByteStreamControllerShouldCallPull", "pullPromise", "ReadableByteStreamControllerInvalidateBYOBRequest", "ReadableByteStreamControllerCommitPullIntoDescriptor", "filledView", "ReadableByteStreamControllerConvertPullIntoDescriptor", "ReadableStreamFulfillReadIntoRequest", "bytesFilled", "elementSize", "ReadableByteStreamControllerEnqueueChunkToQueue", "byteOffset", "byteLength", "ReadableByteStreamControllerFillPullIntoDescriptorFromQueue", "currentAlignedBytes", "maxBytesToCopy", "maxBytesFilled", "maxAlignedBytes", "totalBytesToCopyRemaining", "ready", "queue", "headOfQueue", "bytesToCopy", "destStart", "ReadableByteStreamControllerFillHeadPullIntoDescriptor", "ReadableStreamClose", "ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue", "ReadableByteStreamControllerShiftPendingPullInto", "ReadableByteStreamControllerPullInto", "readIntoRequest", "ctor", "ReadableStreamAddReadIntoRequest", "emptyView", "ReadableByteStreamControllerRespondInClosedState", "firstDescriptor", "ReadableStreamHasBYOBReader", "ReadableStreamGetNumReadIntoRequests", "ReadableByteStreamControllerRespondInReadableState", "remainderSize", "remainder", "ReadableByteStreamControllerRespondInternal", "transferredBuffer", "firstPendingPullInto", "transferredView", "ReadableStreamError", "byobRequest", "SetUpReadableStreamBYOBRequest", "SetUpReadableByteStreamController", "startAlgorithm", "pullAlgorithm", "cancelAlgorithm", "highWaterMark", "startResult", "r", "SetUpReadableByteStreamControllerFromUnderlyingSource", "underlyingByteSource", "request", "AcquireReadableStreamBYOBReader", "ReadableStreamBYOBReader", "IsReadableStreamBYOBReader", "byobReaderBrandCheckException", "ReadableStreamBYOBReaderRead", "ExtractHighWaterMark", "strategy", "defaultHWM", "ExtractSizeAlgorithm", "convertQueuingStrategy", "init", "convertQueuingStrategySize", "convertUnderlyingSink", "original", "abort", "close", "start", "type", "write", "convertUnderlyingSinkAbortCallback", "convertUnderlyingSinkCloseCallback", "convertUnderlyingSinkStartCallback", "convertUnderlyingSinkWriteCallback", "assertWritableStream", "IsWritableStream", "isAbortSignal", "supportsAbortController", "createAbortController", "WritableStream", "rawUnderlyingSink", "rawStrategy", "underlyingSink", "InitializeWritableStream", "sizeAlgorithm", "SetUpWritableStreamDefaultControllerFromUnderlyingSink", "streamBrandCheckException", "IsWritableStreamLocked", "WritableStreamAbort", "WritableStreamCloseQueuedOrInFlight", "WritableStreamClose", "AcquireWritableStreamDefaultWriter", "WritableStreamDefaultWriter", "CreateWritableStream", "writeAlgorithm", "closeAlgorithm", "abortAlgorithm", "WritableStreamDefaultController", "SetUpWritableStreamDefaultController", "_a", "wasAlreadyErroring", "WritableStreamStartErroring", "closeRequest", "writer", "defaultWriterReadyPromiseResolve", "WritableStreamDefaultControllerClose", "WritableStreamAddWriteRequest", "writeRequest", "WritableStreamDealWithRejection", "error", "WritableStreamFinishErroring", "WritableStreamDefaultWriterEnsureReadyPromiseRejected", "WritableStreamHasOperationMarkedInFlight", "storedError", "WritableStreamRejectCloseAndClosedPromiseIfNeeded", "abortRequest", "WritableStreamFinishInFlightWrite", "WritableStreamFinishInFlightWriteWithError", "WritableStreamFinishInFlightClose", "defaultWriterClosedPromiseResolve", "WritableStreamFinishInFlightCloseWithError", "WritableStreamMarkCloseRequestInFlight", "WritableStreamMarkFirstWriteRequestInFlight", "defaultWriterClosedPromiseReject", "WritableStreamUpdateBackpressure", "backpressure", "defaultWriterReadyPromiseReset", "defaultWriterReadyPromiseInitialize", "defaultWriterReadyPromiseInitializeAsResolved", "defaultWriterClosedPromiseInitialize", "defaultWriterReadyPromiseInitializeAsRejected", "defaultWriterClosedPromiseInitializeAsResolved", "defaultWriterClosedPromiseInitializeAsRejected", "IsWritableStreamDefaultWriter", "defaultWriterBrandCheckException", "defaultWriterLockException", "WritableStreamDefaultWriterGetDesiredSize", "WritableStreamDefaultWriterAbort", "WritableStreamDefaultWriterClose", "WritableStreamDefaultWriterRelease", "WritableStreamDefaultWriterWrite", "WritableStreamDefaultWriterCloseWithErrorPropagation", "WritableStreamDefaultWriterEnsureClosedPromiseRejected", "defaultWriterClosedPromiseResetToRejected", "defaultWriterReadyPromiseReject", "defaultWriterReadyPromiseResetToRejected", "WritableStreamDefaultControllerGetDesiredSize", "releasedError", "chunkSize", "WritableStreamDefaultControllerGetChunkSize", "WritableStreamDefaultControllerWrite", "closeSentinel", "IsWritableStreamDefaultController", "defaultControllerBrandCheckException", "WritableStreamDefaultControllerError", "WritableStreamDefaultControllerClearAlgorithms", "WritableStreamDefaultControllerGetBackpressure", "startPromise", "WritableStreamDefaultControllerAdvanceQueueIfNeeded", "chunkSizeE", "WritableStreamDefaultControllerErrorIfNeeded", "enqueueE", "WritableStreamDefaultControllerProcessClose", "WritableStreamDefaultControllerProcessWrite", "sinkClosePromise", "sinkWritePromise", "NativeDOMException", "isDOMExceptionConstructor", "createDOMExceptionPolyfill", "message", "DOMException", "ReadableStreamPipeTo", "source", "preventClose", "preventAbort", "signal", "shuttingDown", "currentWrite", "actions", "shutdownWithAction", "action", "pipeLoop", "resolveLoop", "rejectLoop", "next", "pipeStep", "resolveRead", "rejectRead", "isOrBecomesErrored", "shutdown", "isOrBecomesClosed", "destClosed", "waitForWritesToFinish", "oldCurrentWrite", "originalIsError", "originalError", "doTheRest", "finalize", "newError", "isError", "ReadableStreamDefaultController", "IsReadableStreamDefaultController", "ReadableStreamDefaultControllerGetDesiredSize", "ReadableStreamDefaultControllerCanCloseOrEnqueue", "ReadableStreamDefaultControllerClose", "ReadableStreamDefaultControllerEnqueue", "ReadableStreamDefaultControllerError", "ReadableStreamDefaultControllerClearAlgorithms", "ReadableStreamDefaultControllerCallPullIfNeeded", "ReadableStreamDefaultControllerShouldCallPull", "ReadableStreamDefaultControllerHasBackpressure", "SetUpReadableStreamDefaultController", "SetUpReadableStreamDefaultControllerFromUnderlyingSource", "underlyingSource", "ReadableStreamTee", "cloneForBranch2", "ReadableByteStreamTee", "ReadableStreamDefaultTee", "reading", "canceled1", "canceled2", "reason1", "reason2", "branch1", "branch2", "resolveCancelPromise", "cancelPromise", "chunk1", "chunk2", "cancel1Algorithm", "compositeReason", "cancelResult", "cancel2Algorithm", "CreateReadableStream", "forwardReaderError", "thisReader", "pullWithDefaultReader", "cloneE", "pullWithBYOBReader", "forBranch2", "byobBranch", "otherBranch", "byobCanceled", "clonedChunk", "otherCanceled", "pull1Algorithm", "pull2Algorithm", "CreateReadableByteStream", "convertUnderlyingDefaultOrByteSource", "cancel", "pull", "convertUnderlyingSourceCancelCallback", "convertUnderlyingSourcePullCallback", "convertUnderlyingSourceStartCallback", "convertReadableStreamType", "convertReaderOptions", "options", "mode", "convertReadableStreamReaderMode", "convertIteratorOptions", "convertPipeOptions", "assertAbortSignal", "convertReadableWritablePair", "readable", "writable", "ReadableStream", "rawUnderlyingSource", "InitializeReadableStream", "rawOptions", "rawTransform", "transform", "destination", "branches", "sourceCancelPromise", "convertQueuingStrategyInit", "byteLengthSizeFunction", "ByteLengthQueuingStrategy", "IsByteLengthQueuingStrategy", "byteLengthBrandCheckException", "countSizeFunction", "CountQueuingStrategy", "IsCountQueuingStrategy", "countBrandCheckException", "convertTransformer", "flush", "readableType", "writableType", "convertTransformerFlushCallback", "convertTransformerStartCallback", "convertTransformerTransformCallback", "TransformStream", "rawTransformer", "rawWritableStrategy", "rawReadableStrategy", "writableStrategy", "readableStrategy", "transformer", "readableHighWaterMark", "readableSizeAlgorithm", "writableHighWaterMark", "writableSizeAlgorithm", "startPromise_resolve", "InitializeTransformStream", "SetUpTransformStreamDefaultControllerFromTransformer", "IsTransformStream", "TransformStreamDefaultSinkWriteAlgorithm", "TransformStreamDefaultSinkAbortAlgorithm", "TransformStreamDefaultSinkCloseAlgorithm", "TransformStreamDefaultSourcePullAlgorithm", "TransformStreamErrorWritableAndUnblockWrite", "TransformStreamSetBackpressure", "TransformStreamError", "TransformStreamDefaultControllerClearAlgorithms", "TransformStreamDefaultController", "IsTransformStreamDefaultController", "readableController", "TransformStreamDefaultControllerEnqueue", "TransformStreamDefaultControllerError", "TransformStreamDefaultControllerTerminate", "SetUpTransformStreamDefaultController", "transformAlgorithm", "flushAlgorithm", "transformResultE", "TransformStreamDefaultControllerPerformTransform", "transformPromise", "backpressureChangePromise", "flushPromise", "require_streams", "__commonJSMin", "Blob", "params", "position", "blob", "ctrl", "buffer", "require_globals", "__commonJSMin", "exports", "require_TwitterPaginator", "__commonJSMin", "exports", "TwitterPaginator", "realData", "rateLimit", "instance", "queryParams", "sharedParams", "result", "maxResults", "count", "resultCount", "response", "_a", "paginator", "canFetchNextPage", "next", "item", "PreviousableTwitterPaginator", "require_paginator_v1", "__commonJSMin", "exports", "__importDefault", "mod", "TwitterPaginator_1", "CursoredV1Paginator", "maxResults", "_a", "result", "value", "require_dm_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "DmEventsV1Paginator", "response", "isNextPage", "result", "WelcomeDmV1Paginator", "require_streaming_v1_types", "__commonJSMin", "exports", "require_tweet_v1_types", "__commonJSMin", "exports", "EUploadMimeType", "require_entities_v1_types", "__commonJSMin", "exports", "require_user_v1_types", "__commonJSMin", "exports", "require_dev_utilities_v1_types", "__commonJSMin", "exports", "require_geo_v1_types", "__commonJSMin", "exports", "require_trends_v1_types", "__commonJSMin", "exports", "require_dm_v1_types", "__commonJSMin", "exports", "EDirectMessageEventTypeV1", "require_list_v1_types", "__commonJSMin", "exports", "require_v1", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_streaming_v2_types", "__commonJSMin", "exports", "require_tweet_v2_types", "__commonJSMin", "exports", "require_tweet_definition_v2", "__commonJSMin", "exports", "require_user_v2_types", "__commonJSMin", "exports", "require_spaces_v2_types", "__commonJSMin", "exports", "require_list_v2_types", "__commonJSMin", "exports", "require_v2", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_errors_types", "__commonJSMin", "exports", "ETwitterApiError", "ApiError", "ApiRequestError", "message", "options", "ApiPartialResponseError", "ApiResponseError", "data", "EApiV1ErrorCode", "codes", "errors", "error", "v2error", "_a", "EApiV2ErrorCode", "require_responses_types", "__commonJSMin", "exports", "require_client_types", "__commonJSMin", "exports", "ETwitterStreamEvent", "require_auth_types", "__commonJSMin", "exports", "require_client_plugins_types", "__commonJSMin", "exports", "TwitterApiPluginResponseOverride", "value", "require_plugins", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_types", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_settings", "__commonJSMin", "exports", "require_helpers", "__commonJSMin", "exports", "settings_1", "sharedPromise", "getter", "val", "arrayWrap", "value", "trimUndefinedProperties", "object", "parameter", "isTweetStreamV2ErrorPayload", "payload", "hasMultipleItems", "item", "deprecationWarningsCache", "safeDeprecationWarning", "message", "hash", "formattedMsg", "require_request_handler_helper", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "__importDefault", "https_1", "settings_1", "TweetStream_1", "types_1", "zlib", "events_1", "RequestHandlerHelper", "requestData", "url", "error", "abortClose", "message", "errors", "code", "res", "data", "rateLimit", "_a", "errorString", "contentEncoding", "brotli", "gunzip", "inflate", "_b", "mode", "asText", "formEntries", "item", "value", "reject", "cleanupListener", "socket", "onClose", "requestError", "resolve", "dataStream", "chunk", "e", "key", "auth", "headers", "req", "withError", "_resolve", "_reject", "originalResponse", "require_TweetStreamEventCombiner", "__commonJSMin", "exports", "events_1", "types_1", "TweetStreamEventCombiner", "stream", "stack", "type", "payload", "require_TweetStreamParser", "__commonJSMin", "exports", "events_1", "TweetStreamParser", "chunk", "size", "start", "offset", "piece", "payload", "EStreamParserEvent", "error", "require_TweetStream", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "__importDefault", "events_1", "request_handler_helper_1", "types_1", "TweetStreamEventCombiner_1", "TweetStreamParser_1", "basicRetriesAttempt", "basicReconnectRetry", "tryOccurrence", "TweetStream", "requestData", "connection", "event", "handler", "errorHandler", "err", "chunk", "payloadIsError", "eventData", "error", "newStream", "listenerNames", "listener", "callbacks", "callback", "options", "e", "initialConnection", "req", "res", "originalResponse", "retryOccurrence", "nextRetry", "eventCombiner", "type", "payload", "require_helpers", "__commonJSMin", "exports", "types_1", "hasRequestErrorPlugins", "client", "_a", "plugin", "applyResponseHooks", "requestParams", "computedParams", "requestOptions", "error", "override", "require_oauth1_helper", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "crypto", "OAuth1Helper", "options", "str", "base", "key", "request", "accessTokens", "oauthInfo", "sorted", "sortObject", "header_value", "element", "wordCharacters", "i", "tokenSecret", "baseStringData", "percentEncodeData", "mergeObject", "deParamUrl", "dataStr", "value", "valString", "item", "url", "obj1", "obj2", "data", "deParam", "string", "split", "coupleKeyValue", "tmp", "require_form_data_helper", "__commonJSMin", "exports", "helpers_1", "FormDataHelper", "values", "allAsBuffer", "val", "field", "value", "contentType", "convertedValue", "header", "acc", "cur", "allChunks", "totalBuffer", "i", "chunk", "j", "boundary", "headers", "contents", "prop", "require_request_param_helper", "__commonJSMin", "exports", "__importDefault", "mod", "form_data_helper_1", "oauth1_helper_1", "RequestParamHelpers", "query", "formattedQuery", "prop", "url", "endpoint", "queryEntries", "search", "key", "value", "body", "headers", "mode", "form", "parameter", "formHeaders", "options", "_a", "item", "parameters", "bodyProp", "param", "fullMatch", "paramName", "require_oauth2_helper", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "crypto", "OAuth2Helper", "verifier", "clientId", "clientSecret", "key", "length", "text", "possible", "i", "string", "require_request_maker_mixin", "__commonJSMin", "exports", "__importDefault", "mod", "types_1", "TweetStream_1", "helpers_1", "helpers_2", "oauth1_helper_1", "request_handler_helper_1", "request_param_helper_1", "oauth2_helper_1", "ClientRequestMaker", "settings", "originalUrl", "rateLimit", "requestParams", "_a", "_b", "_c", "_d", "_e", "possibleResponse", "args", "options", "enableRateLimitSave", "request", "response", "responseOverride", "enableAutoConnect", "requestData", "stream", "token", "key", "method", "returnValue", "plugin", "value", "headers", "bodyInSignature", "url", "query", "body", "data", "auth", "stringUrl", "rawQuery", "rawBody", "forceBodyMode", "enableAuth", "params", "rawUrl", "bodyType", "result", "computedParams", "requestOptions", "promise", "require_client_base", "__commonJSMin", "exports", "request_maker_mixin_1", "helpers_1", "globals_1", "TwitterApiBase", "token", "settings", "prefix", "clone", "type", "plugin", "endpoint", "_a", "rateLimit", "endpointWithPrefix", "forceFetch", "url", "query", "fullResponse", "rest", "resp", "body", "require_client_subclient", "__commonJSMin", "exports", "__importDefault", "mod", "client_base_1", "TwitterApiSubClient", "instance", "require_tweet_paginator_v1", "__commonJSMin", "exports", "__importDefault", "mod", "TwitterPaginator_1", "TweetTimelineV1Paginator", "response", "isNextPage", "result", "maxResults", "latestId", "HomeTimelineV1Paginator", "MentionTimelineV1Paginator", "UserTimelineV1Paginator", "ListTimelineV1Paginator", "UserFavoritesV1Paginator", "require_mutes_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "MuteUserListV1Paginator", "response", "isNextPage", "result", "MuteUserIdsV1Paginator", "require_followers_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "UserFollowerListV1Paginator", "response", "isNextPage", "result", "UserFollowerIdsV1Paginator", "require_friends_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "UserFriendListV1Paginator", "response", "isNextPage", "result", "UserFollowersIdsV1Paginator", "require_user_paginator_v1", "__commonJSMin", "exports", "__importDefault", "mod", "TwitterPaginator_1", "paginator_v1_1", "UserSearchV1Paginator", "response", "isNextPage", "result", "maxResults", "_a", "previousPage", "FriendshipsIncomingV1Paginator", "FriendshipsOutgoingV1Paginator", "require_list_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "ListListsV1Paginator", "response", "isNextPage", "result", "ListMembershipsV1Paginator", "ListOwnershipsV1Paginator", "ListSubscriptionsV1Paginator", "ListUsersV1Paginator", "ListMembersV1Paginator", "ListSubscribersV1Paginator", "require_client_v1_read", "__commonJSMin", "exports", "__importDefault", "mod", "client_subclient_1", "globals_1", "helpers_1", "client_v1_1", "tweet_paginator_v1_1", "mutes_paginator_v1_1", "followers_paginator_v1_1", "friends_paginator_v1_1", "user_paginator_v1_1", "list_paginator_v1_1", "TwitterApiv1ReadOnly", "tweetId", "options", "ids", "queryParams", "initialRq", "userId", "username", "user", "query", "sources", "friendships", "params", "mediaId", "autoConnect", "parameters", "key", "value", "locations", "loc", "copiedClient", "woeId", "lat", "long", "placeId", "resources", "require_media_helpers_v1", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "fs", "helpers_1", "types_1", "readFileIntoBuffer", "file", "handle", "getFileHandle", "resolve", "reject", "err", "data", "getFileSizeFromFileHandle", "fileHandle", "stats", "getMimeType", "type", "mimeType", "getMimeByName", "getMimeByType", "name", "getMediaCategoryByMime", "target", "sleepSecs", "seconds", "readNextPartOf", "chunkLength", "bufferOffset", "buffer", "rt", "bytesRead", "nread", "require_client_v1_write", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "__importDefault", "fs", "globals_1", "helpers_1", "types_1", "client_v1_read_1", "media_helpers_v1_1", "UPLOAD_ENDPOINT", "TwitterApiv1ReadWrite", "status", "payload", "queryParams", "quotingStatusId", "url", "tweets", "postedTweets", "tweet", "lastTweet", "inReplyToId", "in_reply_to_status_id", "tweetId", "options", "file", "endpoint", "mediaId", "metadata", "subtitles", "languages", "lang", "returnFullMediaData", "_a", "chunkLength", "fileHandle", "mediaCategory", "fileSize", "mimeType", "mediaData", "fullMediaData", "processing_info", "name", "message", "type", "target", "longVideo", "realMimeType", "e", "maxConcurrentUploads", "chunkIndex", "buffer", "readBuffer", "nread", "offset", "currentUploads", "mediaBufferPart", "request", "require_client_v1", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "dm_paginator_v1_1", "types_1", "client_v1_write_1", "TwitterApiv1", "recipient_id", "custom_profile_id", "params", "args", "id", "queryParams", "initialRq", "name", "data", "welcomeMessageId", "deleteAssociatedWelcomeDmWhenDeletingRule", "_a", "existingRules", "rule", "lastEventId", "recipientId", "urlOrDm", "attachment", "require_includes_v2_helper", "__commonJSMin", "exports", "TwitterV2IncludesHelper", "result", "_a", "_b", "id", "tweet", "retweetIds", "ref", "t", "quoteIds", "repliesIds", "authorId", "u", "inReplyUserId", "user", "keys", "m", "pollIds", "pollId", "p", "placeId", "list", "creatorId", "space", "hostIds", "speakerIds", "invitedUserIds", "require_v2_paginator", "__commonJSMin", "exports", "includes_v2_helper_1", "TwitterPaginator_1", "TwitterV2Paginator", "data", "includesRealData", "includeKey", "includeArray", "_a", "TimelineV2Paginator", "response", "isNextPage", "result", "resultData", "maxResults", "_b", "require_tweet_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "TweetTimelineV2Paginator", "response", "isNextPage", "_a", "result", "resultData", "maxResults", "params", "_b", "dateStr", "TWITTER_START_EPOCH", "date", "TweetPaginableTimelineV2Paginator", "TweetSearchRecentV2Paginator", "TweetSearchAllV2Paginator", "QuotedTweetsTimelineV2Paginator", "TweetHomeTimelineV2Paginator", "TweetUserTimelineV2Paginator", "TweetUserMentionTimelineV2Paginator", "TweetBookmarksTimelineV2Paginator", "TweetListV2Paginator", "TweetV2UserLikedTweetsPaginator", "TweetV2ListTweetsPaginator", "require_user_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "UserTimelineV2Paginator", "_a", "UserBlockingUsersV2Paginator", "UserMutingUsersV2Paginator", "UserFollowersV2Paginator", "UserFollowingV2Paginator", "UserListMembersV2Paginator", "UserListFollowersV2Paginator", "TweetLikingUsersV2Paginator", "TweetRetweetersUsersV2Paginator", "require_list_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "ListTimelineV2Paginator", "_a", "UserOwnedListsV2Paginator", "UserListMembershipsV2Paginator", "UserListFollowedV2Paginator", "require_paginators", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_client_v2_labs_read", "__commonJSMin", "exports", "__importDefault", "mod", "client_subclient_1", "globals_1", "TwitterApiv2LabsReadOnly", "require_dm_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "DMTimelineV2Paginator", "_a", "FullDMTimelineV2Paginator", "OneToOneDMTimelineV2Paginator", "ConversationDMTimelineV2Paginator", "require_client_v2_read", "__commonJSMin", "exports", "__importDefault", "mod", "client_subclient_1", "globals_1", "paginators_1", "client_v2_labs_read_1", "user_paginator_v2_1", "helpers_1", "dm_paginator_v2_1", "TwitterApiv2ReadOnly", "queryOrOptions", "options", "queryParams", "initialRq", "query", "tweetId", "tweetIds", "asPaginator", "parameters", "meUser", "userId", "user", "userIds", "ids", "username", "usernames", "params", "id", "listId", "participantId", "dmConversationId", "spaceId", "spaceIds", "creatorIds", "autoConnect", "jobId", "jobParams", "job", "rawIdsBody", "runningJob", "resolve", "line", "require_client_v2_labs_write", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_labs_read_1", "TwitterApiv2LabsReadWrite", "require_client_v2_write", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_read_1", "client_v2_labs_write_1", "TwitterApiv2ReadWrite", "tweetId", "makeHidden", "loggedUserId", "targetTweetId", "status", "payload", "toTweetId", "_a", "reply", "quotedTweetId", "tweets", "_b", "postedTweets", "tweet", "lastTweet", "queryParams", "inReplyToId", "user", "targetUserId", "options", "listId", "userId", "conversationId", "message", "participantId", "require_client_v2_labs", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_labs_write_1", "TwitterApiv2Labs", "require_client_v2", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_write_1", "client_v2_labs_1", "TwitterApiv2", "require_readonly", "__commonJSMin", "exports", "__importDefault", "mod", "_1", "client_base_1", "client_v1_read_1", "client_v2_read_1", "oauth2_helper_1", "request_param_helper_1", "TwitterApiReadOnly", "forceFetch", "what", "options", "oauth_callback", "authAccessType", "linkMode", "forceLogin", "screenName", "oauthResult", "url", "oauth_verifier", "tokens", "oauth_result", "client", "res", "redirectUri", "_a", "_b", "state", "codeVerifier", "codeChallenge", "rawScope", "scope", "query", "result", "code", "accessTokenResult", "refreshToken", "token", "tokenType", "e", "require_readwrite", "__commonJSMin", "exports", "__importDefault", "mod", "client_v1_write_1", "client_v2_write_1", "readonly_1", "TwitterApiReadWrite", "require_client", "__commonJSMin", "exports", "__importDefault", "mod", "client_v1_1", "client_v2_1", "readwrite_1", "TwitterApi", "error", "_a", "profileImageUrl", "size", "lastPart", "sizes", "originalUrl", "availableSize", "extPos", "ext", "readwrite_2", "readonly_1", "require_cjs", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "__importDefault", "mod", "client_1", "send_exports", "__export", "SendTweetRoot", "__toCommonJS", "import_api", "import_api", "import_http", "import_https", "import_zlib", "import_stream", "import_data_uri_to_buffer", "import_stream", "import_util", "import_streams", "POOL_SIZE", "toIterator", "parts", "clone", "part", "position", "end", "size", "chunk", "buffer", "_Blob", "Blob", "#parts", "#type", "#size", "blobParts", "options", "element", "type", "decoder", "str", "data", "offset", "it", "ctrl", "start", "relativeStart", "relativeEnd", "span", "added", "blob", "object", "fetch_blob_default", "FetchBaseError", "message", "type", "FetchError", "FetchBaseError", "message", "type", "systemError", "import_crypto", "NAME", "isURLSearchParameters", "object", "isBlob", "isFormData", "isAbortSignal", "carriage", "dashes", "carriageLength", "getFooter", "boundary", "getHeader", "name", "field", "header", "isBlob", "getBoundary", "formDataIterator", "form", "value", "getFormDataLength", "length", "INTERNALS", "Body", "body", "size", "boundary", "isURLSearchParameters", "isBlob", "Stream", "isFormData", "getBoundary", "formDataIterator", "error_", "error", "FetchBaseError", "FetchError", "buffer", "byteOffset", "byteLength", "consumeBody", "ct", "buf", "fetch_blob_default", "data", "accum", "accumBytes", "chunk", "c", "clone", "instance", "highWaterMark", "p1", "p2", "extractContentType", "request", "getTotalBytes", "getFormDataLength", "writeToStream", "dest", "import_util", "import_http", "validateHeaderName", "http", "name", "error", "validateHeaderValue", "value", "Headers", "init", "result", "raw", "values", "method", "pair", "target", "p", "receiver", "callback", "thisArg", "key", "property", "fromRawHeaders", "headers", "index", "array", "redirectStatus", "isRedirect", "code", "INTERNALS", "Response", "Body", "body", "options", "status", "headers", "Headers", "contentType", "extractContentType", "clone", "url", "isRedirect", "response", "import_url", "getSearch", "parsedURL", "lastOffset", "hash", "INTERNALS", "isRequest", "object", "Request", "Body", "input", "init", "parsedURL", "method", "inputBody", "clone", "headers", "Headers", "contentType", "extractContentType", "signal", "isAbortSignal", "formatUrl", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "getTotalBytes", "agent", "search", "getSearch", "AbortError", "FetchBaseError", "message", "type", "supportedSchemas", "fetch", "url", "options_", "resolve", "reject", "request", "Request", "options", "getNodeRequestOptions", "data", "dataUriToBuffer", "response", "Response", "send", "https", "http", "signal", "abort", "error", "AbortError", "Stream", "abortAndFinalize", "finalize", "request_", "FetchError", "fixResponseChunkedTransferBadEnding", "s", "endedWithEventsCount", "hadError", "response_", "headers", "fromRawHeaders", "isRedirect", "location", "locationURL", "requestOptions", "Headers", "body", "pump", "responseOptions", "codings", "zlibOptions", "zlib", "chunk", "writeToStream", "errorCallback", "LAST_CHUNK", "isChunkedTransfer", "properLastChunkReceived", "previousChunk", "socket", "onSocketClose", "buf", "XIcon", "getClientId", "oauthClient", "XIcon", "authorize", "tokenSet", "refreshTokens", "authRequest", "authorizationCode", "fetchTokens", "authCode", "params", "response", "fetch", "getOAuthTokens", "refreshTokens", "refreshToken", "params", "getClientId", "response", "fetch", "tokenResponse", "useV2", "hasRestrictedAccess", "ci", "getClientId", "import_api", "import_react", "import_api", "import_react", "import_twitter_api_v2", "getErrorMessage", "error", "fmt", "createClient", "pref", "appKey", "appSecret", "accessToken", "accessSecret", "_twitterClient", "twitterClient", "import_jsx_runtime", "TweetLengthCounter", "props", "t", "isValid", "validTweetText", "TweetFragment", "props", "index", "content", "placeholder", "newtext", "TweetLengthCounter", "validTweetText", "text", "l", "validTweet", "validTweets", "tweets", "t", "submitTweets", "twitterClient", "tweetTexts", "error", "getErrorMessage", "TweetSendThreadForm", "setTweets", "addTweet", "nt", "submitText", "removeTweet", "lt", "remove", "updateTweet", "addTweetNumber", "i", "XIcon", "import_api", "import_react", "import_react", "import_twitter_api_v2", "max_results", "defaultFields", "defaultExpansions", "defaultMediaFields", "twitterUserToUser", "result", "ClientV2", "authorize", "at", "getOAuthTokens", "userId", "r", "u", "tweetsRaw", "userIDs", "t", "usersRaw", "ru", "me", "authorID", "extraFields", "api", "fields", "includes", "tweets", "tweet", "media", "non_public_metrics", "organic_metrics", "image_url", "m", "containsNonPublicMetrics", "containsOrganicMetrics", "tweetIds", "text", "texts", "tweetID", "nt", "createClientV2", "clientV2", "import_jsx_runtime", "TweetLengthCounter", "props", "t", "isValid", "validTweetText", "TweetFragment", "props", "index", "content", "placeholder", "newtext", "TweetLengthCounter", "validTweetText", "text", "l", "validTweet", "validTweets", "tweets", "t", "submitTweets", "hasRestrictedAccess", "url", "clientV2", "tweetTexts", "error", "getErrorMessage", "TweetSendThreadFormV2", "defaultValue", "setTweets", "addTweet", "nt", "submitText", "removeTweet", "lt", "remove", "updateTweet", "addTweetNumber", "i", "XIcon", "import_jsx_runtime", "SendTweetRoot", "launchContext", "useV2", "TweetSendThreadFormV2", "TweetSendThreadForm"]
}
