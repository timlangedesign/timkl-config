{
  "version": 3,
  "sources": ["../node_modules/twitter-api-v2/dist/cjs/globals.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/TwitterPaginator.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/dm.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/streaming.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/tweet.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/entities.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/user.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/dev-utilities.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/geo.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/trends.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/dm.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/list.v1.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v1/index.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/streaming.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/tweet.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/tweet.definition.v2.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/user.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/spaces.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/list.v2.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/v2/index.js", "../node_modules/twitter-api-v2/dist/cjs/types/errors.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/responses.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/client.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/auth.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/plugins/client.plugins.types.js", "../node_modules/twitter-api-v2/dist/cjs/types/plugins/index.js", "../node_modules/twitter-api-v2/dist/cjs/types/index.js", "../node_modules/twitter-api-v2/dist/cjs/settings.js", "../node_modules/twitter-api-v2/dist/cjs/helpers.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/request-handler.helper.js", "../node_modules/twitter-api-v2/dist/cjs/stream/TweetStreamEventCombiner.js", "../node_modules/twitter-api-v2/dist/cjs/stream/TweetStreamParser.js", "../node_modules/twitter-api-v2/dist/cjs/stream/TweetStream.js", "../node_modules/twitter-api-v2/dist/cjs/plugins/helpers.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/oauth1.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/form-data.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/request-param.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/oauth2.helper.js", "../node_modules/twitter-api-v2/dist/cjs/client-mixins/request-maker.mixin.js", "../node_modules/twitter-api-v2/dist/cjs/client.base.js", "../node_modules/twitter-api-v2/dist/cjs/client.subclient.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/tweet.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/mutes.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/followers.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/friends.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/user.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/list.paginator.v1.js", "../node_modules/twitter-api-v2/dist/cjs/v1/client.v1.read.js", "../node_modules/twitter-api-v2/dist/cjs/v1/media-helpers.v1.js", "../node_modules/twitter-api-v2/dist/cjs/v1/client.v1.write.js", "../node_modules/twitter-api-v2/dist/cjs/v1/client.v1.js", "../node_modules/twitter-api-v2/dist/cjs/v2/includes.v2.helper.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/v2.paginator.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/tweet.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/user.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/list.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/index.js", "../node_modules/twitter-api-v2/dist/cjs/v2-labs/client.v2.labs.read.js", "../node_modules/twitter-api-v2/dist/cjs/paginators/dm.paginator.v2.js", "../node_modules/twitter-api-v2/dist/cjs/v2/client.v2.read.js", "../node_modules/twitter-api-v2/dist/cjs/v2-labs/client.v2.labs.write.js", "../node_modules/twitter-api-v2/dist/cjs/v2/client.v2.write.js", "../node_modules/twitter-api-v2/dist/cjs/v2-labs/client.v2.labs.js", "../node_modules/twitter-api-v2/dist/cjs/v2/client.v2.js", "../node_modules/twitter-api-v2/dist/cjs/client/readonly.js", "../node_modules/twitter-api-v2/dist/cjs/client/readwrite.js", "../node_modules/twitter-api-v2/dist/cjs/client/index.js", "../node_modules/twitter-api-v2/dist/cjs/index.js", "../src/user_search.tsx", "../src/common.ts", "../src/v2/lib/oauth.ts", "../src/icon.ts", "../src/v1/components/user_search.tsx", "../src/v1/components/user.tsx", "../src/utils.ts", "../src/v1/components/user_actions.tsx", "../src/v1/components/usertweets.tsx", "../src/v1/components/tweet.tsx", "../src/v1/lib/twitterapi.ts", "../src/v1/components/tweet_actions.tsx", "../src/v1/components/send.tsx", "../src/v2/components/user_search.tsx"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API_V1_1_STREAM_PREFIX = exports.API_V1_1_UPLOAD_PREFIX = exports.API_V1_1_PREFIX = exports.API_V2_LABS_PREFIX = exports.API_V2_PREFIX = void 0;\nexports.API_V2_PREFIX = 'https://api.twitter.com/2/';\nexports.API_V2_LABS_PREFIX = 'https://api.twitter.com/labs/2/';\nexports.API_V1_1_PREFIX = 'https://api.twitter.com/1.1/';\nexports.API_V1_1_UPLOAD_PREFIX = 'https://upload.twitter.com/1.1/';\nexports.API_V1_1_STREAM_PREFIX = 'https://stream.twitter.com/1.1/';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreviousableTwitterPaginator = exports.TwitterPaginator = void 0;\n/** TwitterPaginator: able to get consume data from initial request, then fetch next data sequentially. */\nclass TwitterPaginator {\n    // noinspection TypeScriptAbstractClassConstructorCanBeMadeProtected\n    constructor({ realData, rateLimit, instance, queryParams, sharedParams }) {\n        this._maxResultsWhenFetchLast = 100;\n        this._realData = realData;\n        this._rateLimit = rateLimit;\n        this._instance = instance;\n        this._queryParams = queryParams;\n        this._sharedParams = sharedParams;\n    }\n    get _isRateLimitOk() {\n        if (!this._rateLimit) {\n            return true;\n        }\n        const resetDate = this._rateLimit.reset * 1000;\n        if (resetDate < Date.now()) {\n            return true;\n        }\n        return this._rateLimit.remaining > 0;\n    }\n    makeRequest(queryParams) {\n        return this._instance.get(this.getEndpoint(), queryParams, { fullResponse: true, params: this._sharedParams });\n    }\n    makeNewInstanceFromResult(result, queryParams) {\n        // Construct a subclass\n        return new this.constructor({\n            realData: result.data,\n            rateLimit: result.rateLimit,\n            instance: this._instance,\n            queryParams,\n            sharedParams: this._sharedParams,\n        });\n    }\n    getEndpoint() {\n        return this._endpoint;\n    }\n    injectQueryParams(maxResults) {\n        return {\n            ...(maxResults ? { max_results: maxResults } : {}),\n            ...this._queryParams,\n        };\n    }\n    /* ---------------------- */\n    /* Real paginator methods */\n    /* ---------------------- */\n    /**\n     * Next page.\n     */\n    async next(maxResults) {\n        const queryParams = this.getNextQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        return this.makeNewInstanceFromResult(result, queryParams);\n    }\n    /**\n     * Next page, but store it in current instance.\n     */\n    async fetchNext(maxResults) {\n        const queryParams = this.getNextQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        // Await in case of async sub-methods\n        await this.refreshInstanceFromResult(result, true);\n        return this;\n    }\n    /**\n     * Fetch up to {count} items after current page,\n     * as long as rate limit is not hit and Twitter has some results\n     */\n    async fetchLast(count = Infinity) {\n        let queryParams = this.getNextQueryParams(this._maxResultsWhenFetchLast);\n        let resultCount = 0;\n        // Break at rate limit limit\n        while (resultCount < count && this._isRateLimitOk) {\n            const response = await this.makeRequest(queryParams);\n            await this.refreshInstanceFromResult(response, true);\n            resultCount += this.getPageLengthFromRequest(response);\n            if (this.isFetchLastOver(response)) {\n                break;\n            }\n            queryParams = this.getNextQueryParams(this._maxResultsWhenFetchLast);\n        }\n        return this;\n    }\n    get rateLimit() {\n        var _a;\n        return { ...(_a = this._rateLimit) !== null && _a !== void 0 ? _a : {} };\n    }\n    /** Get raw data returned by Twitter API. */\n    get data() {\n        return this._realData;\n    }\n    get done() {\n        return !this.canFetchNextPage(this._realData);\n    }\n    /**\n     * Iterate over currently fetched items.\n     */\n    *[Symbol.iterator]() {\n        yield* this.getItemArray();\n    }\n    /**\n     * Iterate over items \"indefinitely\" (until rate limit is hit / they're no more items available)\n     * This will **mutate the current instance** and fill data, metas, etc. inside this instance.\n     *\n     * If you need to handle concurrent requests, or you need to rely on immutability, please use `.fetchAndIterate()` instead.\n     */\n    async *[Symbol.asyncIterator]() {\n        yield* this.getItemArray();\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let paginator = this;\n        let canFetchNextPage = this.canFetchNextPage(this._realData);\n        while (canFetchNextPage && this._isRateLimitOk && paginator.getItemArray().length > 0) {\n            const next = await paginator.next(this._maxResultsWhenFetchLast);\n            // Store data into current instance [needed to access includes and meta]\n            this.refreshInstanceFromResult({ data: next._realData, headers: {}, rateLimit: next._rateLimit }, true);\n            canFetchNextPage = this.canFetchNextPage(next._realData);\n            const items = next.getItemArray();\n            yield* items;\n            paginator = next;\n        }\n    }\n    /**\n     * Iterate over items \"indefinitely\" without modifying the current instance (until rate limit is hit / they're no more items available)\n     *\n     * This will **NOT** mutate the current instance, meaning that current instance will not inherit from `includes` and `meta` (v2 API only).\n     * Use `Symbol.asyncIterator` (`for-await of`) to directly access items with current instance mutation.\n     */\n    async *fetchAndIterate() {\n        for (const item of this.getItemArray()) {\n            yield [item, this];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let paginator = this;\n        let canFetchNextPage = this.canFetchNextPage(this._realData);\n        while (canFetchNextPage && this._isRateLimitOk && paginator.getItemArray().length > 0) {\n            const next = await paginator.next(this._maxResultsWhenFetchLast);\n            // Store data into current instance [needed to access includes and meta]\n            this.refreshInstanceFromResult({ data: next._realData, headers: {}, rateLimit: next._rateLimit }, true);\n            canFetchNextPage = this.canFetchNextPage(next._realData);\n            for (const item of next.getItemArray()) {\n                yield [item, next];\n            }\n            this._rateLimit = next._rateLimit;\n            paginator = next;\n        }\n    }\n}\nexports.TwitterPaginator = TwitterPaginator;\n/** PreviousableTwitterPaginator: a TwitterPaginator able to get consume data from both side, next and previous. */\nclass PreviousableTwitterPaginator extends TwitterPaginator {\n    /**\n     * Previous page (new tweets)\n     */\n    async previous(maxResults) {\n        const queryParams = this.getPreviousQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        return this.makeNewInstanceFromResult(result, queryParams);\n    }\n    /**\n     * Previous page, but in current instance.\n     */\n    async fetchPrevious(maxResults) {\n        const queryParams = this.getPreviousQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        await this.refreshInstanceFromResult(result, false);\n        return this;\n    }\n}\nexports.PreviousableTwitterPaginator = PreviousableTwitterPaginator;\nexports.default = TwitterPaginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CursoredV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\nclass CursoredV1Paginator extends TwitterPaginator_1.default {\n    getNextQueryParams(maxResults) {\n        var _a;\n        return {\n            ...this._queryParams,\n            cursor: (_a = this._realData.next_cursor_str) !== null && _a !== void 0 ? _a : this._realData.next_cursor,\n            ...(maxResults ? { count: maxResults } : {}),\n        };\n    }\n    isFetchLastOver(result) {\n        // If we cant fetch next page\n        return !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        // If one of cursor is valid\n        return !this.isNextCursorInvalid(result.next_cursor) || !this.isNextCursorInvalid(result.next_cursor_str);\n    }\n    isNextCursorInvalid(value) {\n        return value === undefined\n            || value === 0\n            || value === -1\n            || value === '0'\n            || value === '-1';\n    }\n}\nexports.CursoredV1Paginator = CursoredV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WelcomeDmV1Paginator = exports.DmEventsV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass DmEventsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'direct_messages/events/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.events.push(...result.events);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.events.length;\n    }\n    getItemArray() {\n        return this.events;\n    }\n    /**\n     * Events returned by paginator.\n     */\n    get events() {\n        return this._realData.events;\n    }\n}\nexports.DmEventsV1Paginator = DmEventsV1Paginator;\nclass WelcomeDmV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'direct_messages/welcome_messages/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.welcome_messages.push(...result.welcome_messages);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.welcome_messages.length;\n    }\n    getItemArray() {\n        return this.welcomeMessages;\n    }\n    get welcomeMessages() {\n        return this._realData.welcome_messages;\n    }\n}\nexports.WelcomeDmV1Paginator = WelcomeDmV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EUploadMimeType = void 0;\nvar EUploadMimeType;\n(function (EUploadMimeType) {\n    EUploadMimeType[\"Jpeg\"] = \"image/jpeg\";\n    EUploadMimeType[\"Mp4\"] = \"video/mp4\";\n    EUploadMimeType[\"Mov\"] = \"video/quicktime\";\n    EUploadMimeType[\"Gif\"] = \"image/gif\";\n    EUploadMimeType[\"Png\"] = \"image/png\";\n    EUploadMimeType[\"Srt\"] = \"text/plain\";\n    EUploadMimeType[\"Webp\"] = \"image/webp\";\n})(EUploadMimeType = exports.EUploadMimeType || (exports.EUploadMimeType = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EDirectMessageEventTypeV1 = void 0;\n// Creation of DMs\nvar EDirectMessageEventTypeV1;\n(function (EDirectMessageEventTypeV1) {\n    EDirectMessageEventTypeV1[\"Create\"] = \"message_create\";\n    EDirectMessageEventTypeV1[\"WelcomeCreate\"] = \"welcome_message\";\n})(EDirectMessageEventTypeV1 = exports.EDirectMessageEventTypeV1 || (exports.EDirectMessageEventTypeV1 = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./streaming.v1.types\"), exports);\n__exportStar(require(\"./tweet.v1.types\"), exports);\n__exportStar(require(\"./entities.v1.types\"), exports);\n__exportStar(require(\"./user.v1.types\"), exports);\n__exportStar(require(\"./dev-utilities.v1.types\"), exports);\n__exportStar(require(\"./geo.v1.types\"), exports);\n__exportStar(require(\"./trends.v1.types\"), exports);\n__exportStar(require(\"./dm.v1.types\"), exports);\n__exportStar(require(\"./list.v1.types\"), exports);\n", "\"use strict\";\n// ---------------\n// -- Streaming --\n// ---------------\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./streaming.v2.types\"), exports);\n__exportStar(require(\"./tweet.v2.types\"), exports);\n__exportStar(require(\"./tweet.definition.v2\"), exports);\n__exportStar(require(\"./user.v2.types\"), exports);\n__exportStar(require(\"./spaces.v2.types\"), exports);\n__exportStar(require(\"./list.v2.types\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EApiV2ErrorCode = exports.EApiV1ErrorCode = exports.ApiResponseError = exports.ApiPartialResponseError = exports.ApiRequestError = exports.ETwitterApiError = void 0;\nvar ETwitterApiError;\n(function (ETwitterApiError) {\n    ETwitterApiError[\"Request\"] = \"request\";\n    ETwitterApiError[\"PartialResponse\"] = \"partial-response\";\n    ETwitterApiError[\"Response\"] = \"response\";\n})(ETwitterApiError = exports.ETwitterApiError || (exports.ETwitterApiError = {}));\n/* ERRORS INSTANCES */\nclass ApiError extends Error {\n    constructor() {\n        super(...arguments);\n        this.error = true;\n    }\n}\nclass ApiRequestError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.Request;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n    }\n    get request() {\n        return this._options.request;\n    }\n    get requestError() {\n        return this._options.requestError;\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            error: this.requestError,\n        };\n    }\n}\nexports.ApiRequestError = ApiRequestError;\nclass ApiPartialResponseError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.PartialResponse;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n    }\n    get request() {\n        return this._options.request;\n    }\n    get response() {\n        return this._options.response;\n    }\n    get responseError() {\n        return this._options.responseError;\n    }\n    get rawContent() {\n        return this._options.rawContent;\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            error: this.responseError,\n        };\n    }\n}\nexports.ApiPartialResponseError = ApiPartialResponseError;\nclass ApiResponseError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.Response;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n        this.code = options.code;\n        this.headers = options.headers;\n        this.rateLimit = options.rateLimit;\n        // Fix bad error data payload on some v1 endpoints (see https://github.com/PLhery/node-twitter-api-v2/issues/342)\n        if (options.data && typeof options.data === 'object' && 'error' in options.data && !options.data.errors) {\n            const data = { ...options.data };\n            data.errors = [{\n                    code: EApiV1ErrorCode.InternalError,\n                    message: data.error,\n                }];\n            this.data = data;\n        }\n        else {\n            this.data = options.data;\n        }\n    }\n    get request() {\n        return this._options.request;\n    }\n    get response() {\n        return this._options.response;\n    }\n    /** Check for presence of one of given v1/v2 error codes. */\n    hasErrorCode(...codes) {\n        const errors = this.errors;\n        // No errors\n        if (!(errors === null || errors === void 0 ? void 0 : errors.length)) {\n            return false;\n        }\n        // v1 errors\n        if ('code' in errors[0]) {\n            const v1errors = errors;\n            return v1errors.some(error => codes.includes(error.code));\n        }\n        // v2 error\n        const v2error = this.data;\n        return codes.includes(v2error.type);\n    }\n    get errors() {\n        var _a;\n        return (_a = this.data) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n    get rateLimitError() {\n        return this.code === 420 || this.code === 429;\n    }\n    get isAuthError() {\n        if (this.code === 401) {\n            return true;\n        }\n        return this.hasErrorCode(EApiV1ErrorCode.AuthTimestampInvalid, EApiV1ErrorCode.AuthenticationFail, EApiV1ErrorCode.BadAuthenticationData, EApiV1ErrorCode.InvalidOrExpiredToken);\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            code: this.code,\n            error: this.data,\n            rateLimit: this.rateLimit,\n            headers: this.headers,\n        };\n    }\n}\nexports.ApiResponseError = ApiResponseError;\nvar EApiV1ErrorCode;\n(function (EApiV1ErrorCode) {\n    // Location errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidCoordinates\"] = 3] = \"InvalidCoordinates\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoLocationFound\"] = 13] = \"NoLocationFound\";\n    // Authentication failures\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AuthenticationFail\"] = 32] = \"AuthenticationFail\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidOrExpiredToken\"] = 89] = \"InvalidOrExpiredToken\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UnableToVerifyCredentials\"] = 99] = \"UnableToVerifyCredentials\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AuthTimestampInvalid\"] = 135] = \"AuthTimestampInvalid\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"BadAuthenticationData\"] = 215] = \"BadAuthenticationData\";\n    // Resources not found or visible\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoUserMatch\"] = 17] = \"NoUserMatch\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UserNotFound\"] = 50] = \"UserNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"ResourceNotFound\"] = 34] = \"ResourceNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNotFound\"] = 144] = \"TweetNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNotVisible\"] = 179] = \"TweetNotVisible\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NotAllowedResource\"] = 220] = \"NotAllowedResource\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MediaIdNotFound\"] = 325] = \"MediaIdNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNoLongerAvailable\"] = 421] = \"TweetNoLongerAvailable\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetViolatedRules\"] = 422] = \"TweetViolatedRules\";\n    // Account errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TargetUserSuspended\"] = 63] = \"TargetUserSuspended\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"YouAreSuspended\"] = 64] = \"YouAreSuspended\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AccountUpdateFailed\"] = 120] = \"AccountUpdateFailed\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoSelfSpamReport\"] = 36] = \"NoSelfSpamReport\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoSelfMute\"] = 271] = \"NoSelfMute\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AccountLocked\"] = 326] = \"AccountLocked\";\n    // Application live errors / Twitter errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"RateLimitExceeded\"] = 88] = \"RateLimitExceeded\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoDMRightForApp\"] = 93] = \"NoDMRightForApp\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"OverCapacity\"] = 130] = \"OverCapacity\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InternalError\"] = 131] = \"InternalError\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManyFollowings\"] = 161] = \"TooManyFollowings\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetLimitExceeded\"] = 185] = \"TweetLimitExceeded\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DuplicatedTweet\"] = 187] = \"DuplicatedTweet\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManySpamReports\"] = 205] = \"TooManySpamReports\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"RequestLooksLikeSpam\"] = 226] = \"RequestLooksLikeSpam\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoWriteRightForApp\"] = 261] = \"NoWriteRightForApp\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetActionsDisabled\"] = 425] = \"TweetActionsDisabled\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetRepliesRestricted\"] = 433] = \"TweetRepliesRestricted\";\n    // Invalid request parameters\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NamedParameterMissing\"] = 38] = \"NamedParameterMissing\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidAttachmentUrl\"] = 44] = \"InvalidAttachmentUrl\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetTextTooLong\"] = 186] = \"TweetTextTooLong\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MissingUrlParameter\"] = 195] = \"MissingUrlParameter\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoMultipleGifs\"] = 323] = \"NoMultipleGifs\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidMediaIds\"] = 324] = \"InvalidMediaIds\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidUrl\"] = 407] = \"InvalidUrl\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManyTweetAttachments\"] = 386] = \"TooManyTweetAttachments\";\n    // Already sent/deleted item\n    EApiV1ErrorCode[EApiV1ErrorCode[\"StatusAlreadyFavorited\"] = 139] = \"StatusAlreadyFavorited\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"FollowRequestAlreadySent\"] = 160] = \"FollowRequestAlreadySent\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CannotUnmuteANonMutedAccount\"] = 272] = \"CannotUnmuteANonMutedAccount\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetAlreadyRetweeted\"] = 327] = \"TweetAlreadyRetweeted\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"ReplyToDeletedTweet\"] = 385] = \"ReplyToDeletedTweet\";\n    // DM Errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DMReceiverNotFollowingYou\"] = 150] = \"DMReceiverNotFollowingYou\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UnableToSendDM\"] = 151] = \"UnableToSendDM\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MustAllowDMFromAnyone\"] = 214] = \"MustAllowDMFromAnyone\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CannotSendDMToThisUser\"] = 349] = \"CannotSendDMToThisUser\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DMTextTooLong\"] = 354] = \"DMTextTooLong\";\n    // Application misconfiguration\n    EApiV1ErrorCode[EApiV1ErrorCode[\"SubscriptionAlreadyExists\"] = 355] = \"SubscriptionAlreadyExists\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CallbackUrlNotApproved\"] = 415] = \"CallbackUrlNotApproved\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"SuspendedApplication\"] = 416] = \"SuspendedApplication\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"OobOauthIsNotAllowed\"] = 417] = \"OobOauthIsNotAllowed\";\n})(EApiV1ErrorCode = exports.EApiV1ErrorCode || (exports.EApiV1ErrorCode = {}));\nvar EApiV2ErrorCode;\n(function (EApiV2ErrorCode) {\n    // Request errors\n    EApiV2ErrorCode[\"InvalidRequest\"] = \"https://api.twitter.com/2/problems/invalid-request\";\n    EApiV2ErrorCode[\"ClientForbidden\"] = \"https://api.twitter.com/2/problems/client-forbidden\";\n    EApiV2ErrorCode[\"UnsupportedAuthentication\"] = \"https://api.twitter.com/2/problems/unsupported-authentication\";\n    // Stream rules errors\n    EApiV2ErrorCode[\"InvalidRules\"] = \"https://api.twitter.com/2/problems/invalid-rules\";\n    EApiV2ErrorCode[\"TooManyRules\"] = \"https://api.twitter.com/2/problems/rule-cap\";\n    EApiV2ErrorCode[\"DuplicatedRules\"] = \"https://api.twitter.com/2/problems/duplicate-rules\";\n    // Twitter errors\n    EApiV2ErrorCode[\"RateLimitExceeded\"] = \"https://api.twitter.com/2/problems/usage-capped\";\n    EApiV2ErrorCode[\"ConnectionError\"] = \"https://api.twitter.com/2/problems/streaming-connection\";\n    EApiV2ErrorCode[\"ClientDisconnected\"] = \"https://api.twitter.com/2/problems/client-disconnected\";\n    EApiV2ErrorCode[\"TwitterDisconnectedYou\"] = \"https://api.twitter.com/2/problems/operational-disconnect\";\n    // Resource errors\n    EApiV2ErrorCode[\"ResourceNotFound\"] = \"https://api.twitter.com/2/problems/resource-not-found\";\n    EApiV2ErrorCode[\"ResourceUnauthorized\"] = \"https://api.twitter.com/2/problems/not-authorized-for-resource\";\n    EApiV2ErrorCode[\"DisallowedResource\"] = \"https://api.twitter.com/2/problems/disallowed-resource\";\n})(EApiV2ErrorCode = exports.EApiV2ErrorCode || (exports.EApiV2ErrorCode = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ETwitterStreamEvent = void 0;\nvar ETwitterStreamEvent;\n(function (ETwitterStreamEvent) {\n    ETwitterStreamEvent[\"Connected\"] = \"connected\";\n    ETwitterStreamEvent[\"ConnectError\"] = \"connect error\";\n    ETwitterStreamEvent[\"ConnectionError\"] = \"connection error\";\n    ETwitterStreamEvent[\"ConnectionClosed\"] = \"connection closed\";\n    ETwitterStreamEvent[\"ConnectionLost\"] = \"connection lost\";\n    ETwitterStreamEvent[\"ReconnectAttempt\"] = \"reconnect attempt\";\n    ETwitterStreamEvent[\"Reconnected\"] = \"reconnected\";\n    ETwitterStreamEvent[\"ReconnectError\"] = \"reconnect error\";\n    ETwitterStreamEvent[\"ReconnectLimitExceeded\"] = \"reconnect limit exceeded\";\n    ETwitterStreamEvent[\"DataKeepAlive\"] = \"data keep-alive\";\n    ETwitterStreamEvent[\"Data\"] = \"data event content\";\n    ETwitterStreamEvent[\"DataError\"] = \"data twitter error\";\n    ETwitterStreamEvent[\"TweetParseError\"] = \"data tweet parse error\";\n    ETwitterStreamEvent[\"Error\"] = \"stream error\";\n})(ETwitterStreamEvent = exports.ETwitterStreamEvent || (exports.ETwitterStreamEvent = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiPluginResponseOverride = void 0;\nclass TwitterApiPluginResponseOverride {\n    constructor(value) {\n        this.value = value;\n    }\n}\nexports.TwitterApiPluginResponseOverride = TwitterApiPluginResponseOverride;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./client.plugins.types\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./v1\"), exports);\n__exportStar(require(\"./v2\"), exports);\n__exportStar(require(\"./errors.types\"), exports);\n__exportStar(require(\"./responses.types\"), exports);\n__exportStar(require(\"./client.types\"), exports);\n__exportStar(require(\"./auth.types\"), exports);\n__exportStar(require(\"./plugins\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiV2Settings = void 0;\nexports.TwitterApiV2Settings = {\n    debug: false,\n    deprecationWarnings: true,\n    logger: { log: console.log.bind(console) },\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeDeprecationWarning = exports.hasMultipleItems = exports.isTweetStreamV2ErrorPayload = exports.trimUndefinedProperties = exports.arrayWrap = exports.sharedPromise = void 0;\nconst settings_1 = require(\"./settings\");\nfunction sharedPromise(getter) {\n    const sharedPromise = {\n        value: undefined,\n        promise: getter().then(val => {\n            sharedPromise.value = val;\n            return val;\n        }),\n    };\n    return sharedPromise;\n}\nexports.sharedPromise = sharedPromise;\nfunction arrayWrap(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [value];\n}\nexports.arrayWrap = arrayWrap;\nfunction trimUndefinedProperties(object) {\n    // Delete undefined parameters\n    for (const parameter in object) {\n        if (object[parameter] === undefined)\n            delete object[parameter];\n    }\n}\nexports.trimUndefinedProperties = trimUndefinedProperties;\nfunction isTweetStreamV2ErrorPayload(payload) {\n    // Is error only if 'errors' is present and 'data' does not exists\n    return typeof payload === 'object'\n        && 'errors' in payload\n        && !('data' in payload);\n}\nexports.isTweetStreamV2ErrorPayload = isTweetStreamV2ErrorPayload;\nfunction hasMultipleItems(item) {\n    if (Array.isArray(item) && item.length > 1) {\n        return true;\n    }\n    return item.toString().includes(',');\n}\nexports.hasMultipleItems = hasMultipleItems;\nconst deprecationWarningsCache = new Set();\nfunction safeDeprecationWarning(message) {\n    if (typeof console === 'undefined' || !console.warn || !settings_1.TwitterApiV2Settings.deprecationWarnings) {\n        return;\n    }\n    const hash = `${message.instance}-${message.method}-${message.problem}`;\n    if (deprecationWarningsCache.has(hash)) {\n        return;\n    }\n    const formattedMsg = `[twitter-api-v2] Deprecation warning: In ${message.instance}.${message.method}() call` +\n        `, ${message.problem}.\\n${message.resolution}.`;\n    console.warn(formattedMsg);\n    console.warn('To disable this message, import variable TwitterApiV2Settings from twitter-api-v2 and set TwitterApiV2Settings.deprecationWarnings to false.');\n    deprecationWarningsCache.add(hash);\n}\nexports.safeDeprecationWarning = safeDeprecationWarning;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestHandlerHelper = void 0;\nconst https_1 = require(\"https\");\nconst settings_1 = require(\"../settings\");\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nconst types_1 = require(\"../types\");\nconst zlib = __importStar(require(\"zlib\"));\nconst events_1 = require(\"events\");\nclass RequestHandlerHelper {\n    constructor(requestData) {\n        this.requestData = requestData;\n        this.requestErrorHandled = false;\n        this.responseData = [];\n    }\n    /* Request helpers */\n    get hrefPathname() {\n        const url = this.requestData.url;\n        return url.hostname + url.pathname;\n    }\n    isCompressionDisabled() {\n        return !this.requestData.compression || this.requestData.compression === 'identity';\n    }\n    isFormEncodedEndpoint() {\n        return this.requestData.url.href.startsWith('https://api.twitter.com/oauth/');\n    }\n    /* Error helpers */\n    createRequestError(error) {\n        if (settings_1.TwitterApiV2Settings.debug) {\n            settings_1.TwitterApiV2Settings.logger.log('Request error:', error);\n        }\n        return new types_1.ApiRequestError('Request failed.', {\n            request: this.req,\n            error,\n        });\n    }\n    createPartialResponseError(error, abortClose) {\n        const res = this.res;\n        let message = `Request failed with partial response with HTTP code ${res.statusCode}`;\n        if (abortClose) {\n            message += ' (connection abruptly closed)';\n        }\n        else {\n            message += ' (parse error)';\n        }\n        return new types_1.ApiPartialResponseError(message, {\n            request: this.req,\n            response: this.res,\n            responseError: error,\n            rawContent: Buffer.concat(this.responseData).toString(),\n        });\n    }\n    formatV1Errors(errors) {\n        return errors\n            .map(({ code, message }) => `${message} (Twitter code ${code})`)\n            .join(', ');\n    }\n    formatV2Error(error) {\n        return `${error.title}: ${error.detail} (see ${error.type})`;\n    }\n    createResponseError({ res, data, rateLimit, code }) {\n        var _a;\n        if (settings_1.TwitterApiV2Settings.debug) {\n            settings_1.TwitterApiV2Settings.logger.log(`Request failed with code ${code}, data:`, data);\n            settings_1.TwitterApiV2Settings.logger.log('Response headers:', res.headers);\n        }\n        // Errors formatting.\n        let errorString = `Request failed with code ${code}`;\n        if ((_a = data === null || data === void 0 ? void 0 : data.errors) === null || _a === void 0 ? void 0 : _a.length) {\n            const errors = data.errors;\n            if ('code' in errors[0]) {\n                errorString += ' - ' + this.formatV1Errors(errors);\n            }\n            else {\n                errorString += ' - ' + this.formatV2Error(data);\n            }\n        }\n        return new types_1.ApiResponseError(errorString, {\n            code,\n            data,\n            headers: res.headers,\n            request: this.req,\n            response: res,\n            rateLimit,\n        });\n    }\n    /* Response helpers */\n    getResponseDataStream(res) {\n        if (this.isCompressionDisabled()) {\n            return res;\n        }\n        const contentEncoding = (res.headers['content-encoding'] || 'identity').trim().toLowerCase();\n        if (contentEncoding === 'br') {\n            const brotli = zlib.createBrotliDecompress({\n                flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n                finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH,\n            });\n            res.pipe(brotli);\n            return brotli;\n        }\n        if (contentEncoding === 'gzip') {\n            const gunzip = zlib.createGunzip({\n                flush: zlib.constants.Z_SYNC_FLUSH,\n                finishFlush: zlib.constants.Z_SYNC_FLUSH,\n            });\n            res.pipe(gunzip);\n            return gunzip;\n        }\n        if (contentEncoding === 'deflate') {\n            const inflate = zlib.createInflate({\n                flush: zlib.constants.Z_SYNC_FLUSH,\n                finishFlush: zlib.constants.Z_SYNC_FLUSH,\n            });\n            res.pipe(inflate);\n            return inflate;\n        }\n        return res;\n    }\n    detectResponseType(res) {\n        var _a, _b;\n        // Auto parse if server responds with JSON body\n        if (((_a = res.headers['content-type']) === null || _a === void 0 ? void 0 : _a.includes('application/json')) || ((_b = res.headers['content-type']) === null || _b === void 0 ? void 0 : _b.includes('application/problem+json'))) {\n            return 'json';\n        }\n        // f-e oauth token endpoints\n        else if (this.isFormEncodedEndpoint()) {\n            return 'url';\n        }\n        return 'text';\n    }\n    getParsedResponse(res) {\n        const data = this.responseData;\n        const mode = this.requestData.forceParseMode || this.detectResponseType(res);\n        if (mode === 'buffer') {\n            return Buffer.concat(data);\n        }\n        else if (mode === 'text') {\n            return Buffer.concat(data).toString();\n        }\n        else if (mode === 'json') {\n            const asText = Buffer.concat(data).toString();\n            return asText.length ? JSON.parse(asText) : undefined;\n        }\n        else if (mode === 'url') {\n            const asText = Buffer.concat(data).toString();\n            const formEntries = {};\n            for (const [item, value] of new URLSearchParams(asText)) {\n                formEntries[item] = value;\n            }\n            return formEntries;\n        }\n        else {\n            // mode === 'none'\n            return undefined;\n        }\n    }\n    getRateLimitFromResponse(res) {\n        let rateLimit = undefined;\n        if (res.headers['x-rate-limit-limit']) {\n            rateLimit = {\n                limit: Number(res.headers['x-rate-limit-limit']),\n                remaining: Number(res.headers['x-rate-limit-remaining']),\n                reset: Number(res.headers['x-rate-limit-reset']),\n            };\n            if (res.headers['x-app-limit-24hour-limit']) {\n                rateLimit.day = {\n                    limit: Number(res.headers['x-app-limit-24hour-limit']),\n                    remaining: Number(res.headers['x-app-limit-24hour-remaining']),\n                    reset: Number(res.headers['x-app-limit-24hour-reset']),\n                };\n            }\n            if (this.requestData.rateLimitSaver) {\n                this.requestData.rateLimitSaver(rateLimit);\n            }\n        }\n        return rateLimit;\n    }\n    /* Request event handlers */\n    onSocketEventHandler(reject, cleanupListener, socket) {\n        const onClose = this.onSocketCloseHandler.bind(this, reject);\n        socket.on('close', onClose);\n        cleanupListener.on('complete', () => socket.off('close', onClose));\n    }\n    onSocketCloseHandler(reject) {\n        this.req.removeAllListeners('timeout');\n        const res = this.res;\n        if (res) {\n            // Response ok, res.close/res.end can handle request ending\n            return;\n        }\n        if (!this.requestErrorHandled) {\n            return reject(this.createRequestError(new Error('Socket closed without any information.')));\n        }\n        // else: other situation\n    }\n    requestErrorHandler(reject, requestError) {\n        var _a, _b;\n        (_b = (_a = this.requestData).requestEventDebugHandler) === null || _b === void 0 ? void 0 : _b.call(_a, 'request-error', { requestError });\n        this.requestErrorHandled = true;\n        reject(this.createRequestError(requestError));\n    }\n    timeoutErrorHandler() {\n        this.requestErrorHandled = true;\n        this.req.destroy(new Error('Request timeout.'));\n    }\n    /* Response event handlers */\n    classicResponseHandler(resolve, reject, res) {\n        this.res = res;\n        const dataStream = this.getResponseDataStream(res);\n        // Register the response data\n        dataStream.on('data', chunk => this.responseData.push(chunk));\n        dataStream.on('end', this.onResponseEndHandler.bind(this, resolve, reject));\n        dataStream.on('close', this.onResponseCloseHandler.bind(this, resolve, reject));\n        // Debug handlers\n        if (this.requestData.requestEventDebugHandler) {\n            this.requestData.requestEventDebugHandler('response', { res });\n            res.on('aborted', error => this.requestData.requestEventDebugHandler('response-aborted', { error }));\n            res.on('error', error => this.requestData.requestEventDebugHandler('response-error', { error }));\n            res.on('close', () => this.requestData.requestEventDebugHandler('response-close', { data: this.responseData }));\n            res.on('end', () => this.requestData.requestEventDebugHandler('response-end'));\n        }\n    }\n    onResponseEndHandler(resolve, reject) {\n        const rateLimit = this.getRateLimitFromResponse(this.res);\n        let data;\n        try {\n            data = this.getParsedResponse(this.res);\n        }\n        catch (e) {\n            reject(this.createPartialResponseError(e, false));\n            return;\n        }\n        // Handle bad error codes\n        const code = this.res.statusCode;\n        if (code >= 400) {\n            reject(this.createResponseError({ data, res: this.res, rateLimit, code }));\n            return;\n        }\n        if (settings_1.TwitterApiV2Settings.debug) {\n            settings_1.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${this.res.statusCode}`);\n            settings_1.TwitterApiV2Settings.logger.log('Response body:', data);\n        }\n        resolve({\n            data,\n            headers: this.res.headers,\n            rateLimit,\n        });\n    }\n    onResponseCloseHandler(resolve, reject) {\n        const res = this.res;\n        if (res.aborted) {\n            // Try to parse the request (?)\n            try {\n                this.getParsedResponse(this.res);\n                // Ok, try to resolve normally the request\n                return this.onResponseEndHandler(resolve, reject);\n            }\n            catch (e) {\n                // Parse error, just drop with content\n                return reject(this.createPartialResponseError(e, true));\n            }\n        }\n        if (!res.complete) {\n            return reject(this.createPartialResponseError(new Error('Response has been interrupted before response could be parsed.'), true));\n        }\n        // else: end has been called\n    }\n    streamResponseHandler(resolve, reject, res) {\n        const code = res.statusCode;\n        if (code < 400) {\n            if (settings_1.TwitterApiV2Settings.debug) {\n                settings_1.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode} (starting stream)`);\n            }\n            const dataStream = this.getResponseDataStream(res);\n            // HTTP code ok, consume stream\n            resolve({ req: this.req, res: dataStream, originalResponse: res, requestData: this.requestData });\n        }\n        else {\n            // Handle response normally, can only rejects\n            this.classicResponseHandler(() => undefined, reject, res);\n        }\n    }\n    /* Wrappers for request lifecycle */\n    debugRequest() {\n        const url = this.requestData.url;\n        settings_1.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]`, this.requestData.options);\n        if (url.search) {\n            settings_1.TwitterApiV2Settings.logger.log('Request parameters:', [...url.searchParams.entries()].map(([key, value]) => `${key}: ${value}`));\n        }\n        if (this.requestData.body) {\n            settings_1.TwitterApiV2Settings.logger.log('Request body:', this.requestData.body);\n        }\n    }\n    buildRequest() {\n        var _a;\n        const url = this.requestData.url;\n        const auth = url.username ? `${url.username}:${url.password}` : undefined;\n        const headers = (_a = this.requestData.options.headers) !== null && _a !== void 0 ? _a : {};\n        if (this.requestData.compression === true || this.requestData.compression === 'brotli') {\n            headers['accept-encoding'] = 'br;q=1.0, gzip;q=0.8, deflate;q=0.5, *;q=0.1';\n        }\n        else if (this.requestData.compression === 'gzip') {\n            headers['accept-encoding'] = 'gzip;q=1, deflate;q=0.5, *;q=0.1';\n        }\n        else if (this.requestData.compression === 'deflate') {\n            headers['accept-encoding'] = 'deflate;q=1, *;q=0.1';\n        }\n        if (settings_1.TwitterApiV2Settings.debug) {\n            this.debugRequest();\n        }\n        this.req = (0, https_1.request)({\n            ...this.requestData.options,\n            // Define URL params manually, addresses dependencies error https://github.com/PLhery/node-twitter-api-v2/issues/94\n            host: url.hostname,\n            port: url.port || undefined,\n            path: url.pathname + url.search,\n            protocol: url.protocol,\n            auth,\n            headers,\n        });\n    }\n    registerRequestEventDebugHandlers(req) {\n        req.on('close', () => this.requestData.requestEventDebugHandler('close'));\n        req.on('abort', () => this.requestData.requestEventDebugHandler('abort'));\n        req.on('socket', socket => {\n            this.requestData.requestEventDebugHandler('socket', { socket });\n            socket.on('error', error => this.requestData.requestEventDebugHandler('socket-error', { socket, error }));\n            socket.on('connect', () => this.requestData.requestEventDebugHandler('socket-connect', { socket }));\n            socket.on('close', withError => this.requestData.requestEventDebugHandler('socket-close', { socket, withError }));\n            socket.on('end', () => this.requestData.requestEventDebugHandler('socket-end', { socket }));\n            socket.on('lookup', (...data) => this.requestData.requestEventDebugHandler('socket-lookup', { socket, data }));\n            socket.on('timeout', () => this.requestData.requestEventDebugHandler('socket-timeout', { socket }));\n        });\n    }\n    makeRequest() {\n        this.buildRequest();\n        return new Promise((_resolve, _reject) => {\n            // Hooks to call when promise is fulfulled to cleanup the socket (shared between requests)\n            const resolve = value => {\n                cleanupListener.emit('complete');\n                _resolve(value);\n            };\n            const reject = value => {\n                cleanupListener.emit('complete');\n                _reject(value);\n            };\n            const cleanupListener = new events_1.EventEmitter();\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('socket', this.onSocketEventHandler.bind(this, reject, cleanupListener));\n            req.on('response', this.classicResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.options.timeout) {\n                req.on('timeout', this.timeoutErrorHandler.bind(this));\n            }\n            // Debug handlers\n            if (this.requestData.requestEventDebugHandler) {\n                this.registerRequestEventDebugHandlers(req);\n            }\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n    async makeRequestAsStream() {\n        const { req, res, requestData, originalResponse } = await this.makeRequestAndResolveWhenReady();\n        return new TweetStream_1.default(requestData, { req, res, originalResponse });\n    }\n    makeRequestAndResolveWhenReady() {\n        this.buildRequest();\n        return new Promise((resolve, reject) => {\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('response', this.streamResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n}\nexports.RequestHandlerHelper = RequestHandlerHelper;\nexports.default = RequestHandlerHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetStreamEventCombiner = void 0;\nconst events_1 = require(\"events\");\nconst types_1 = require(\"../types\");\nclass TweetStreamEventCombiner extends events_1.EventEmitter {\n    constructor(stream) {\n        super();\n        this.stream = stream;\n        this.stack = [];\n        this.onStreamData = this.onStreamData.bind(this);\n        this.onStreamError = this.onStreamError.bind(this);\n        this.onceNewEvent = this.once.bind(this, 'event');\n        // Init events from stream\n        stream.on(types_1.ETwitterStreamEvent.Data, this.onStreamData);\n        // Ignore reconnect errors: Don't close event combiner until connection error/closed\n        stream.on(types_1.ETwitterStreamEvent.ConnectionError, this.onStreamError);\n        stream.on(types_1.ETwitterStreamEvent.TweetParseError, this.onStreamError);\n        stream.on(types_1.ETwitterStreamEvent.ConnectionClosed, this.onStreamError);\n    }\n    /** Returns a new `Promise` that will `resolve` on next event (`data` or any sort of error). */\n    nextEvent() {\n        return new Promise(this.onceNewEvent);\n    }\n    /** Returns `true` if there's something in the stack. */\n    hasStack() {\n        return this.stack.length > 0;\n    }\n    /** Returns stacked data events, and clean the stack. */\n    popStack() {\n        const stack = this.stack;\n        this.stack = [];\n        return stack;\n    }\n    /** Cleanup all the listeners attached on stream. */\n    destroy() {\n        this.removeAllListeners();\n        this.stream.off(types_1.ETwitterStreamEvent.Data, this.onStreamData);\n        this.stream.off(types_1.ETwitterStreamEvent.ConnectionError, this.onStreamError);\n        this.stream.off(types_1.ETwitterStreamEvent.TweetParseError, this.onStreamError);\n        this.stream.off(types_1.ETwitterStreamEvent.ConnectionClosed, this.onStreamError);\n    }\n    emitEvent(type, payload) {\n        this.emit('event', { type, payload });\n    }\n    onStreamError(payload) {\n        this.emitEvent('error', payload);\n    }\n    onStreamData(payload) {\n        this.stack.push(payload);\n        this.emitEvent('data', payload);\n    }\n}\nexports.TweetStreamEventCombiner = TweetStreamEventCombiner;\nexports.default = TweetStreamEventCombiner;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EStreamParserEvent = void 0;\nconst events_1 = require(\"events\");\nclass TweetStreamParser extends events_1.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.currentMessage = '';\n    }\n    // Code partially belongs to twitter-stream-api for this\n    // https://github.com/trygve-lie/twitter-stream-api/blob/master/lib/parser.js\n    push(chunk) {\n        this.currentMessage += chunk;\n        chunk = this.currentMessage;\n        const size = chunk.length;\n        let start = 0;\n        let offset = 0;\n        while (offset < size) {\n            // Take [offset, offset+1] inside a new string\n            if (chunk.slice(offset, offset + 2) === '\\r\\n') {\n                // If chunk contains \\r\\n after current offset,\n                // parse [start, ..., offset] as a tweet\n                const piece = chunk.slice(start, offset);\n                start = offset += 2;\n                // If empty object\n                if (!piece.length) {\n                    continue;\n                }\n                try {\n                    const payload = JSON.parse(piece);\n                    if (payload) {\n                        this.emit(EStreamParserEvent.ParsedData, payload);\n                        continue;\n                    }\n                }\n                catch (error) {\n                    this.emit(EStreamParserEvent.ParseError, error);\n                }\n            }\n            offset++;\n        }\n        this.currentMessage = chunk.slice(start, size);\n    }\n    /** Reset the currently stored message (f.e. on connection reset) */\n    reset() {\n        this.currentMessage = '';\n    }\n}\nexports.default = TweetStreamParser;\nvar EStreamParserEvent;\n(function (EStreamParserEvent) {\n    EStreamParserEvent[\"ParsedData\"] = \"parsed data\";\n    EStreamParserEvent[\"ParseError\"] = \"parse error\";\n})(EStreamParserEvent = exports.EStreamParserEvent || (exports.EStreamParserEvent = {}));\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetStream = void 0;\nconst events_1 = require(\"events\");\nconst request_handler_helper_1 = __importDefault(require(\"../client-mixins/request-handler.helper\"));\nconst types_1 = require(\"../types\");\nconst TweetStreamEventCombiner_1 = __importDefault(require(\"./TweetStreamEventCombiner\"));\nconst TweetStreamParser_1 = __importStar(require(\"./TweetStreamParser\"));\n// In seconds\nconst basicRetriesAttempt = [5, 15, 30, 60, 90, 120, 180, 300, 600, 900];\n// Default retry function\nconst basicReconnectRetry = tryOccurrence => tryOccurrence > basicRetriesAttempt.length\n    ? 901000\n    : basicRetriesAttempt[tryOccurrence - 1] * 1000;\nclass TweetStream extends events_1.EventEmitter {\n    constructor(requestData, connection) {\n        super();\n        this.requestData = requestData;\n        this.autoReconnect = false;\n        this.autoReconnectRetries = 5;\n        // 2 minutes without any Twitter signal\n        this.keepAliveTimeoutMs = 1000 * 120;\n        this.nextRetryTimeout = basicReconnectRetry;\n        this.parser = new TweetStreamParser_1.default();\n        this.connectionProcessRunning = false;\n        this.onKeepAliveTimeout = this.onKeepAliveTimeout.bind(this);\n        this.initEventsFromParser();\n        if (connection) {\n            this.req = connection.req;\n            this.res = connection.res;\n            this.originalResponse = connection.originalResponse;\n            this.initEventsFromRequest();\n        }\n    }\n    on(event, handler) {\n        return super.on(event, handler);\n    }\n    initEventsFromRequest() {\n        if (!this.req || !this.res) {\n            throw new Error('TweetStream error: You cannot init TweetStream without a request and response object.');\n        }\n        const errorHandler = (err) => {\n            this.emit(types_1.ETwitterStreamEvent.ConnectionError, err);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.ConnectionError,\n                error: err,\n                message: 'Connection lost or closed by Twitter.',\n            });\n            this.onConnectionError();\n        };\n        this.req.on('error', errorHandler);\n        this.res.on('error', errorHandler);\n        // Usually, connection should not be closed by Twitter!\n        this.res.on('close', () => errorHandler(new Error('Connection closed by Twitter.')));\n        this.res.on('data', (chunk) => {\n            this.resetKeepAliveTimeout();\n            if (chunk.toString() === '\\r\\n') {\n                return this.emit(types_1.ETwitterStreamEvent.DataKeepAlive);\n            }\n            this.parser.push(chunk.toString());\n        });\n        // Starts the keep alive timeout\n        this.resetKeepAliveTimeout();\n    }\n    initEventsFromParser() {\n        const payloadIsError = this.requestData.payloadIsError;\n        this.parser.on(TweetStreamParser_1.EStreamParserEvent.ParsedData, (eventData) => {\n            if (payloadIsError && payloadIsError(eventData)) {\n                this.emit(types_1.ETwitterStreamEvent.DataError, eventData);\n                this.emit(types_1.ETwitterStreamEvent.Error, {\n                    type: types_1.ETwitterStreamEvent.DataError,\n                    error: eventData,\n                    message: 'Twitter sent a payload that is detected as an error payload.',\n                });\n            }\n            else {\n                this.emit(types_1.ETwitterStreamEvent.Data, eventData);\n            }\n        });\n        this.parser.on(TweetStreamParser_1.EStreamParserEvent.ParseError, (error) => {\n            this.emit(types_1.ETwitterStreamEvent.TweetParseError, error);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.TweetParseError,\n                error,\n                message: 'Failed to parse stream data.',\n            });\n        });\n    }\n    resetKeepAliveTimeout() {\n        this.unbindKeepAliveTimeout();\n        if (this.keepAliveTimeoutMs !== Infinity) {\n            this.keepAliveTimeout = setTimeout(this.onKeepAliveTimeout, this.keepAliveTimeoutMs);\n        }\n    }\n    onKeepAliveTimeout() {\n        this.emit(types_1.ETwitterStreamEvent.ConnectionLost);\n        this.onConnectionError();\n    }\n    unbindTimeouts() {\n        this.unbindRetryTimeout();\n        this.unbindKeepAliveTimeout();\n    }\n    unbindKeepAliveTimeout() {\n        if (this.keepAliveTimeout) {\n            clearTimeout(this.keepAliveTimeout);\n            this.keepAliveTimeout = undefined;\n        }\n    }\n    unbindRetryTimeout() {\n        if (this.retryTimeout) {\n            clearTimeout(this.retryTimeout);\n            this.retryTimeout = undefined;\n        }\n    }\n    closeWithoutEmit() {\n        this.unbindTimeouts();\n        if (this.res) {\n            this.res.removeAllListeners();\n            // Close response silently\n            this.res.destroy();\n        }\n        if (this.req) {\n            this.req.removeAllListeners();\n            // Close connection silently\n            this.req.destroy();\n        }\n    }\n    /** Terminate connection to Twitter. */\n    close() {\n        this.emit(types_1.ETwitterStreamEvent.ConnectionClosed);\n        this.closeWithoutEmit();\n    }\n    /** Unbind all listeners, and close connection. */\n    destroy() {\n        this.removeAllListeners();\n        this.close();\n    }\n    /**\n     * Make a new request that creates a new `TweetStream` instance with\n     * the same parameters, and bind current listeners to new stream.\n     */\n    async clone() {\n        const newRequest = new request_handler_helper_1.default(this.requestData);\n        const newStream = await newRequest.makeRequestAsStream();\n        // Clone attached listeners\n        const listenerNames = this.eventNames();\n        for (const listener of listenerNames) {\n            const callbacks = this.listeners(listener);\n            for (const callback of callbacks) {\n                newStream.on(listener, callback);\n            }\n        }\n        return newStream;\n    }\n    /** Start initial stream connection, setup options on current instance and returns itself. */\n    async connect(options = {}) {\n        if (typeof options.autoReconnect !== 'undefined') {\n            this.autoReconnect = options.autoReconnect;\n        }\n        if (typeof options.autoReconnectRetries !== 'undefined') {\n            this.autoReconnectRetries = options.autoReconnectRetries === 'unlimited'\n                ? Infinity\n                : options.autoReconnectRetries;\n        }\n        if (typeof options.keepAliveTimeout !== 'undefined') {\n            this.keepAliveTimeoutMs = options.keepAliveTimeout === 'disable'\n                ? Infinity\n                : options.keepAliveTimeout;\n        }\n        if (typeof options.nextRetryTimeout !== 'undefined') {\n            this.nextRetryTimeout = options.nextRetryTimeout;\n        }\n        // Make the connection\n        this.unbindTimeouts();\n        try {\n            await this.reconnect();\n        }\n        catch (e) {\n            this.emit(types_1.ETwitterStreamEvent.ConnectError, 0);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.ConnectError,\n                error: e,\n                message: 'Connect error - Initial connection just failed.',\n            });\n            // Only make a reconnection attempt if autoReconnect is true!\n            // Otherwise, let error be propagated\n            if (this.autoReconnect) {\n                this.makeAutoReconnectRetry(0, e);\n            }\n            else {\n                throw e;\n            }\n        }\n        return this;\n    }\n    /** Make a new request to (re)connect to Twitter. */\n    async reconnect() {\n        if (this.connectionProcessRunning) {\n            throw new Error('Connection process is already running.');\n        }\n        this.connectionProcessRunning = true;\n        try {\n            let initialConnection = true;\n            if (this.req) {\n                initialConnection = false;\n                this.closeWithoutEmit();\n            }\n            const { req, res, originalResponse } = await new request_handler_helper_1.default(this.requestData).makeRequestAndResolveWhenReady();\n            this.req = req;\n            this.res = res;\n            this.originalResponse = originalResponse;\n            this.emit(initialConnection ? types_1.ETwitterStreamEvent.Connected : types_1.ETwitterStreamEvent.Reconnected);\n            this.parser.reset();\n            this.initEventsFromRequest();\n        }\n        finally {\n            this.connectionProcessRunning = false;\n        }\n    }\n    async onConnectionError(retryOccurrence = 0) {\n        this.unbindTimeouts();\n        // Close the request if necessary\n        this.closeWithoutEmit();\n        // Terminate stream by events if necessary (no auto-reconnect or retries exceeded)\n        if (!this.autoReconnect) {\n            this.emit(types_1.ETwitterStreamEvent.ConnectionClosed);\n            return;\n        }\n        if (retryOccurrence >= this.autoReconnectRetries) {\n            this.emit(types_1.ETwitterStreamEvent.ReconnectLimitExceeded);\n            this.emit(types_1.ETwitterStreamEvent.ConnectionClosed);\n            return;\n        }\n        // If all other conditions fails, do a reconnect attempt\n        try {\n            this.emit(types_1.ETwitterStreamEvent.ReconnectAttempt, retryOccurrence);\n            await this.reconnect();\n        }\n        catch (e) {\n            this.emit(types_1.ETwitterStreamEvent.ReconnectError, retryOccurrence);\n            this.emit(types_1.ETwitterStreamEvent.Error, {\n                type: types_1.ETwitterStreamEvent.ReconnectError,\n                error: e,\n                message: `Reconnect error - ${retryOccurrence + 1} attempts made yet.`,\n            });\n            this.makeAutoReconnectRetry(retryOccurrence, e);\n        }\n    }\n    makeAutoReconnectRetry(retryOccurrence, error) {\n        const nextRetry = this.nextRetryTimeout(retryOccurrence + 1, error);\n        this.retryTimeout = setTimeout(() => {\n            this.onConnectionError(retryOccurrence + 1);\n        }, nextRetry);\n    }\n    async *[Symbol.asyncIterator]() {\n        const eventCombiner = new TweetStreamEventCombiner_1.default(this);\n        try {\n            while (true) {\n                if (!this.req || this.req.aborted) {\n                    throw new Error('Connection closed');\n                }\n                if (eventCombiner.hasStack()) {\n                    yield* eventCombiner.popStack();\n                }\n                const { type, payload } = await eventCombiner.nextEvent();\n                if (type === 'error') {\n                    throw payload;\n                }\n            }\n        }\n        finally {\n            eventCombiner.destroy();\n        }\n    }\n}\nexports.TweetStream = TweetStream;\nexports.default = TweetStream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyResponseHooks = exports.hasRequestErrorPlugins = void 0;\nconst types_1 = require(\"../types\");\n/* Plugin helpers */\nfunction hasRequestErrorPlugins(client) {\n    var _a;\n    if (!((_a = client.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length)) {\n        return false;\n    }\n    for (const plugin of client.clientSettings.plugins) {\n        if (plugin.onRequestError || plugin.onResponseError) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasRequestErrorPlugins = hasRequestErrorPlugins;\nasync function applyResponseHooks(requestParams, computedParams, requestOptions, error) {\n    let override;\n    if (error instanceof types_1.ApiRequestError || error instanceof types_1.ApiPartialResponseError) {\n        override = await this.applyPluginMethod('onRequestError', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            error,\n        });\n    }\n    else if (error instanceof types_1.ApiResponseError) {\n        override = await this.applyPluginMethod('onResponseError', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            error,\n        });\n    }\n    if (override && override instanceof types_1.TwitterApiPluginResponseOverride) {\n        return override.value;\n    }\n    return Promise.reject(error);\n}\nexports.applyResponseHooks = applyResponseHooks;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth1Helper = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nclass OAuth1Helper {\n    constructor(options) {\n        this.nonceLength = 32;\n        this.consumerKeys = options.consumerKeys;\n    }\n    static percentEncode(str) {\n        return encodeURIComponent(str)\n            .replace(/!/g, '%21')\n            .replace(/\\*/g, '%2A')\n            .replace(/'/g, '%27')\n            .replace(/\\(/g, '%28')\n            .replace(/\\)/g, '%29');\n    }\n    hash(base, key) {\n        return crypto\n            .createHmac('sha1', key)\n            .update(base)\n            .digest('base64');\n    }\n    authorize(request, accessTokens = {}) {\n        const oauthInfo = {\n            oauth_consumer_key: this.consumerKeys.key,\n            oauth_nonce: this.getNonce(),\n            oauth_signature_method: 'HMAC-SHA1',\n            oauth_timestamp: this.getTimestamp(),\n            oauth_version: '1.0',\n        };\n        if (accessTokens.key !== undefined) {\n            oauthInfo.oauth_token = accessTokens.key;\n        }\n        if (!request.data) {\n            request.data = {};\n        }\n        oauthInfo.oauth_signature = this.getSignature(request, accessTokens.secret, oauthInfo);\n        return oauthInfo;\n    }\n    toHeader(oauthInfo) {\n        const sorted = sortObject(oauthInfo);\n        let header_value = 'OAuth ';\n        for (const element of sorted) {\n            if (element.key.indexOf('oauth_') !== 0) {\n                continue;\n            }\n            header_value += OAuth1Helper.percentEncode(element.key) + '=\"' + OAuth1Helper.percentEncode(element.value) + '\",';\n        }\n        return {\n            // Remove the last ,\n            Authorization: header_value.slice(0, header_value.length - 1),\n        };\n    }\n    getNonce() {\n        const wordCharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        let result = '';\n        for (let i = 0; i < this.nonceLength; i++) {\n            result += wordCharacters[Math.trunc(Math.random() * wordCharacters.length)];\n        }\n        return result;\n    }\n    getTimestamp() {\n        return Math.trunc(new Date().getTime() / 1000);\n    }\n    getSignature(request, tokenSecret, oauthInfo) {\n        return this.hash(this.getBaseString(request, oauthInfo), this.getSigningKey(tokenSecret));\n    }\n    getSigningKey(tokenSecret) {\n        return OAuth1Helper.percentEncode(this.consumerKeys.secret) + '&' + OAuth1Helper.percentEncode(tokenSecret || '');\n    }\n    getBaseString(request, oauthInfo) {\n        return request.method.toUpperCase() + '&'\n            + OAuth1Helper.percentEncode(this.getBaseUrl(request.url)) + '&'\n            + OAuth1Helper.percentEncode(this.getParameterString(request, oauthInfo));\n    }\n    getParameterString(request, oauthInfo) {\n        const baseStringData = sortObject(percentEncodeData(mergeObject(oauthInfo, mergeObject(request.data, deParamUrl(request.url)))));\n        let dataStr = '';\n        for (const { key, value } of baseStringData) {\n            // check if the value is an array\n            // this means that this key has multiple values\n            if (value && Array.isArray(value)) {\n                // sort the array first\n                value.sort();\n                let valString = '';\n                // serialize all values for this key: e.g. formkey=formvalue1&formkey=formvalue2\n                value.forEach((item, i) => {\n                    valString += key + '=' + item;\n                    if (i < value.length) {\n                        valString += '&';\n                    }\n                });\n                dataStr += valString;\n            }\n            else {\n                dataStr += key + '=' + value + '&';\n            }\n        }\n        // Remove the last character\n        return dataStr.slice(0, dataStr.length - 1);\n    }\n    getBaseUrl(url) {\n        return url.split('?')[0];\n    }\n}\nexports.OAuth1Helper = OAuth1Helper;\nexports.default = OAuth1Helper;\n// Helper functions //\nfunction mergeObject(obj1, obj2) {\n    return {\n        ...obj1 || {},\n        ...obj2 || {},\n    };\n}\nfunction sortObject(data) {\n    return Object.keys(data)\n        .sort()\n        .map(key => ({ key, value: data[key] }));\n}\nfunction deParam(string) {\n    const split = string.split('&');\n    const data = {};\n    for (const coupleKeyValue of split) {\n        const [key, value = ''] = coupleKeyValue.split('=');\n        // check if the key already exists\n        // this can occur if the QS part of the url contains duplicate keys like this: ?formkey=formvalue1&formkey=formvalue2\n        if (data[key]) {\n            // the key exists already\n            if (!Array.isArray(data[key])) {\n                // replace the value with an array containing the already present value\n                data[key] = [data[key]];\n            }\n            // and add the new found value to it\n            data[key].push(decodeURIComponent(value));\n        }\n        else {\n            // it doesn't exist, just put the found value in the data object\n            data[key] = decodeURIComponent(value);\n        }\n    }\n    return data;\n}\nfunction deParamUrl(url) {\n    const tmp = url.split('?');\n    if (tmp.length === 1)\n        return {};\n    return deParam(tmp[1]);\n}\nfunction percentEncodeData(data) {\n    const result = {};\n    for (const key in data) {\n        let value = data[key];\n        // check if the value is an array\n        if (value && Array.isArray(value)) {\n            value = value.map(v => OAuth1Helper.percentEncode(v));\n        }\n        else {\n            value = OAuth1Helper.percentEncode(value);\n        }\n        result[OAuth1Helper.percentEncode(key)] = value;\n    }\n    return result;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormDataHelper = void 0;\nconst helpers_1 = require(\"../helpers\");\n// This class is partially inspired by https://github.com/form-data/form-data/blob/master/lib/form_data.js\n// All credits to their authors.\nclass FormDataHelper {\n    constructor() {\n        this._boundary = '';\n        this._chunks = [];\n    }\n    bodyAppend(...values) {\n        const allAsBuffer = values.map(val => val instanceof Buffer ? val : Buffer.from(val));\n        this._chunks.push(...allAsBuffer);\n    }\n    append(field, value, contentType) {\n        const convertedValue = value instanceof Buffer ? value : value.toString();\n        const header = this.getMultipartHeader(field, convertedValue, contentType);\n        this.bodyAppend(header, convertedValue, FormDataHelper.LINE_BREAK);\n    }\n    getHeaders() {\n        return {\n            'content-type': 'multipart/form-data; boundary=' + this.getBoundary(),\n        };\n    }\n    /** Length of form-data (including footer length). */\n    getLength() {\n        return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);\n    }\n    getBuffer() {\n        const allChunks = [...this._chunks, this.getMultipartFooter()];\n        const totalBuffer = Buffer.alloc(this.getLength());\n        let i = 0;\n        for (const chunk of allChunks) {\n            for (let j = 0; j < chunk.length; i++, j++) {\n                totalBuffer[i] = chunk[j];\n            }\n        }\n        return totalBuffer;\n    }\n    getBoundary() {\n        if (!this._boundary) {\n            this.generateBoundary();\n        }\n        return this._boundary;\n    }\n    generateBoundary() {\n        // This generates a 50 character boundary similar to those used by Firefox.\n        let boundary = '--------------------------';\n        for (let i = 0; i < 24; i++) {\n            boundary += Math.floor(Math.random() * 10).toString(16);\n        }\n        this._boundary = boundary;\n    }\n    getMultipartHeader(field, value, contentType) {\n        // In this lib no need to guess more the content type, octet stream is ok of buffers\n        if (!contentType) {\n            contentType = value instanceof Buffer ? FormDataHelper.DEFAULT_CONTENT_TYPE : '';\n        }\n        const headers = {\n            'Content-Disposition': ['form-data', `name=\"${field}\"`],\n            'Content-Type': contentType,\n        };\n        let contents = '';\n        for (const [prop, header] of Object.entries(headers)) {\n            // skip nullish headers.\n            if (!header.length) {\n                continue;\n            }\n            contents += prop + ': ' + (0, helpers_1.arrayWrap)(header).join('; ') + FormDataHelper.LINE_BREAK;\n        }\n        return '--' + this.getBoundary() + FormDataHelper.LINE_BREAK + contents + FormDataHelper.LINE_BREAK;\n    }\n    getMultipartFooter() {\n        if (this._footerChunk) {\n            return this._footerChunk;\n        }\n        return this._footerChunk = Buffer.from('--' + this.getBoundary() + '--' + FormDataHelper.LINE_BREAK);\n    }\n}\nexports.FormDataHelper = FormDataHelper;\nFormDataHelper.LINE_BREAK = '\\r\\n';\nFormDataHelper.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestParamHelpers = void 0;\nconst form_data_helper_1 = require(\"./form-data.helper\");\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\n/* Helpers functions that are specific to this class but do not depends on instance */\nclass RequestParamHelpers {\n    static formatQueryToString(query) {\n        const formattedQuery = {};\n        for (const prop in query) {\n            if (typeof query[prop] === 'string') {\n                formattedQuery[prop] = query[prop];\n            }\n            else if (typeof query[prop] !== 'undefined') {\n                formattedQuery[prop] = String(query[prop]);\n            }\n        }\n        return formattedQuery;\n    }\n    static autoDetectBodyType(url) {\n        if (url.pathname.startsWith('/2/') || url.pathname.startsWith('/labs/2/')) {\n            // oauth2 takes url encoded\n            if (url.password.startsWith('/2/oauth2')) {\n                return 'url';\n            }\n            // Twitter API v2 has JSON-encoded requests for everything else\n            return 'json';\n        }\n        if (url.hostname === 'upload.twitter.com') {\n            if (url.pathname === '/1.1/media/upload.json') {\n                return 'form-data';\n            }\n            // json except for media/upload command, that is form-data.\n            return 'json';\n        }\n        const endpoint = url.pathname.split('/1.1/', 2)[1];\n        if (this.JSON_1_1_ENDPOINTS.has(endpoint)) {\n            return 'json';\n        }\n        return 'url';\n    }\n    static addQueryParamsToUrl(url, query) {\n        const queryEntries = Object.entries(query);\n        if (queryEntries.length) {\n            let search = '';\n            for (const [key, value] of queryEntries) {\n                search += (search.length ? '&' : '?') + `${oauth1_helper_1.default.percentEncode(key)}=${oauth1_helper_1.default.percentEncode(value)}`;\n            }\n            url.search = search;\n        }\n    }\n    static constructBodyParams(body, headers, mode) {\n        if (body instanceof Buffer) {\n            return body;\n        }\n        if (mode === 'json') {\n            if (!headers['content-type']) {\n                headers['content-type'] = 'application/json;charset=UTF-8';\n            }\n            return JSON.stringify(body);\n        }\n        else if (mode === 'url') {\n            if (!headers['content-type']) {\n                headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n            }\n            if (Object.keys(body).length) {\n                return new URLSearchParams(body)\n                    .toString()\n                    .replace(/\\*/g, '%2A'); // URLSearchParams doesnt encode '*', but Twitter wants it encoded.\n            }\n            return '';\n        }\n        else if (mode === 'raw') {\n            throw new Error('You can only use raw body mode with Buffers. To give a string, use Buffer.from(str).');\n        }\n        else {\n            const form = new form_data_helper_1.FormDataHelper();\n            for (const parameter in body) {\n                form.append(parameter, body[parameter]);\n            }\n            if (!headers['content-type']) {\n                const formHeaders = form.getHeaders();\n                headers['content-type'] = formHeaders['content-type'];\n            }\n            return form.getBuffer();\n        }\n    }\n    static setBodyLengthHeader(options, body) {\n        var _a;\n        options.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : {};\n        if (typeof body === 'string') {\n            options.headers['content-length'] = Buffer.byteLength(body);\n        }\n        else {\n            options.headers['content-length'] = body.length;\n        }\n    }\n    static isOAuthSerializable(item) {\n        return !(item instanceof Buffer);\n    }\n    static mergeQueryAndBodyForOAuth(query, body) {\n        const parameters = {};\n        for (const prop in query) {\n            parameters[prop] = query[prop];\n        }\n        if (this.isOAuthSerializable(body)) {\n            for (const prop in body) {\n                const bodyProp = body[prop];\n                if (this.isOAuthSerializable(bodyProp)) {\n                    parameters[prop] = typeof bodyProp === 'object' && bodyProp !== null && 'toString' in bodyProp\n                        ? bodyProp.toString()\n                        : bodyProp;\n                }\n            }\n        }\n        return parameters;\n    }\n    static moveUrlQueryParamsIntoObject(url, query) {\n        for (const [param, value] of url.searchParams) {\n            query[param] = value;\n        }\n        // Remove the query string\n        url.search = '';\n        return url;\n    }\n    /**\n     * Replace URL parameters available in pathname, like `:id`, with data given in `parameters`:\n     * `https://twitter.com/:id.json` + `{ id: '20' }` => `https://twitter.com/20.json`\n     */\n    static applyRequestParametersToUrl(url, parameters) {\n        url.pathname = url.pathname.replace(/:([A-Z_-]+)/ig, (fullMatch, paramName) => {\n            if (parameters[paramName] !== undefined) {\n                return String(parameters[paramName]);\n            }\n            return fullMatch;\n        });\n        return url;\n    }\n}\nexports.RequestParamHelpers = RequestParamHelpers;\nRequestParamHelpers.JSON_1_1_ENDPOINTS = new Set([\n    'direct_messages/events/new.json',\n    'direct_messages/welcome_messages/new.json',\n    'direct_messages/welcome_messages/rules/new.json',\n    'media/metadata/create.json',\n    'collections/entries/curate.json',\n]);\nexports.default = RequestParamHelpers;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2Helper = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nclass OAuth2Helper {\n    static getCodeVerifier() {\n        return this.generateRandomString(128);\n    }\n    static getCodeChallengeFromVerifier(verifier) {\n        return this.escapeBase64Url(crypto\n            .createHash('sha256')\n            .update(verifier)\n            .digest('base64'));\n    }\n    static getAuthHeader(clientId, clientSecret) {\n        const key = encodeURIComponent(clientId) + ':' + encodeURIComponent(clientSecret);\n        return Buffer.from(key).toString('base64');\n    }\n    static generateRandomString(length) {\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        for (let i = 0; i < length; i++) {\n            text += possible[Math.floor(Math.random() * possible.length)];\n        }\n        return text;\n    }\n    static escapeBase64Url(string) {\n        return string.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n}\nexports.OAuth2Helper = OAuth2Helper;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientRequestMaker = void 0;\nconst types_1 = require(\"../types\");\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nconst helpers_1 = require(\"../plugins/helpers\");\nconst helpers_2 = require(\"../helpers\");\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\nconst request_handler_helper_1 = __importDefault(require(\"./request-handler.helper\"));\nconst request_param_helper_1 = __importDefault(require(\"./request-param.helper\"));\nconst oauth2_helper_1 = require(\"./oauth2.helper\");\nclass ClientRequestMaker {\n    constructor(settings) {\n        this.rateLimits = {};\n        this.clientSettings = {};\n        if (settings) {\n            this.clientSettings = settings;\n        }\n    }\n    /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */\n    getRateLimits() {\n        return this.rateLimits;\n    }\n    saveRateLimit(originalUrl, rateLimit) {\n        this.rateLimits[originalUrl] = rateLimit;\n    }\n    /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */\n    async send(requestParams) {\n        var _a, _b, _c, _d, _e;\n        // Pre-request config hooks\n        if ((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length) {\n            const possibleResponse = await this.applyPreRequestConfigHooks(requestParams);\n            if (possibleResponse) {\n                return possibleResponse;\n            }\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            timeout: requestParams.timeout,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        // Pre-request hooks\n        if ((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length) {\n            await this.applyPreRequestHooks(requestParams, args, options);\n        }\n        let request = new request_handler_helper_1.default({\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            requestEventDebugHandler: requestParams.requestEventDebugHandler,\n            compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,\n            forceParseMode: requestParams.forceParseMode,\n        })\n            .makeRequest();\n        if ((0, helpers_1.hasRequestErrorPlugins)(this)) {\n            request = this.applyResponseErrorHooks(requestParams, args, options, request);\n        }\n        const response = await request;\n        // Post-request hooks\n        if ((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length) {\n            const responseOverride = await this.applyPostRequestHooks(requestParams, args, options, response);\n            if (responseOverride) {\n                return responseOverride.value;\n            }\n        }\n        return response;\n    }\n    sendStream(requestParams) {\n        var _a, _b;\n        // Pre-request hooks\n        if (this.clientSettings.plugins) {\n            this.applyPreStreamRequestConfigHooks(requestParams);\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        const enableAutoConnect = requestParams.autoConnect !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        const requestData = {\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            payloadIsError: requestParams.payloadIsError,\n            compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true,\n        };\n        const stream = new TweetStream_1.default(requestData);\n        if (!enableAutoConnect) {\n            return stream;\n        }\n        return stream.connect();\n    }\n    /* Token helpers */\n    initializeToken(token) {\n        if (typeof token === 'string') {\n            this.bearerToken = token;\n        }\n        else if (typeof token === 'object' && 'appKey' in token) {\n            this.consumerToken = token.appKey;\n            this.consumerSecret = token.appSecret;\n            if (token.accessToken && token.accessSecret) {\n                this.accessToken = token.accessToken;\n                this.accessSecret = token.accessSecret;\n            }\n            this._oauth = this.buildOAuth();\n        }\n        else if (typeof token === 'object' && 'username' in token) {\n            const key = encodeURIComponent(token.username) + ':' + encodeURIComponent(token.password);\n            this.basicToken = Buffer.from(key).toString('base64');\n        }\n        else if (typeof token === 'object' && 'clientId' in token) {\n            this.clientId = token.clientId;\n            this.clientSecret = token.clientSecret;\n        }\n    }\n    getActiveTokens() {\n        if (this.bearerToken) {\n            return {\n                type: 'oauth2',\n                bearerToken: this.bearerToken,\n            };\n        }\n        else if (this.basicToken) {\n            return {\n                type: 'basic',\n                token: this.basicToken,\n            };\n        }\n        else if (this.consumerSecret && this._oauth) {\n            return {\n                type: 'oauth-1.0a',\n                appKey: this.consumerToken,\n                appSecret: this.consumerSecret,\n                accessToken: this.accessToken,\n                accessSecret: this.accessSecret,\n            };\n        }\n        else if (this.clientId) {\n            return {\n                type: 'oauth2-user',\n                clientId: this.clientId,\n            };\n        }\n        return { type: 'none' };\n    }\n    buildOAuth() {\n        if (!this.consumerSecret || !this.consumerToken)\n            throw new Error('Invalid consumer tokens');\n        return new oauth1_helper_1.default({\n            consumerKeys: { key: this.consumerToken, secret: this.consumerSecret },\n        });\n    }\n    getOAuthAccessTokens() {\n        if (!this.accessSecret || !this.accessToken)\n            return;\n        return {\n            key: this.accessToken,\n            secret: this.accessSecret,\n        };\n    }\n    /* Plugin helpers */\n    getPlugins() {\n        var _a;\n        return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];\n    }\n    hasPlugins() {\n        var _a;\n        return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);\n    }\n    async applyPluginMethod(method, args) {\n        var _a;\n        let returnValue;\n        for (const plugin of this.getPlugins()) {\n            const value = await ((_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args));\n            if (value && value instanceof types_1.TwitterApiPluginResponseOverride) {\n                returnValue = value;\n            }\n        }\n        return returnValue;\n    }\n    /* Request helpers */\n    writeAuthHeaders({ headers, bodyInSignature, url, method, query, body }) {\n        headers = { ...headers };\n        if (this.bearerToken) {\n            headers.Authorization = 'Bearer ' + this.bearerToken;\n        }\n        else if (this.basicToken) {\n            // Basic auth, to request a bearer token\n            headers.Authorization = 'Basic ' + this.basicToken;\n        }\n        else if (this.clientId && this.clientSecret) {\n            // Basic auth with clientId + clientSecret\n            headers.Authorization = 'Basic ' + oauth2_helper_1.OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);\n        }\n        else if (this.consumerSecret && this._oauth) {\n            // Merge query and body\n            const data = bodyInSignature ? request_param_helper_1.default.mergeQueryAndBodyForOAuth(query, body) : query;\n            const auth = this._oauth.authorize({\n                url: url.toString(),\n                method,\n                data,\n            }, this.getOAuthAccessTokens());\n            headers = { ...headers, ...this._oauth.toHeader(auth) };\n        }\n        return headers;\n    }\n    getUrlObjectFromUrlString(url) {\n        // Add protocol to URL if needed\n        if (!url.startsWith('http')) {\n            url = 'https://' + url;\n        }\n        // Convert URL to object that will receive all URL modifications\n        return new URL(url);\n    }\n    getHttpRequestArgs({ url: stringUrl, method, query: rawQuery = {}, body: rawBody = {}, headers, forceBodyMode, enableAuth, params, }) {\n        let body = undefined;\n        method = method.toUpperCase();\n        headers = headers !== null && headers !== void 0 ? headers : {};\n        // Add user agent header (Twitter recommends it)\n        if (!headers['x-user-agent']) {\n            headers['x-user-agent'] = 'Node.twitter-api-v2';\n        }\n        const url = this.getUrlObjectFromUrlString(stringUrl);\n        // URL without query string to save as endpoint name\n        const rawUrl = url.origin + url.pathname;\n        // Apply URL parameters\n        if (params) {\n            request_param_helper_1.default.applyRequestParametersToUrl(url, params);\n        }\n        // Build a URL without anything in QS, and QSP in query\n        const query = request_param_helper_1.default.formatQueryToString(rawQuery);\n        request_param_helper_1.default.moveUrlQueryParamsIntoObject(url, query);\n        // Delete undefined parameters\n        if (!(rawBody instanceof Buffer)) {\n            (0, helpers_2.trimUndefinedProperties)(rawBody);\n        }\n        // OAuth signature should not include parameters when using multipart.\n        const bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : request_param_helper_1.default.autoDetectBodyType(url);\n        // If undefined or true, enable auth by headers\n        if (enableAuth !== false) {\n            // OAuth needs body signature only if body is URL encoded.\n            const bodyInSignature = ClientRequestMaker.BODY_METHODS.has(method) && bodyType === 'url';\n            headers = this.writeAuthHeaders({ headers, bodyInSignature, method, query, url, body: rawBody });\n        }\n        if (ClientRequestMaker.BODY_METHODS.has(method)) {\n            body = request_param_helper_1.default.constructBodyParams(rawBody, headers, bodyType) || undefined;\n        }\n        request_param_helper_1.default.addQueryParamsToUrl(url, query);\n        return {\n            rawUrl,\n            url,\n            method,\n            headers,\n            body,\n        };\n    }\n    /* Plugin helpers */\n    async applyPreRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            const result = await ((_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            }));\n            if (result) {\n                return result;\n            }\n        }\n    }\n    applyPreStreamRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            });\n        }\n    }\n    async applyPreRequestHooks(requestParams, computedParams, requestOptions) {\n        await this.applyPluginMethod('onBeforeRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n        });\n    }\n    async applyPostRequestHooks(requestParams, computedParams, requestOptions, response) {\n        return await this.applyPluginMethod('onAfterRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            response,\n        });\n    }\n    applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {\n        return promise.catch(helpers_1.applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));\n    }\n}\nexports.ClientRequestMaker = ClientRequestMaker;\nClientRequestMaker.BODY_METHODS = new Set(['POST', 'PUT', 'PATCH']);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst request_maker_mixin_1 = require(\"./client-mixins/request-maker.mixin\");\nconst helpers_1 = require(\"./helpers\");\nconst globals_1 = require(\"./globals\");\n/**\n * Base class for Twitter instances\n */\nclass TwitterApiBase {\n    constructor(token, settings = {}) {\n        this._currentUser = null;\n        this._currentUserV2 = null;\n        if (token instanceof TwitterApiBase) {\n            this._requestMaker = token._requestMaker;\n        }\n        else {\n            this._requestMaker = new request_maker_mixin_1.ClientRequestMaker(settings);\n            this._requestMaker.initializeToken(token);\n        }\n    }\n    /* Prefix/Token handling */\n    setPrefix(prefix) {\n        this._prefix = prefix;\n    }\n    cloneWithPrefix(prefix) {\n        const clone = this.constructor(this);\n        clone.setPrefix(prefix);\n        return clone;\n    }\n    getActiveTokens() {\n        return this._requestMaker.getActiveTokens();\n    }\n    /* Rate limit cache / Plugins */\n    getPlugins() {\n        return this._requestMaker.getPlugins();\n    }\n    getPluginOfType(type) {\n        return this.getPlugins().find(plugin => plugin instanceof type);\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Tells if you hit the Twitter rate limit for {endpoint}.\n     * (local data only, this should not ask anything to Twitter)\n     */\n    hasHitRateLimit(endpoint) {\n        var _a;\n        if (this.isRateLimitStatusObsolete(endpoint)) {\n            return false;\n        }\n        return ((_a = this.getLastRateLimitStatus(endpoint)) === null || _a === void 0 ? void 0 : _a.remaining) === 0;\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Tells if you hit the returned Twitter rate limit for {endpoint} has expired.\n     * If client has no saved rate limit data for {endpoint}, this will gives you `true`.\n     */\n    isRateLimitStatusObsolete(endpoint) {\n        const rateLimit = this.getLastRateLimitStatus(endpoint);\n        if (rateLimit === undefined) {\n            return true;\n        }\n        // Timestamps are exprimed in seconds, JS works with ms\n        return (rateLimit.reset * 1000) < Date.now();\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Get the last obtained Twitter rate limit information for {endpoint}.\n     * (local data only, this should not ask anything to Twitter)\n     */\n    getLastRateLimitStatus(endpoint) {\n        const endpointWithPrefix = endpoint.match(/^https?:\\/\\//) ? endpoint : (this._prefix + endpoint);\n        return this._requestMaker.getRateLimits()[endpointWithPrefix];\n    }\n    /* Current user cache */\n    /** Get cached current user. */\n    getCurrentUserObject(forceFetch = false) {\n        if (!forceFetch && this._currentUser) {\n            if (this._currentUser.value) {\n                return Promise.resolve(this._currentUser.value);\n            }\n            return this._currentUser.promise;\n        }\n        this._currentUser = (0, helpers_1.sharedPromise)(() => this.get('account/verify_credentials.json', { tweet_mode: 'extended' }, { prefix: globals_1.API_V1_1_PREFIX }));\n        return this._currentUser.promise;\n    }\n    /**\n     * Get cached current user from v2 API.\n     * This can only be the slimest available `UserV2` object, with only `id`, `name` and `username` properties defined.\n     *\n     * To get a customized `UserV2Result`, use `.v2.me()`\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    getCurrentUserV2Object(forceFetch = false) {\n        if (!forceFetch && this._currentUserV2) {\n            if (this._currentUserV2.value) {\n                return Promise.resolve(this._currentUserV2.value);\n            }\n            return this._currentUserV2.promise;\n        }\n        this._currentUserV2 = (0, helpers_1.sharedPromise)(() => this.get('users/me', undefined, { prefix: globals_1.API_V2_PREFIX }));\n        return this._currentUserV2.promise;\n    }\n    async get(url, query = {}, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'GET',\n            query,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async delete(url, query = {}, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'DELETE',\n            query,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async post(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'POST',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async put(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'PUT',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async patch(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'PATCH',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    getStream(url, query, { prefix = this._prefix, ...rest } = {}) {\n        return this._requestMaker.sendStream({\n            url: prefix ? prefix + url : url,\n            method: 'GET',\n            query,\n            ...rest,\n        });\n    }\n    postStream(url, body, { prefix = this._prefix, ...rest } = {}) {\n        return this._requestMaker.sendStream({\n            url: prefix ? prefix + url : url,\n            method: 'POST',\n            body,\n            ...rest,\n        });\n    }\n}\nexports.default = TwitterApiBase;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_base_1 = __importDefault(require(\"./client.base\"));\n/**\n * Base subclient for every v1 and v2 client.\n */\nclass TwitterApiSubClient extends client_base_1.default {\n    constructor(instance) {\n        if (!(instance instanceof client_base_1.default)) {\n            throw new Error('You must instance SubTwitterApi instance from existing TwitterApi instance.');\n        }\n        super(instance);\n    }\n}\nexports.default = TwitterApiSubClient;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserFavoritesV1Paginator = exports.ListTimelineV1Paginator = exports.UserTimelineV1Paginator = exports.MentionTimelineV1Paginator = exports.HomeTimelineV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass TweetTimelineV1Paginator extends TwitterPaginator_1.default {\n    constructor() {\n        super(...arguments);\n        this.hasFinishedFetch = false;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n            // HINT: This is an approximation, as \"end\" of pagination cannot be safely determined without cursors.\n            this.hasFinishedFetch = result.length === 0;\n        }\n    }\n    getNextQueryParams(maxResults) {\n        const latestId = BigInt(this._realData[this._realData.length - 1].id_str);\n        return {\n            ...this.injectQueryParams(maxResults),\n            max_id: (latestId - BigInt(1)).toString(),\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        return this._realData;\n    }\n    get done() {\n        return super.done || this.hasFinishedFetch;\n    }\n}\n// Timelines\n// Home\nclass HomeTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/home_timeline.json';\n    }\n}\nexports.HomeTimelineV1Paginator = HomeTimelineV1Paginator;\n// Mention\nclass MentionTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/mentions_timeline.json';\n    }\n}\nexports.MentionTimelineV1Paginator = MentionTimelineV1Paginator;\n// User\nclass UserTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/user_timeline.json';\n    }\n}\nexports.UserTimelineV1Paginator = UserTimelineV1Paginator;\n// Lists\nclass ListTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/statuses.json';\n    }\n}\nexports.ListTimelineV1Paginator = ListTimelineV1Paginator;\n// Favorites\nclass UserFavoritesV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'favorites/list.json';\n    }\n}\nexports.UserFavoritesV1Paginator = UserFavoritesV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MuteUserIdsV1Paginator = exports.MuteUserListV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass MuteUserListV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'mutes/users/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nexports.MuteUserListV1Paginator = MuteUserListV1Paginator;\nclass MuteUserIdsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'mutes/users/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.MuteUserIdsV1Paginator = MuteUserIdsV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserFollowerIdsV1Paginator = exports.UserFollowerListV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass UserFollowerListV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'followers/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nexports.UserFollowerListV1Paginator = UserFollowerListV1Paginator;\nclass UserFollowerIdsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'followers/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.UserFollowerIdsV1Paginator = UserFollowerIdsV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserFollowersIdsV1Paginator = exports.UserFriendListV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass UserFriendListV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friends/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nexports.UserFriendListV1Paginator = UserFriendListV1Paginator;\nclass UserFollowersIdsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friends/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.UserFollowersIdsV1Paginator = UserFollowersIdsV1Paginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FriendshipsOutgoingV1Paginator = exports.FriendshipsIncomingV1Paginator = exports.UserSearchV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\nconst paginator_v1_1 = require(\"./paginator.v1\");\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass UserSearchV1Paginator extends TwitterPaginator_1.default {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/search.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n        }\n    }\n    getNextQueryParams(maxResults) {\n        var _a;\n        const previousPage = Number((_a = this._queryParams.page) !== null && _a !== void 0 ? _a : '1');\n        return {\n            ...this._queryParams,\n            page: previousPage + 1,\n            ...maxResults ? { count: maxResults } : {},\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData;\n    }\n}\nexports.UserSearchV1Paginator = UserSearchV1Paginator;\nclass FriendshipsIncomingV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/incoming.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.FriendshipsIncomingV1Paginator = FriendshipsIncomingV1Paginator;\nclass FriendshipsOutgoingV1Paginator extends FriendshipsIncomingV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/outgoing.json';\n    }\n}\nexports.FriendshipsOutgoingV1Paginator = FriendshipsOutgoingV1Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListSubscribersV1Paginator = exports.ListMembersV1Paginator = exports.ListSubscriptionsV1Paginator = exports.ListOwnershipsV1Paginator = exports.ListMembershipsV1Paginator = void 0;\nconst paginator_v1_1 = require(\"./paginator.v1\");\nclass ListListsV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.lists.push(...result.lists);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.lists.length;\n    }\n    getItemArray() {\n        return this.lists;\n    }\n    /**\n     * Lists returned by paginator.\n     */\n    get lists() {\n        return this._realData.lists;\n    }\n}\nclass ListMembershipsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/memberships.json';\n    }\n}\nexports.ListMembershipsV1Paginator = ListMembershipsV1Paginator;\nclass ListOwnershipsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/ownerships.json';\n    }\n}\nexports.ListOwnershipsV1Paginator = ListOwnershipsV1Paginator;\nclass ListSubscriptionsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/subscriptions.json';\n    }\n}\nexports.ListSubscriptionsV1Paginator = ListSubscriptionsV1Paginator;\nclass ListUsersV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nclass ListMembersV1Paginator extends ListUsersV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/members.json';\n    }\n}\nexports.ListMembersV1Paginator = ListMembersV1Paginator;\nclass ListSubscribersV1Paginator extends ListUsersV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/subscribers.json';\n    }\n}\nexports.ListSubscribersV1Paginator = ListSubscribersV1Paginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_subclient_1 = __importDefault(require(\"../client.subclient\"));\nconst globals_1 = require(\"../globals\");\nconst helpers_1 = require(\"../helpers\");\nconst client_v1_1 = __importDefault(require(\"../v1/client.v1\"));\nconst tweet_paginator_v1_1 = require(\"../paginators/tweet.paginator.v1\");\nconst mutes_paginator_v1_1 = require(\"../paginators/mutes.paginator.v1\");\nconst followers_paginator_v1_1 = require(\"../paginators/followers.paginator.v1\");\nconst friends_paginator_v1_1 = require(\"../paginators/friends.paginator.v1\");\nconst user_paginator_v1_1 = require(\"../paginators/user.paginator.v1\");\nconst list_paginator_v1_1 = require(\"../paginators/list.paginator.v1\");\n/**\n * Base Twitter v1 client with only read right.\n */\nclass TwitterApiv1ReadOnly extends client_subclient_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V1_1_PREFIX;\n    }\n    /* Tweets */\n    /**\n     * Returns a single Tweet, specified by the id parameter. The Tweet's author will also be embedded within the Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-statuses-show-id\n     */\n    singleTweet(tweetId, options = {}) {\n        return this.get('statuses/show.json', { tweet_mode: 'extended', id: tweetId, ...options });\n    }\n    tweets(ids, options = {}) {\n        return this.post('statuses/lookup.json', { tweet_mode: 'extended', id: ids, ...options });\n    }\n    /**\n     * Returns a single Tweet, specified by either a Tweet web URL or the Tweet ID, in an oEmbed-compatible format.\n     * The returned HTML snippet will be automatically recognized as an Embedded Tweet when Twitter's widget JavaScript is included on the page.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-statuses-oembed\n     */\n    oembedTweet(tweetId, options = {}) {\n        return this.get('oembed', {\n            url: `https://twitter.com/i/statuses/${tweetId}`,\n            ...options,\n        }, { prefix: 'https://publish.twitter.com/' });\n    }\n    /* Tweets timelines */\n    /**\n     * Returns a collection of the most recent Tweets and Retweets posted by the authenticating user and the users they follow.\n     * The home timeline is central to how most users interact with the Twitter service.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-home_timeline\n     */\n    async homeTimeline(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('statuses/home_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.HomeTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the 20 most recent mentions (Tweets containing a users's @screen_name) for the authenticating user.\n     * The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-mentions_timeline\n     */\n    async mentionTimeline(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('statuses/mentions_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.MentionTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of the most recent Tweets posted by the user indicated by the user_id parameters.\n     * User timelines belonging to protected users may only be requested when the authenticated user either \"owns\" the timeline or is an approved follower of the owner.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-user_timeline\n     */\n    async userTimeline(userId, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            user_id: userId,\n            ...options,\n        };\n        const initialRq = await this.get('statuses/user_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of the most recent Tweets posted by the user indicated by the screen_name parameters.\n     * User timelines belonging to protected users may only be requested when the authenticated user either \"owns\" the timeline or is an approved follower of the owner.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-user_timeline\n     */\n    async userTimelineByUsername(username, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            screen_name: username,\n            ...options,\n        };\n        const initialRq = await this.get('statuses/user_timeline.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the most recent Tweets liked by the authenticating or specified user, 20 tweets by default.\n     * Note: favorites are now known as likes.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-favorites-list\n     */\n    async favoriteTimeline(userId, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            user_id: userId,\n            ...options,\n        };\n        const initialRq = await this.get('favorites/list.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserFavoritesV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the most recent Tweets liked by the authenticating or specified user, 20 tweets by default.\n     * Note: favorites are now known as likes.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-favorites-list\n     */\n    async favoriteTimelineByUsername(username, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            screen_name: username,\n            ...options,\n        };\n        const initialRq = await this.get('favorites/list.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.UserFavoritesV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Users */\n    /**\n     * Returns a variety of information about the user specified by the required user_id or screen_name parameter.\n     * The author's most recent Tweet will be returned inline when possible.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-show\n     */\n    user(user) {\n        return this.get('users/show.json', { tweet_mode: 'extended', ...user });\n    }\n    /**\n     * Returns fully-hydrated user objects for up to 100 users per request,\n     * as specified by comma-separated values passed to the user_id and/or screen_name parameters.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup\n     */\n    users(query) {\n        return this.get('users/lookup.json', { tweet_mode: 'extended', ...query });\n    }\n    /**\n     * Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful;\n     * returns a 401 status code and an error message if not.\n     * Use this method to test if supplied user credentials are valid.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-verify_credentials\n     */\n    verifyCredentials(options = {}) {\n        return this.get('account/verify_credentials.json', options);\n    }\n    /**\n     * Returns an array of user objects the authenticating user has muted.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-list\n     */\n    async listMutedUsers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('mutes/users/list.json', queryParams, { fullResponse: true });\n        return new mutes_paginator_v1_1.MuteUserListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids the authenticating user has muted.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-ids\n     */\n    async listMutedUserIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('mutes/users/ids.json', queryParams, { fullResponse: true });\n        return new mutes_paginator_v1_1.MuteUserIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of user objects of friends of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-list\n     */\n    async userFriendList(options = {}) {\n        const queryParams = {\n            ...options,\n        };\n        const initialRq = await this.get('friends/list.json', queryParams, { fullResponse: true });\n        return new friends_paginator_v1_1.UserFriendListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of user objects of followers of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-list\n     */\n    async userFollowerList(options = {}) {\n        const queryParams = {\n            ...options,\n        };\n        const initialRq = await this.get('followers/list.json', queryParams, { fullResponse: true });\n        return new followers_paginator_v1_1.UserFollowerListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids of followers of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-ids\n     */\n    async userFollowerIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('followers/ids.json', queryParams, { fullResponse: true });\n        return new followers_paginator_v1_1.UserFollowerIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids of friends of the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-ids\n     */\n    async userFollowingIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friends/ids.json', queryParams, { fullResponse: true });\n        return new friends_paginator_v1_1.UserFollowersIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Provides a simple, relevance-based search interface to public user accounts on Twitter.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-search\n     */\n    async searchUsers(query, options = {}) {\n        const queryParams = {\n            q: query,\n            tweet_mode: 'extended',\n            page: 1,\n            ...options,\n        };\n        const initialRq = await this.get('users/search.json', queryParams, { fullResponse: true });\n        return new user_paginator_v1_1.UserSearchV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Friendship API */\n    /**\n     * Returns detailed information about the relationship between two arbitrary users.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-show\n     */\n    friendship(sources) {\n        return this.get('friendships/show.json', sources);\n    }\n    /**\n     * Returns the relationships of the authenticating user to the comma-separated list of up to 100 screen_names or user_ids provided.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-lookup\n     */\n    friendships(friendships) {\n        return this.get('friendships/lookup.json', friendships);\n    }\n    /**\n     * Returns a collection of user_ids that the currently authenticated user does not want to receive retweets from.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-no_retweets-ids\n     */\n    friendshipsNoRetweets() {\n        return this.get('friendships/no_retweets/ids.json', { stringify_ids: true });\n    }\n    /**\n     * Returns a collection of numeric IDs for every user who has a pending request to follow the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-incoming\n     */\n    async friendshipsIncoming(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friendships/incoming.json', queryParams, { fullResponse: true });\n        return new user_paginator_v1_1.FriendshipsIncomingV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of numeric IDs for every protected user for whom the authenticating user has a pending follow request.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-outgoing\n     */\n    async friendshipsOutgoing(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friendships/outgoing.json', queryParams, { fullResponse: true });\n        return new user_paginator_v1_1.FriendshipsOutgoingV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Account/user API */\n    /**\n     * Get current account settings for authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-settings\n     */\n    accountSettings() {\n        return this.get('account/settings.json');\n    }\n    /**\n     * Returns a map of the available size variations of the specified user's profile banner.\n     * If the user has not uploaded a profile banner, a HTTP 404 will be served instead.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-users-profile_banner\n     */\n    userProfileBannerSizes(params) {\n        return this.get('users/profile_banner.json', params);\n    }\n    /* Lists */\n    /**\n     * Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-show\n     */\n    list(options) {\n        return this.get('lists/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns all lists the authenticating or specified user subscribes to, including their own.\n     * If no user is given, the authenticating user is used.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-list\n     */\n    lists(options = {}) {\n        return this.get('lists/list.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-members\n     */\n    async listMembers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/members.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListMembersV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Check if the specified user is a member of the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-members-show\n     */\n    listGetMember(options) {\n        return this.get('lists/members/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns the lists the specified user has been added to.\n     * If user_id or screen_name are not provided, the memberships for the authenticating user are returned.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-memberships\n     */\n    async listMemberships(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/memberships.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListMembershipsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-ownerships\n     */\n    async listOwnerships(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/ownerships.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListOwnershipsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a timeline of tweets authored by members of the specified list. Retweets are included by default.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-statuses\n     */\n    async listStatuses(options) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/statuses.json', queryParams, { fullResponse: true });\n        return new tweet_paginator_v1_1.ListTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the subscribers of the specified list. Private list subscribers will only be shown if the authenticated user owns the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers\n     */\n    async listSubscribers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/subscribers.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListSubscribersV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Check if the specified user is a subscriber of the specified list. Returns the user if they are a subscriber.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers-show\n     */\n    listGetSubscriber(options) {\n        return this.get('lists/subscribers/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Obtain a collection of the lists the specified user is subscribed to, 20 lists per page by default.\n     * Does not include the user's own lists.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscriptions\n     */\n    async listSubscriptions(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/subscriptions.json', queryParams, { fullResponse: true });\n        return new list_paginator_v1_1.ListSubscriptionsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Media upload API */\n    /**\n     * The STATUS command (this method) is used to periodically poll for updates of media processing operation.\n     * After the STATUS command response returns succeeded, you can move on to the next step which is usually create Tweet with media_id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/get-media-upload-status\n     */\n    mediaInfo(mediaId) {\n        return this.get('media/upload.json', {\n            command: 'STATUS',\n            media_id: mediaId,\n        }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n    }\n    filterStream({ autoConnect, ...params } = {}) {\n        const parameters = {};\n        for (const [key, value] of Object.entries(params)) {\n            if (key === 'follow' || key === 'track') {\n                parameters[key] = value.toString();\n            }\n            else if (key === 'locations') {\n                const locations = value;\n                parameters.locations = (0, helpers_1.arrayWrap)(locations).map(loc => `${loc.lng},${loc.lat}`).join(',');\n            }\n            else {\n                parameters[key] = value;\n            }\n        }\n        const streamClient = this.stream;\n        return streamClient.postStream('statuses/filter.json', parameters, { autoConnect });\n    }\n    sampleStream({ autoConnect, ...params } = {}) {\n        const streamClient = this.stream;\n        return streamClient.getStream('statuses/sample.json', params, { autoConnect });\n    }\n    /**\n     * Create a client that is prefixed with `https//stream.twitter.com` instead of classic API URL.\n     */\n    get stream() {\n        const copiedClient = new client_v1_1.default(this);\n        copiedClient.setPrefix(globals_1.API_V1_1_STREAM_PREFIX);\n        return copiedClient;\n    }\n    /* Trends API */\n    /**\n     * Returns the top 50 trending topics for a specific id, if trending information is available for it.\n     * Note: The id parameter for this endpoint is the \"where on earth identifier\" or WOEID, which is a legacy identifier created by Yahoo and has been deprecated.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/trends/trends-for-location/api-reference/get-trends-place\n     */\n    trendsByPlace(woeId, options = {}) {\n        return this.get('trends/place.json', { id: woeId, ...options });\n    }\n    /**\n     * Returns the locations that Twitter has trending topic information for.\n     * The response is an array of \"locations\" that encode the location's WOEID\n     * and some other human-readable information such as a canonical name and country the location belongs in.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-with-trending-topics/api-reference/get-trends-available\n     */\n    trendsAvailable() {\n        return this.get('trends/available.json');\n    }\n    /**\n     * Returns the locations that Twitter has trending topic information for, closest to a specified location.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-with-trending-topics/api-reference/get-trends-closest\n     */\n    trendsClosest(lat, long) {\n        return this.get('trends/closest.json', { lat, long });\n    }\n    /* Geo API */\n    /**\n     * Returns all the information about a known place.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/geo/place-information/api-reference/get-geo-id-place_id\n     */\n    geoPlace(placeId) {\n        return this.get('geo/id/:place_id.json', undefined, { params: { place_id: placeId } });\n    }\n    /**\n     * Search for places that can be attached to a Tweet via POST statuses/update.\n     * This request will return a list of all the valid places that can be used as the place_id when updating a status.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-location/api-reference/get-geo-search\n     */\n    geoSearch(options) {\n        return this.get('geo/search.json', options);\n    }\n    /**\n     * Given a latitude and a longitude, searches for up to 20 places that can be used as a place_id when updating a status.\n     * This request is an informative call and will deliver generalized results about geography.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-location/api-reference/get-geo-reverse_geocode\n     */\n    geoReverseGeoCode(options) {\n        return this.get('geo/reverse_geocode.json', options);\n    }\n    /* Developer utilities */\n    /**\n     * Returns the current rate limits for methods belonging to the specified resource families.\n     * Each API resource belongs to a \"resource family\" which is indicated in its method documentation.\n     * The method's resource family can be determined from the first component of the path after the resource version.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities/rate-limit-status/api-reference/get-application-rate_limit_status\n     */\n    rateLimitStatuses(...resources) {\n        return this.get('application/rate_limit_status.json', { resources });\n    }\n    /**\n     * Returns the list of languages supported by Twitter along with the language code supported by Twitter.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities/supported-languages/api-reference/get-help-languages\n     */\n    supportedLanguages() {\n        return this.get('help/languages.json');\n    }\n}\nexports.default = TwitterApiv1ReadOnly;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readNextPartOf = exports.sleepSecs = exports.getMediaCategoryByMime = exports.getMimeType = exports.getFileSizeFromFileHandle = exports.getFileHandle = exports.readFileIntoBuffer = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../types\");\nasync function readFileIntoBuffer(file) {\n    const handle = await getFileHandle(file);\n    if (typeof handle === 'number') {\n        return new Promise((resolve, reject) => {\n            fs.readFile(handle, (err, data) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(data);\n            });\n        });\n    }\n    else if (handle instanceof Buffer) {\n        return handle;\n    }\n    else {\n        return handle.readFile();\n    }\n}\nexports.readFileIntoBuffer = readFileIntoBuffer;\nfunction getFileHandle(file) {\n    if (typeof file === 'string') {\n        return fs.promises.open(file, 'r');\n    }\n    else if (typeof file === 'number') {\n        return file;\n    }\n    else if (typeof file === 'object' && !(file instanceof Buffer)) {\n        return file;\n    }\n    else if (!(file instanceof Buffer)) {\n        throw new Error('Given file is not valid, please check its type.');\n    }\n    else {\n        return file;\n    }\n}\nexports.getFileHandle = getFileHandle;\nasync function getFileSizeFromFileHandle(fileHandle) {\n    // Get the file size\n    if (typeof fileHandle === 'number') {\n        const stats = await new Promise((resolve, reject) => {\n            fs.fstat(fileHandle, (err, stats) => {\n                if (err)\n                    reject(err);\n                resolve(stats);\n            });\n        });\n        return stats.size;\n    }\n    else if (fileHandle instanceof Buffer) {\n        return fileHandle.length;\n    }\n    else {\n        return (await fileHandle.stat()).size;\n    }\n}\nexports.getFileSizeFromFileHandle = getFileSizeFromFileHandle;\nfunction getMimeType(file, type, mimeType) {\n    if (typeof mimeType === 'string') {\n        return mimeType;\n    }\n    else if (typeof file === 'string' && !type) {\n        return getMimeByName(file);\n    }\n    else if (typeof type === 'string') {\n        return getMimeByType(type);\n    }\n    throw new Error('You must specify type if file is a file handle or Buffer.');\n}\nexports.getMimeType = getMimeType;\nfunction getMimeByName(name) {\n    if (name.endsWith('.jpeg') || name.endsWith('.jpg'))\n        return types_1.EUploadMimeType.Jpeg;\n    if (name.endsWith('.png'))\n        return types_1.EUploadMimeType.Png;\n    if (name.endsWith('.webp'))\n        return types_1.EUploadMimeType.Webp;\n    if (name.endsWith('.gif'))\n        return types_1.EUploadMimeType.Gif;\n    if (name.endsWith('.mpeg4') || name.endsWith('.mp4'))\n        return types_1.EUploadMimeType.Mp4;\n    if (name.endsWith('.mov') || name.endsWith('.mov'))\n        return types_1.EUploadMimeType.Mov;\n    if (name.endsWith('.srt'))\n        return types_1.EUploadMimeType.Srt;\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: 'options.mimeType is missing and filename couldn\\'t help to resolve MIME type, so it will fallback to image/jpeg',\n        resolution: 'If you except to give filenames without extensions, please specify explicitlty the MIME type using options.mimeType',\n    });\n    return types_1.EUploadMimeType.Jpeg;\n}\nfunction getMimeByType(type) {\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: 'you\\'re using options.type',\n        resolution: 'Remove options.type argument and migrate to options.mimeType which takes the real MIME type. ' +\n            'If you\\'re using type=longmp4, add options.longVideo alongside of mimeType=EUploadMimeType.Mp4',\n    });\n    if (type === 'gif')\n        return types_1.EUploadMimeType.Gif;\n    if (type === 'jpg')\n        return types_1.EUploadMimeType.Jpeg;\n    if (type === 'png')\n        return types_1.EUploadMimeType.Png;\n    if (type === 'webp')\n        return types_1.EUploadMimeType.Webp;\n    if (type === 'srt')\n        return types_1.EUploadMimeType.Srt;\n    if (type === 'mp4' || type === 'longmp4')\n        return types_1.EUploadMimeType.Mp4;\n    if (type === 'mov')\n        return types_1.EUploadMimeType.Mov;\n    return type;\n}\nfunction getMediaCategoryByMime(name, target) {\n    if (name === types_1.EUploadMimeType.Mp4 || name === types_1.EUploadMimeType.Mov)\n        return target === 'tweet' ? 'TweetVideo' : 'DmVideo';\n    if (name === types_1.EUploadMimeType.Gif)\n        return target === 'tweet' ? 'TweetGif' : 'DmGif';\n    if (name === types_1.EUploadMimeType.Srt)\n        return 'Subtitles';\n    else\n        return target === 'tweet' ? 'TweetImage' : 'DmImage';\n}\nexports.getMediaCategoryByMime = getMediaCategoryByMime;\nfunction sleepSecs(seconds) {\n    return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\nexports.sleepSecs = sleepSecs;\nasync function readNextPartOf(file, chunkLength, bufferOffset = 0, buffer) {\n    if (file instanceof Buffer) {\n        const rt = file.slice(bufferOffset, bufferOffset + chunkLength);\n        return [rt, rt.length];\n    }\n    if (!buffer) {\n        throw new Error('Well, we will need a buffer to store file content.');\n    }\n    let bytesRead;\n    if (typeof file === 'number') {\n        bytesRead = await new Promise((resolve, reject) => {\n            fs.read(file, buffer, 0, chunkLength, bufferOffset, (err, nread) => {\n                if (err)\n                    reject(err);\n                resolve(nread);\n            });\n        });\n    }\n    else {\n        const res = await file.read(buffer, 0, chunkLength, bufferOffset);\n        bytesRead = res.bytesRead;\n    }\n    return [buffer, bytesRead];\n}\nexports.readNextPartOf = readNextPartOf;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = __importStar(require(\"fs\"));\nconst globals_1 = require(\"../globals\");\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../types\");\nconst client_v1_read_1 = __importDefault(require(\"./client.v1.read\"));\nconst media_helpers_v1_1 = require(\"./media-helpers.v1\");\nconst UPLOAD_ENDPOINT = 'media/upload.json';\n/**\n * Base Twitter v1 client with read/write rights.\n */\nclass TwitterApiv1ReadWrite extends client_v1_read_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V1_1_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n    /* Tweet API */\n    /**\n     * Post a new tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    tweet(status, payload = {}) {\n        const queryParams = {\n            status,\n            tweet_mode: 'extended',\n            ...payload,\n        };\n        return this.post('statuses/update.json', queryParams);\n    }\n    /**\n     * Quote an existing tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    async quote(status, quotingStatusId, payload = {}) {\n        const url = 'https://twitter.com/i/statuses/' + quotingStatusId;\n        return this.tweet(status, { ...payload, attachment_url: url });\n    }\n    /**\n     * Post a series of tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    async tweetThread(tweets) {\n        const postedTweets = [];\n        for (const tweet of tweets) {\n            // Retrieve the last sent tweet\n            const lastTweet = postedTweets.length ? postedTweets[postedTweets.length - 1] : null;\n            // Build the tweet query params\n            const queryParams = { ...(typeof tweet === 'string' ? ({ status: tweet }) : tweet) };\n            // Reply to an existing tweet if needed\n            const inReplyToId = lastTweet ? lastTweet.id_str : queryParams.in_reply_to_status_id;\n            const status = queryParams.status;\n            if (inReplyToId) {\n                postedTweets.push(await this.reply(status, inReplyToId, queryParams));\n            }\n            else {\n                postedTweets.push(await this.tweet(status, queryParams));\n            }\n        }\n        return postedTweets;\n    }\n    /**\n     * Reply to an existing tweet. Shortcut to `.tweet` with tweaked parameters.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    reply(status, in_reply_to_status_id, payload = {}) {\n        return this.tweet(status, {\n            auto_populate_reply_metadata: true,\n            in_reply_to_status_id,\n            ...payload,\n        });\n    }\n    /**\n     * Delete an existing tweet belonging to you.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-destroy-id\n     */\n    deleteTweet(tweetId) {\n        return this.post('statuses/destroy/:id.json', { tweet_mode: 'extended' }, { params: { id: tweetId } });\n    }\n    /* User API */\n    /**\n     * Report the specified user as a spam account to Twitter.\n     * Additionally, optionally performs the equivalent of POST blocks/create on behalf of the authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/post-users-report_spam\n     */\n    reportUserAsSpam(options) {\n        return this.post('users/report_spam.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Turn on/off Retweets and device notifications from the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-update\n     */\n    updateFriendship(options) {\n        return this.post('friendships/update.json', options);\n    }\n    /**\n     * Follow the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-create\n     */\n    createFriendship(options) {\n        return this.post('friendships/create.json', options);\n    }\n    /**\n     * Unfollow the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-destroy\n     */\n    destroyFriendship(options) {\n        return this.post('friendships/destroy.json', options);\n    }\n    /* Account API */\n    /**\n     * Update current account settings for authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-settings\n     */\n    updateAccountSettings(options) {\n        return this.post('account/settings.json', options);\n    }\n    /**\n     * Sets some values that users are able to set under the \"Account\" tab of their settings page.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile\n     */\n    updateAccountProfile(options) {\n        return this.post('account/update_profile.json', options);\n    }\n    /**\n     * Uploads a profile banner on behalf of the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_banner\n     */\n    async updateAccountProfileBanner(file, options = {}) {\n        const queryParams = {\n            banner: await (0, media_helpers_v1_1.readFileIntoBuffer)(file),\n            ...options,\n        };\n        return this.post('account/update_profile_banner.json', queryParams, { forceBodyMode: 'form-data' });\n    }\n    /**\n     * Updates the authenticating user's profile image.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_image\n     */\n    async updateAccountProfileImage(file, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            image: await (0, media_helpers_v1_1.readFileIntoBuffer)(file),\n            ...options,\n        };\n        return this.post('account/update_profile_image.json', queryParams, { forceBodyMode: 'form-data' });\n    }\n    /**\n     * Removes the uploaded profile banner for the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-remove_profile_banner\n     */\n    removeAccountProfileBanner() {\n        return this.post('account/remove_profile_banner.json');\n    }\n    /* Lists */\n    /**\n     * Creates a new list for the authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-create\n     */\n    createList(options) {\n        return this.post('lists/create.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Updates the specified list. The authenticated user must own the list to be able to update it.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-update\n     */\n    updateList(options) {\n        return this.post('lists/update.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Deletes the specified list. The authenticated user must own the list to be able to destroy it.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-destroy\n     */\n    removeList(options) {\n        return this.post('lists/destroy.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.\n     * If you add a single `user_id` or `screen_name`, it will target `lists/members/create.json`, otherwise\n     * it will target `lists/members/create_all.json`.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-members-create_all\n     */\n    addListMembers(options) {\n        const hasMultiple = (options.user_id && (0, helpers_1.hasMultipleItems)(options.user_id)) || (options.screen_name && (0, helpers_1.hasMultipleItems)(options.screen_name));\n        const endpoint = hasMultiple ? 'lists/members/create_all.json' : 'lists/members/create.json';\n        return this.post(endpoint, options);\n    }\n    /**\n     * Removes multiple members to a list, by specifying a comma-separated list of member ids or screen names.\n     * If you add a single `user_id` or `screen_name`, it will target `lists/members/destroy.json`, otherwise\n     * it will target `lists/members/destroy_all.json`.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-members-destroy_all\n     */\n    removeListMembers(options) {\n        const hasMultiple = (options.user_id && (0, helpers_1.hasMultipleItems)(options.user_id)) || (options.screen_name && (0, helpers_1.hasMultipleItems)(options.screen_name));\n        const endpoint = hasMultiple ? 'lists/members/destroy_all.json' : 'lists/members/destroy.json';\n        return this.post(endpoint, options);\n    }\n    /**\n     * Subscribes the authenticated user to the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-create\n     */\n    subscribeToList(options) {\n        return this.post('lists/subscribers/create.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Unsubscribes the authenticated user of the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-destroy\n     */\n    unsubscribeOfList(options) {\n        return this.post('lists/subscribers/destroy.json', { tweet_mode: 'extended', ...options });\n    }\n    /* Media upload API */\n    /**\n     * This endpoint can be used to provide additional information about the uploaded media_id.\n     * This feature is currently only supported for images and GIFs.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-metadata-create\n     */\n    createMediaMetadata(mediaId, metadata) {\n        return this.post('media/metadata/create.json', { media_id: mediaId, ...metadata }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    /**\n     * Use this endpoint to associate uploaded subtitles to an uploaded video. You can associate subtitles to video before or after Tweeting.\n     * **To obtain subtitle media ID, you must upload each subtitle file separately using `.uploadMedia()` method.**\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-subtitles-create\n     */\n    createMediaSubtitles(mediaId, subtitles) {\n        return this.post('media/subtitles/create.json', { media_id: mediaId, media_category: 'TweetVideo', subtitle_info: { subtitles } }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    /**\n     * Use this endpoint to dissociate subtitles from a video and delete the subtitles. You can dissociate subtitles from a video before or after Tweeting.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-subtitles-delete\n     */\n    deleteMediaSubtitles(mediaId, ...languages) {\n        return this.post('media/subtitles/delete.json', {\n            media_id: mediaId,\n            media_category: 'TweetVideo',\n            subtitle_info: { subtitles: languages.map(lang => ({ language_code: lang })) },\n        }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    async uploadMedia(file, options = {}, returnFullMediaData = false) {\n        var _a;\n        const chunkLength = (_a = options.chunkLength) !== null && _a !== void 0 ? _a : (1024 * 1024);\n        const { fileHandle, mediaCategory, fileSize, mimeType } = await this.getUploadMediaRequirements(file, options);\n        // Get the file handle (if not buffer)\n        try {\n            // Finally! We can send INIT message.\n            const mediaData = await this.post(UPLOAD_ENDPOINT, {\n                command: 'INIT',\n                total_bytes: fileSize,\n                media_type: mimeType,\n                media_category: mediaCategory,\n                additional_owners: options.additionalOwners,\n                shared: options.shared ? true : undefined,\n            }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n            // Upload the media chunk by chunk\n            await this.mediaChunkedUpload(fileHandle, chunkLength, mediaData.media_id_string, options.maxConcurrentUploads);\n            // Finalize media\n            const fullMediaData = await this.post(UPLOAD_ENDPOINT, {\n                command: 'FINALIZE',\n                media_id: mediaData.media_id_string,\n            }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n            if (fullMediaData.processing_info && fullMediaData.processing_info.state !== 'succeeded') {\n                // Must wait if video is still computed\n                await this.awaitForMediaProcessingCompletion(fullMediaData);\n            }\n            // Video is ready, return media_id\n            if (returnFullMediaData) {\n                return fullMediaData;\n            }\n            else {\n                return fullMediaData.media_id_string;\n            }\n        }\n        finally {\n            // Close file if any\n            if (typeof file === 'number') {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                fs.close(file, () => { });\n            }\n            else if (typeof fileHandle === 'object' && !(fileHandle instanceof Buffer)) {\n                fileHandle.close();\n            }\n        }\n    }\n    async awaitForMediaProcessingCompletion(fullMediaData) {\n        var _a;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            fullMediaData = await this.mediaInfo(fullMediaData.media_id_string);\n            const { processing_info } = fullMediaData;\n            if (!processing_info || processing_info.state === 'succeeded') {\n                // Ok, completed!\n                return;\n            }\n            if ((_a = processing_info.error) === null || _a === void 0 ? void 0 : _a.code) {\n                const { name, message } = processing_info.error;\n                throw new Error(`Failed to process media: ${name} - ${message}.`);\n            }\n            if (processing_info.state === 'failed') {\n                // No error data\n                throw new Error('Failed to process the media.');\n            }\n            if (processing_info.check_after_secs) {\n                // Await for given seconds\n                await (0, media_helpers_v1_1.sleepSecs)(processing_info.check_after_secs);\n            }\n            else {\n                // No info; Await for 5 seconds\n                await (0, media_helpers_v1_1.sleepSecs)(5);\n            }\n        }\n    }\n    async getUploadMediaRequirements(file, { mimeType, type, target, longVideo } = {}) {\n        // Get the file handle (if not buffer)\n        let fileHandle;\n        try {\n            fileHandle = await (0, media_helpers_v1_1.getFileHandle)(file);\n            // Get the mimetype\n            const realMimeType = (0, media_helpers_v1_1.getMimeType)(file, type, mimeType);\n            // Get the media category\n            let mediaCategory;\n            // If explicit longmp4 OR explicit MIME type and not DM target\n            if (realMimeType === types_1.EUploadMimeType.Mp4 && ((!mimeType && !type && target !== 'dm') || longVideo)) {\n                mediaCategory = 'amplify_video';\n            }\n            else {\n                mediaCategory = (0, media_helpers_v1_1.getMediaCategoryByMime)(realMimeType, target !== null && target !== void 0 ? target : 'tweet');\n            }\n            return {\n                fileHandle,\n                mediaCategory,\n                fileSize: await (0, media_helpers_v1_1.getFileSizeFromFileHandle)(fileHandle),\n                mimeType: realMimeType,\n            };\n        }\n        catch (e) {\n            // Close file if any\n            if (typeof file === 'number') {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                fs.close(file, () => { });\n            }\n            else if (typeof fileHandle === 'object' && !(fileHandle instanceof Buffer)) {\n                fileHandle.close();\n            }\n            throw e;\n        }\n    }\n    async mediaChunkedUpload(fileHandle, chunkLength, mediaId, maxConcurrentUploads = 3) {\n        // Send chunk by chunk\n        let chunkIndex = 0;\n        if (maxConcurrentUploads < 1) {\n            throw new RangeError('Bad maxConcurrentUploads parameter.');\n        }\n        // Creating a buffer for doing file stuff (if we don't have one)\n        const buffer = fileHandle instanceof Buffer ? undefined : Buffer.alloc(chunkLength);\n        // Sliced/filled buffer returned for each part\n        let readBuffer;\n        // Needed to know when we should stop reading the file\n        let nread;\n        // Needed to use the buffer object (file handles always \"remembers\" file position)\n        let offset = 0;\n        [readBuffer, nread] = await (0, media_helpers_v1_1.readNextPartOf)(fileHandle, chunkLength, offset, buffer);\n        offset += nread;\n        // Handle max concurrent uploads\n        const currentUploads = new Set();\n        // Read buffer until file is completely read\n        while (nread) {\n            const mediaBufferPart = readBuffer.slice(0, nread);\n            // Sent part if part has something inside\n            if (mediaBufferPart.length) {\n                const request = this.post(UPLOAD_ENDPOINT, {\n                    command: 'APPEND',\n                    media_id: mediaId,\n                    segment_index: chunkIndex,\n                    media: mediaBufferPart,\n                }, { prefix: globals_1.API_V1_1_UPLOAD_PREFIX });\n                currentUploads.add(request);\n                request.then(() => {\n                    currentUploads.delete(request);\n                });\n                chunkIndex++;\n            }\n            if (currentUploads.size >= maxConcurrentUploads) {\n                // Await for first promise to be finished\n                await Promise.race(currentUploads);\n            }\n            [readBuffer, nread] = await (0, media_helpers_v1_1.readNextPartOf)(fileHandle, chunkLength, offset, buffer);\n            offset += nread;\n        }\n        await Promise.all([...currentUploads]);\n    }\n}\nexports.default = TwitterApiv1ReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiv1 = void 0;\nconst globals_1 = require(\"../globals\");\nconst dm_paginator_v1_1 = require(\"../paginators/dm.paginator.v1\");\nconst types_1 = require(\"../types\");\nconst client_v1_write_1 = __importDefault(require(\"./client.v1.write\"));\n/**\n * Twitter v1.1 API client with read/write/DMs rights.\n */\nclass TwitterApiv1 extends client_v1_write_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V1_1_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /* Direct messages */\n    // Part: Sending and receiving events\n    /**\n     * Publishes a new message_create event resulting in a Direct Message sent to a specified user from the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/new-event\n     */\n    sendDm({ recipient_id, custom_profile_id, ...params }) {\n        const args = {\n            event: {\n                type: types_1.EDirectMessageEventTypeV1.Create,\n                [types_1.EDirectMessageEventTypeV1.Create]: {\n                    target: { recipient_id },\n                    message_data: params,\n                },\n            },\n        };\n        if (custom_profile_id) {\n            args.event[types_1.EDirectMessageEventTypeV1.Create].custom_profile_id = custom_profile_id;\n        }\n        return this.post('direct_messages/events/new.json', args, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a single Direct Message event by the given id.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/get-event\n     */\n    getDmEvent(id) {\n        return this.get('direct_messages/events/show.json', { id });\n    }\n    /**\n     * Deletes the direct message specified in the required ID parameter.\n     * The authenticating user must be the recipient of the specified direct message.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/delete-message-event\n     */\n    deleteDm(id) {\n        return this.delete('direct_messages/events/destroy.json', { id });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n    async listDmEvents(args = {}) {\n        const queryParams = { ...args };\n        const initialRq = await this.get('direct_messages/events/list.json', queryParams, { fullResponse: true });\n        return new dm_paginator_v1_1.DmEventsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    // Part: Welcome messages (events)\n    /**\n     * Creates a new Welcome Message that will be stored and sent in the future from the authenticating user in defined circumstances.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message\n     */\n    newWelcomeDm(name, data) {\n        const args = {\n            [types_1.EDirectMessageEventTypeV1.WelcomeCreate]: {\n                name,\n                message_data: data,\n            },\n        };\n        return this.post('direct_messages/welcome_messages/new.json', args, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a Welcome Message by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message\n     */\n    getWelcomeDm(id) {\n        return this.get('direct_messages/welcome_messages/show.json', { id });\n    }\n    /**\n     * Deletes a Welcome Message by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message\n     */\n    deleteWelcomeDm(id) {\n        return this.delete('direct_messages/welcome_messages/destroy.json', { id });\n    }\n    /**\n     * Updates a Welcome Message by the given ID.\n     * Updates to the welcome_message object are atomic.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/update-welcome-message\n     */\n    updateWelcomeDm(id, data) {\n        const args = { message_data: data };\n        return this.put('direct_messages/welcome_messages/update.json', args, {\n            forceBodyMode: 'json',\n            query: { id },\n        });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n    async listWelcomeDms(args = {}) {\n        const queryParams = { ...args };\n        const initialRq = await this.get('direct_messages/welcome_messages/list.json', queryParams, { fullResponse: true });\n        return new dm_paginator_v1_1.WelcomeDmV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    // Part: Welcome message (rules)\n    /**\n     * Creates a new Welcome Message Rule that determines which Welcome Message will be shown in a given conversation.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message-rule\n     */\n    newWelcomeDmRule(welcomeMessageId) {\n        return this.post('direct_messages/welcome_messages/rules/new.json', {\n            welcome_message_rule: { welcome_message_id: welcomeMessageId },\n        }, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a Welcome Message Rule by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message-rule\n     */\n    getWelcomeDmRule(id) {\n        return this.get('direct_messages/welcome_messages/rules/show.json', { id });\n    }\n    /**\n     * Deletes a Welcome Message Rule by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message-rule\n     */\n    deleteWelcomeDmRule(id) {\n        return this.delete('direct_messages/welcome_messages/rules/destroy.json', { id });\n    }\n    /**\n     * Retrieves all welcome DM rules for this account.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/list-welcome-message-rules\n     */\n    async listWelcomeDmRules(args = {}) {\n        const queryParams = { ...args };\n        return this.get('direct_messages/welcome_messages/rules/list.json', queryParams);\n    }\n    /**\n     * Set the current showed welcome message for logged account ; wrapper for Welcome DM rules.\n     * Test if a rule already exists, delete if any, then create a rule for current message ID.\n     *\n     * If you don't have already a welcome message, create it with `.newWelcomeMessage`.\n     */\n    async setWelcomeDm(welcomeMessageId, deleteAssociatedWelcomeDmWhenDeletingRule = true) {\n        var _a;\n        const existingRules = await this.listWelcomeDmRules();\n        if ((_a = existingRules.welcome_message_rules) === null || _a === void 0 ? void 0 : _a.length) {\n            for (const rule of existingRules.welcome_message_rules) {\n                await this.deleteWelcomeDmRule(rule.id);\n                if (deleteAssociatedWelcomeDmWhenDeletingRule) {\n                    await this.deleteWelcomeDm(rule.welcome_message_id);\n                }\n            }\n        }\n        return this.newWelcomeDmRule(welcomeMessageId);\n    }\n    // Part: Read indicator\n    /**\n     * Marks a message as read in the recipient\u2019s Direct Message conversation view with the sender.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-read-receipt\n     */\n    markDmAsRead(lastEventId, recipientId) {\n        return this.post('direct_messages/mark_read.json', {\n            last_read_event_id: lastEventId,\n            recipient_id: recipientId,\n        }, { forceBodyMode: 'url' });\n    }\n    /**\n     * Displays a visual typing indicator in the recipient\u2019s Direct Message conversation view with the sender.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-typing-indicator\n     */\n    indicateDmTyping(recipientId) {\n        return this.post('direct_messages/indicate_typing.json', {\n            recipient_id: recipientId,\n        }, { forceBodyMode: 'url' });\n    }\n    // Part: Images\n    /**\n     * Get a single image attached to a direct message. TwitterApi client must be logged with OAuth 1.0a.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/message-attachments/guides/retrieving-media\n     */\n    async downloadDmImage(urlOrDm) {\n        if (typeof urlOrDm !== 'string') {\n            const attachment = urlOrDm[types_1.EDirectMessageEventTypeV1.Create].message_data.attachment;\n            if (!attachment) {\n                throw new Error('The given direct message doesn\\'t contain any attachment');\n            }\n            urlOrDm = attachment.media.media_url_https;\n        }\n        const data = await this.get(urlOrDm, undefined, { forceParseMode: 'buffer', prefix: '' });\n        if (!data.length) {\n            throw new Error('Image not found. Make sure you are logged with credentials able to access direct messages, and check the URL.');\n        }\n        return data;\n    }\n}\nexports.TwitterApiv1 = TwitterApiv1;\nexports.default = TwitterApiv1;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterV2IncludesHelper = void 0;\n/**\n * Provide helpers for `.includes` of a v2 API result.\n * Needed expansions for a method to work are specified (*`like this`*).\n */\nclass TwitterV2IncludesHelper {\n    constructor(result) {\n        this.result = result;\n    }\n    /* Tweets */\n    get tweets() {\n        return TwitterV2IncludesHelper.tweets(this.result);\n    }\n    static tweets(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.tweets) !== null && _b !== void 0 ? _b : [];\n    }\n    tweetById(id) {\n        return TwitterV2IncludesHelper.tweetById(this.result, id);\n    }\n    static tweetById(result, id) {\n        return this.tweets(result).find(tweet => tweet.id === id);\n    }\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n    retweet(tweet) {\n        return TwitterV2IncludesHelper.retweet(this.result, tweet);\n    }\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n    static retweet(result, tweet) {\n        var _a;\n        const retweetIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'retweeted')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => retweetIds.includes(t.id));\n    }\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n    quote(tweet) {\n        return TwitterV2IncludesHelper.quote(this.result, tweet);\n    }\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n    static quote(result, tweet) {\n        var _a;\n        const quoteIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'quoted')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => quoteIds.includes(t.id));\n    }\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n    repliedTo(tweet) {\n        return TwitterV2IncludesHelper.repliedTo(this.result, tweet);\n    }\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n    static repliedTo(result, tweet) {\n        var _a;\n        const repliesIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'replied_to')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => repliesIds.includes(t.id));\n    }\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n    author(tweet) {\n        return TwitterV2IncludesHelper.author(this.result, tweet);\n    }\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n    static author(result, tweet) {\n        const authorId = tweet.author_id;\n        return authorId ? this.users(result).find(u => u.id === authorId) : undefined;\n    }\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n    repliedToAuthor(tweet) {\n        return TwitterV2IncludesHelper.repliedToAuthor(this.result, tweet);\n    }\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n    static repliedToAuthor(result, tweet) {\n        const inReplyUserId = tweet.in_reply_to_user_id;\n        return inReplyUserId ? this.users(result).find(u => u.id === inReplyUserId) : undefined;\n    }\n    /* Users */\n    get users() {\n        return TwitterV2IncludesHelper.users(this.result);\n    }\n    static users(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.users) !== null && _b !== void 0 ? _b : [];\n    }\n    userById(id) {\n        return TwitterV2IncludesHelper.userById(this.result, id);\n    }\n    static userById(result, id) {\n        return this.users(result).find(u => u.id === id);\n    }\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n    pinnedTweet(user) {\n        return TwitterV2IncludesHelper.pinnedTweet(this.result, user);\n    }\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n    static pinnedTweet(result, user) {\n        return user.pinned_tweet_id ? this.tweets(result).find(t => t.id === user.pinned_tweet_id) : undefined;\n    }\n    /* Medias */\n    get media() {\n        return TwitterV2IncludesHelper.media(this.result);\n    }\n    static media(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.media) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n    medias(tweet) {\n        return TwitterV2IncludesHelper.medias(this.result, tweet);\n    }\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n    static medias(result, tweet) {\n        var _a, _b;\n        const keys = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.media_keys) !== null && _b !== void 0 ? _b : [];\n        return this.media(result).filter(m => keys.includes(m.media_key));\n    }\n    /* Polls */\n    get polls() {\n        return TwitterV2IncludesHelper.polls(this.result);\n    }\n    static polls(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.polls) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n    poll(tweet) {\n        return TwitterV2IncludesHelper.poll(this.result, tweet);\n    }\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n    static poll(result, tweet) {\n        var _a, _b;\n        const pollIds = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.poll_ids) !== null && _b !== void 0 ? _b : [];\n        if (pollIds.length) {\n            const pollId = pollIds[0];\n            return this.polls(result).find(p => p.id === pollId);\n        }\n        return undefined;\n    }\n    /* Places */\n    get places() {\n        return TwitterV2IncludesHelper.places(this.result);\n    }\n    static places(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.places) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n    place(tweet) {\n        return TwitterV2IncludesHelper.place(this.result, tweet);\n    }\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n    static place(result, tweet) {\n        var _a;\n        const placeId = (_a = tweet.geo) === null || _a === void 0 ? void 0 : _a.place_id;\n        return placeId ? this.places(result).find(p => p.id === placeId) : undefined;\n    }\n    /* Lists */\n    /** List owner of the given list (*`owner_id`*) */\n    listOwner(list) {\n        return TwitterV2IncludesHelper.listOwner(this.result, list);\n    }\n    /** List owner of the given list (*`owner_id`*) */\n    static listOwner(result, list) {\n        const creatorId = list.owner_id;\n        return creatorId ? this.users(result).find(p => p.id === creatorId) : undefined;\n    }\n    /* Spaces */\n    /** Creator of the given space (*`creator_id`*) */\n    spaceCreator(space) {\n        return TwitterV2IncludesHelper.spaceCreator(this.result, space);\n    }\n    /** Creator of the given space (*`creator_id`*) */\n    static spaceCreator(result, space) {\n        const creatorId = space.creator_id;\n        return creatorId ? this.users(result).find(p => p.id === creatorId) : undefined;\n    }\n    /** Current hosts of the given space (*`host_ids`*) */\n    spaceHosts(space) {\n        return TwitterV2IncludesHelper.spaceHosts(this.result, space);\n    }\n    /** Current hosts of the given space (*`host_ids`*) */\n    static spaceHosts(result, space) {\n        var _a;\n        const hostIds = (_a = space.host_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => hostIds.includes(u.id));\n    }\n    /** Current speakers of the given space (*`speaker_ids`*) */\n    spaceSpeakers(space) {\n        return TwitterV2IncludesHelper.spaceSpeakers(this.result, space);\n    }\n    /** Current speakers of the given space (*`speaker_ids`*) */\n    static spaceSpeakers(result, space) {\n        var _a;\n        const speakerIds = (_a = space.speaker_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => speakerIds.includes(u.id));\n    }\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n    spaceInvitedUsers(space) {\n        return TwitterV2IncludesHelper.spaceInvitedUsers(this.result, space);\n    }\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n    static spaceInvitedUsers(result, space) {\n        var _a;\n        const invitedUserIds = (_a = space.invited_user_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => invitedUserIds.includes(u.id));\n    }\n}\nexports.TwitterV2IncludesHelper = TwitterV2IncludesHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TimelineV2Paginator = exports.TwitterV2Paginator = void 0;\nconst includes_v2_helper_1 = require(\"../v2/includes.v2.helper\");\nconst TwitterPaginator_1 = require(\"./TwitterPaginator\");\n/** A generic PreviousableTwitterPaginator with common v2 helper methods. */\nclass TwitterV2Paginator extends TwitterPaginator_1.PreviousableTwitterPaginator {\n    updateIncludes(data) {\n        // Update errors\n        if (data.errors) {\n            if (!this._realData.errors) {\n                this._realData.errors = [];\n            }\n            this._realData.errors = [...this._realData.errors, ...data.errors];\n        }\n        // Update includes\n        if (!data.includes) {\n            return;\n        }\n        if (!this._realData.includes) {\n            this._realData.includes = {};\n        }\n        const includesRealData = this._realData.includes;\n        for (const [includeKey, includeArray] of Object.entries(data.includes)) {\n            if (!includesRealData[includeKey]) {\n                includesRealData[includeKey] = [];\n            }\n            includesRealData[includeKey] = [\n                ...includesRealData[includeKey],\n                ...includeArray,\n            ];\n        }\n    }\n    /** Throw if the current paginator is not usable. */\n    assertUsable() {\n        if (this.unusable) {\n            throw new Error('Unable to use this paginator to fetch more data, as it does not contain any metadata.' +\n                ' Check .errors property for more details.');\n        }\n    }\n    get meta() {\n        return this._realData.meta;\n    }\n    get includes() {\n        var _a;\n        if (!((_a = this._realData) === null || _a === void 0 ? void 0 : _a.includes)) {\n            return new includes_v2_helper_1.TwitterV2IncludesHelper(this._realData);\n        }\n        if (this._includesInstance) {\n            return this._includesInstance;\n        }\n        return this._includesInstance = new includes_v2_helper_1.TwitterV2IncludesHelper(this._realData);\n    }\n    get errors() {\n        var _a;\n        return (_a = this._realData.errors) !== null && _a !== void 0 ? _a : [];\n    }\n    /** `true` if this paginator only contains error payload and no metadata found to consume data. */\n    get unusable() {\n        return this.errors.length > 0 && !this._realData.meta && !this._realData.data;\n    }\n}\nexports.TwitterV2Paginator = TwitterV2Paginator;\n/** A generic TwitterV2Paginator able to consume v2 timelines that use max_results and pagination tokens. */\nclass TimelineV2Paginator extends TwitterV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.previous_token = result.meta.previous_token;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.next_token,\n        };\n    }\n    getPreviousQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.previous_token,\n        };\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        var _a;\n        return !!((_a = result.meta) === null || _a === void 0 ? void 0 : _a.next_token);\n    }\n}\nexports.TimelineV2Paginator = TimelineV2Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetV2ListTweetsPaginator = exports.TweetV2UserLikedTweetsPaginator = exports.TweetBookmarksTimelineV2Paginator = exports.TweetUserMentionTimelineV2Paginator = exports.TweetUserTimelineV2Paginator = exports.TweetHomeTimelineV2Paginator = exports.QuotedTweetsTimelineV2Paginator = exports.TweetSearchAllV2Paginator = exports.TweetSearchRecentV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with since_id, until_id and next_token (when available). */\nclass TweetTimelineV2Paginator extends v2_paginator_1.TwitterV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        this.assertUsable();\n        const params = { ...this.injectQueryParams(maxResults) };\n        if (this._realData.meta.next_token) {\n            params.next_token = this._realData.meta.next_token;\n        }\n        else {\n            if (params.start_time) {\n                // until_id and start_time are forbidden together for some reason, so convert start_time to a since_id.\n                params.since_id = this.dateStringToSnowflakeId(params.start_time);\n                delete params.start_time;\n            }\n            if (params.end_time) {\n                // until_id overrides end_time, so delete it\n                delete params.end_time;\n            }\n            params.until_id = this._realData.meta.oldest_id;\n        }\n        return params;\n    }\n    getPreviousQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            since_id: this._realData.meta.newest_id,\n        };\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        return !!result.meta.next_token;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    dateStringToSnowflakeId(dateStr) {\n        const TWITTER_START_EPOCH = BigInt('1288834974657');\n        const date = new Date(dateStr);\n        if (isNaN(date.valueOf())) {\n            throw new Error('Unable to convert start_time/end_time to a valid date. A ISO 8601 DateTime is excepted, please check your input.');\n        }\n        const dateTimestamp = BigInt(date.valueOf());\n        return ((dateTimestamp - TWITTER_START_EPOCH) << BigInt('22')).toString();\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with pagination_tokens. */\nclass TweetPaginableTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        super.refreshInstanceFromResult(response, isNextPage);\n        const result = response.data;\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n        }\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n// ----------------\n// - Tweet search -\n// ----------------\nclass TweetSearchRecentV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/recent';\n    }\n}\nexports.TweetSearchRecentV2Paginator = TweetSearchRecentV2Paginator;\nclass TweetSearchAllV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/all';\n    }\n}\nexports.TweetSearchAllV2Paginator = TweetSearchAllV2Paginator;\nclass QuotedTweetsTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/quote_tweets';\n    }\n}\nexports.QuotedTweetsTimelineV2Paginator = QuotedTweetsTimelineV2Paginator;\n// -----------------\n// - Home timeline -\n// -----------------\nclass TweetHomeTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/timelines/reverse_chronological';\n    }\n}\nexports.TweetHomeTimelineV2Paginator = TweetHomeTimelineV2Paginator;\nclass TweetUserTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/tweets';\n    }\n}\nexports.TweetUserTimelineV2Paginator = TweetUserTimelineV2Paginator;\nclass TweetUserMentionTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/mentions';\n    }\n}\nexports.TweetUserMentionTimelineV2Paginator = TweetUserMentionTimelineV2Paginator;\n// -------------\n// - Bookmarks -\n// -------------\nclass TweetBookmarksTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/bookmarks';\n    }\n}\nexports.TweetBookmarksTimelineV2Paginator = TweetBookmarksTimelineV2Paginator;\n// ---------------------------------------------------------------------------------\n// - Tweet lists (consume tweets with pagination tokens instead of since/until id) -\n// ---------------------------------------------------------------------------------\n/** A generic TwitterPaginator able to consume TweetV2 timelines. */\nclass TweetListV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n}\nclass TweetV2UserLikedTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/liked_tweets';\n    }\n}\nexports.TweetV2UserLikedTweetsPaginator = TweetV2UserLikedTweetsPaginator;\nclass TweetV2ListTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/tweets';\n    }\n}\nexports.TweetV2ListTweetsPaginator = TweetV2ListTweetsPaginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetRetweetersUsersV2Paginator = exports.TweetLikingUsersV2Paginator = exports.UserListFollowersV2Paginator = exports.UserListMembersV2Paginator = exports.UserFollowingV2Paginator = exports.UserFollowersV2Paginator = exports.UserMutingUsersV2Paginator = exports.UserBlockingUsersV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\n/** A generic PreviousableTwitterPaginator able to consume UserV2 timelines. */\nclass UserTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nclass UserBlockingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/blocking';\n    }\n}\nexports.UserBlockingUsersV2Paginator = UserBlockingUsersV2Paginator;\nclass UserMutingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/muting';\n    }\n}\nexports.UserMutingUsersV2Paginator = UserMutingUsersV2Paginator;\nclass UserFollowersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/followers';\n    }\n}\nexports.UserFollowersV2Paginator = UserFollowersV2Paginator;\nclass UserFollowingV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/following';\n    }\n}\nexports.UserFollowingV2Paginator = UserFollowingV2Paginator;\nclass UserListMembersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/members';\n    }\n}\nexports.UserListMembersV2Paginator = UserListMembersV2Paginator;\nclass UserListFollowersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/followers';\n    }\n}\nexports.UserListFollowersV2Paginator = UserListFollowersV2Paginator;\nclass TweetLikingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/liking_users';\n    }\n}\nexports.TweetLikingUsersV2Paginator = TweetLikingUsersV2Paginator;\nclass TweetRetweetersUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/retweeted_by';\n    }\n}\nexports.TweetRetweetersUsersV2Paginator = TweetRetweetersUsersV2Paginator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserListFollowedV2Paginator = exports.UserListMembershipsV2Paginator = exports.UserOwnedListsV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\nclass ListTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    getItemArray() {\n        return this.lists;\n    }\n    /**\n     * Lists returned by paginator.\n     */\n    get lists() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nclass UserOwnedListsV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/owned_lists';\n    }\n}\nexports.UserOwnedListsV2Paginator = UserOwnedListsV2Paginator;\nclass UserListMembershipsV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/list_memberships';\n    }\n}\nexports.UserListMembershipsV2Paginator = UserListMembershipsV2Paginator;\nclass UserListFollowedV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/followed_lists';\n    }\n}\nexports.UserListFollowedV2Paginator = UserListFollowedV2Paginator;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./tweet.paginator.v2\"), exports);\n__exportStar(require(\"./TwitterPaginator\"), exports);\n__exportStar(require(\"./dm.paginator.v1\"), exports);\n__exportStar(require(\"./mutes.paginator.v1\"), exports);\n__exportStar(require(\"./tweet.paginator.v1\"), exports);\n__exportStar(require(\"./user.paginator.v1\"), exports);\n__exportStar(require(\"./user.paginator.v2\"), exports);\n__exportStar(require(\"./list.paginator.v1\"), exports);\n__exportStar(require(\"./list.paginator.v2\"), exports);\n__exportStar(require(\"./friends.paginator.v1\"), exports);\n__exportStar(require(\"./followers.paginator.v1\"), exports);\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_subclient_1 = __importDefault(require(\"../client.subclient\"));\nconst globals_1 = require(\"../globals\");\n/**\n * Base Twitter v2 labs client with only read right.\n */\nclass TwitterApiv2LabsReadOnly extends client_subclient_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_LABS_PREFIX;\n    }\n}\nexports.default = TwitterApiv2LabsReadOnly;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationDMTimelineV2Paginator = exports.OneToOneDMTimelineV2Paginator = exports.FullDMTimelineV2Paginator = exports.DMTimelineV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\nclass DMTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    getItemArray() {\n        return this.events;\n    }\n    /**\n     * Events returned by paginator.\n     */\n    get events() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nexports.DMTimelineV2Paginator = DMTimelineV2Paginator;\nclass FullDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_events';\n    }\n}\nexports.FullDMTimelineV2Paginator = FullDMTimelineV2Paginator;\nclass OneToOneDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_conversations/with/:participant_id/dm_events';\n    }\n}\nexports.OneToOneDMTimelineV2Paginator = OneToOneDMTimelineV2Paginator;\nclass ConversationDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_conversations/:dm_conversation_id/dm_events';\n    }\n}\nexports.ConversationDMTimelineV2Paginator = ConversationDMTimelineV2Paginator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_subclient_1 = __importDefault(require(\"../client.subclient\"));\nconst globals_1 = require(\"../globals\");\nconst paginators_1 = require(\"../paginators\");\nconst client_v2_labs_read_1 = __importDefault(require(\"../v2-labs/client.v2.labs.read\"));\nconst user_paginator_v2_1 = require(\"../paginators/user.paginator.v2\");\nconst helpers_1 = require(\"../helpers\");\nconst dm_paginator_v2_1 = require(\"../paginators/dm.paginator.v2\");\n/**\n * Base Twitter v2 client with only read right.\n */\nclass TwitterApiv2ReadOnly extends client_subclient_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_PREFIX;\n    }\n    /* Sub-clients */\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new client_v2_labs_read_1.default(this);\n    }\n    async search(queryOrOptions, options = {}) {\n        const queryParams = typeof queryOrOptions === 'string' ?\n            { ...options, query: queryOrOptions } :\n            { ...queryOrOptions };\n        const initialRq = await this.get('tweets/search/recent', queryParams, { fullResponse: true });\n        return new paginators_1.TweetSearchRecentV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * The full-archive search endpoint returns the complete history of public Tweets matching a search query;\n     * since the first Tweet was created March 26, 2006.\n     *\n     * This endpoint is only available to those users who have been approved for the Academic Research product track.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all\n     */\n    async searchAll(query, options = {}) {\n        const queryParams = { ...options, query };\n        const initialRq = await this.get('tweets/search/all', queryParams, { fullResponse: true });\n        return new paginators_1.TweetSearchAllV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a variety of information about a single Tweet specified by the requested ID.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    singleTweet(tweetId, options = {}) {\n        return this.get('tweets/:id', options, { params: { id: tweetId } });\n    }\n    /**\n     * Returns a variety of information about tweets specified by list of IDs.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    tweets(tweetIds, options = {}) {\n        return this.get('tweets', { ids: tweetIds, ...options });\n    }\n    /**\n     * The recent Tweet counts endpoint returns count of Tweets from the last seven days that match a search query.\n     * OAuth2 Bearer auth only.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-recent\n     */\n    tweetCountRecent(query, options = {}) {\n        return this.get('tweets/counts/recent', { query, ...options });\n    }\n    /**\n     * This endpoint is only available to those users who have been approved for the Academic Research product track.\n     * The full-archive search endpoint returns the complete history of public Tweets matching a search query;\n     * since the first Tweet was created March 26, 2006.\n     * OAuth2 Bearer auth only.\n     * **This endpoint has pagination, yet it is not supported by bundled paginators. Use `next_token` to fetch next page.**\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-all\n     */\n    tweetCountAll(query, options = {}) {\n        return this.get('tweets/counts/all', { query, ...options });\n    }\n    async tweetRetweetedBy(tweetId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const initialRq = await this.get('tweets/:id/retweeted_by', parameters, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        if (!asPaginator) {\n            return initialRq.data;\n        }\n        return new user_paginator_v2_1.TweetRetweetersUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: { id: tweetId },\n        });\n    }\n    async tweetLikedBy(tweetId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const initialRq = await this.get('tweets/:id/liking_users', parameters, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        if (!asPaginator) {\n            return initialRq.data;\n        }\n        return new user_paginator_v2_1.TweetLikingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: { id: tweetId },\n        });\n    }\n    /**\n     * Allows you to retrieve a collection of the most recent Tweets and Retweets posted by you and users you follow, also known as home timeline.\n     * This endpoint returns up to the last 3200 Tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-reverse-chronological\n     *\n     * OAuth 2 scopes: `tweet.read` `users.read`\n     */\n    async homeTimeline(options = {}) {\n        const meUser = await this.getCurrentUserV2Object();\n        const initialRq = await this.get('users/:id/timelines/reverse_chronological', options, {\n            fullResponse: true,\n            params: { id: meUser.data.id },\n        });\n        return new paginators_1.TweetHomeTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: meUser.data.id },\n        });\n    }\n    /**\n     * Returns Tweets composed by a single user, specified by the requested user ID.\n     * By default, the most recent ten Tweets are returned per request.\n     * Using pagination, the most recent 3,200 Tweets can be retrieved.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets\n     */\n    async userTimeline(userId, options = {}) {\n        const initialRq = await this.get('users/:id/tweets', options, {\n            fullResponse: true,\n            params: { id: userId },\n        });\n        return new paginators_1.TweetUserTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: userId },\n        });\n    }\n    /**\n     * Returns Tweets mentioning a single user specified by the requested user ID.\n     * By default, the most recent ten Tweets are returned per request.\n     * Using pagination, up to the most recent 800 Tweets can be retrieved.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions\n     */\n    async userMentionTimeline(userId, options = {}) {\n        const initialRq = await this.get('users/:id/mentions', options, {\n            fullResponse: true,\n            params: { id: userId },\n        });\n        return new paginators_1.TweetUserMentionTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: userId },\n        });\n    }\n    /**\n     * Returns Quote Tweets for a Tweet specified by the requested Tweet ID.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/quote-tweets/api-reference/get-tweets-id-quote_tweets\n     *\n     * OAuth2 scopes: `users.read` `tweet.read`\n     */\n    async quotes(tweetId, options = {}) {\n        const initialRq = await this.get('tweets/:id/quote_tweets', options, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        return new paginators_1.QuotedTweetsTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: tweetId },\n        });\n    }\n    /* Bookmarks */\n    /**\n     * Allows you to get information about a authenticated user\u2019s 800 most recent bookmarked Tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/get-users-id-bookmarks\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.read`\n     */\n    async bookmarks(options = {}) {\n        const user = await this.getCurrentUserV2Object();\n        const initialRq = await this.get('users/:id/bookmarks', options, {\n            fullResponse: true,\n            params: { id: user.data.id },\n        });\n        return new paginators_1.TweetBookmarksTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: user.data.id },\n        });\n    }\n    /* Users */\n    /**\n     * Returns information about an authorized user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    me(options = {}) {\n        return this.get('users/me', options);\n    }\n    /**\n     * Returns a variety of information about a single user specified by the requested ID.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-id\n     */\n    user(userId, options = {}) {\n        return this.get('users/:id', options, { params: { id: userId } });\n    }\n    /**\n     * Returns a variety of information about one or more users specified by the requested IDs.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users\n     */\n    users(userIds, options = {}) {\n        const ids = Array.isArray(userIds) ? userIds.join(',') : userIds;\n        return this.get('users', { ...options, ids });\n    }\n    /**\n     * Returns a variety of information about a single user specified by their username.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username\n     */\n    userByUsername(username, options = {}) {\n        return this.get('users/by/username/:username', options, { params: { username } });\n    }\n    /**\n     * Returns a variety of information about one or more users specified by their usernames.\n     * https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    usersByUsernames(usernames, options = {}) {\n        usernames = Array.isArray(usernames) ? usernames.join(',') : usernames;\n        return this.get('users/by', { ...options, usernames });\n    }\n    async followers(userId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const params = { id: userId };\n        if (!asPaginator) {\n            return this.get('users/:id/followers', parameters, { params });\n        }\n        const initialRq = await this.get('users/:id/followers', parameters, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserFollowersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: params,\n        });\n    }\n    async following(userId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const params = { id: userId };\n        if (!asPaginator) {\n            return this.get('users/:id/following', parameters, { params });\n        }\n        const initialRq = await this.get('users/:id/following', parameters, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserFollowingV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: params,\n        });\n    }\n    /**\n     * Allows you to get information about a user\u2019s liked Tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-users-id-liked_tweets\n     */\n    async userLikedTweets(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/liked_tweets', options, { fullResponse: true, params });\n        return new paginators_1.TweetV2UserLikedTweetsPaginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are blocked by the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/get-users-blocking\n     */\n    async userBlockingUsers(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/blocking', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserBlockingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are muted by the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/get-users-muting\n     */\n    async userMutingUsers(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/muting', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserMutingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Lists */\n    /**\n     * Returns the details of a specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-lists-id\n     */\n    list(id, options = {}) {\n        return this.get('lists/:id', options, { params: { id } });\n    }\n    /**\n     * Returns all Lists owned by the specified user.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-users-id-owned_lists\n     */\n    async listsOwned(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/owned_lists', options, { fullResponse: true, params });\n        return new paginators_1.UserOwnedListsV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns all Lists a specified user is a member of.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships\n     */\n    async listMemberships(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/list_memberships', options, { fullResponse: true, params });\n        return new paginators_1.UserListMembershipsV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns all Lists a specified user follows.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/get-users-id-followed_lists\n     */\n    async listFollowed(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/followed_lists', options, { fullResponse: true, params });\n        return new paginators_1.UserListFollowedV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of Tweets from the specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-tweets/api-reference/get-lists-id-tweets\n     */\n    async listTweets(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/tweets', options, { fullResponse: true, params });\n        return new paginators_1.TweetV2ListTweetsPaginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are members of the specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-lists-id-members\n     */\n    async listMembers(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/members', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserListMembersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are followers of the specified List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/get-lists-id-followers\n     */\n    async listFollowers(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/followers', options, { fullResponse: true, params });\n        return new user_paginator_v2_1.UserListFollowersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Direct messages */\n    /**\n     * Returns a list of Direct Messages for the authenticated user, both sent and received.\n     * Direct Message events are returned in reverse chronological order.\n     * Supports retrieving events from the previous 30 days.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_events\n     */\n    async listDmEvents(options = {}) {\n        const initialRq = await this.get('dm_events', options, { fullResponse: true });\n        return new dm_paginator_v2_1.FullDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n        });\n    }\n    /**\n     * Returns a list of Direct Messages (DM) events within a 1-1 conversation with the user specified in the participant_id path parameter.\n     * Messages are returned in reverse chronological order.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_conversations-dm_conversation_id-dm_events\n     */\n    async listDmEventsWithParticipant(participantId, options = {}) {\n        const params = { participant_id: participantId };\n        const initialRq = await this.get('dm_conversations/with/:participant_id/dm_events', options, { fullResponse: true, params });\n        return new dm_paginator_v2_1.OneToOneDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of Direct Messages within a conversation specified in the dm_conversation_id path parameter.\n     * Messages are returned in reverse chronological order.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_conversations-dm_conversation_id-dm_events\n     */\n    async listDmEventsOfConversation(dmConversationId, options = {}) {\n        const params = { dm_conversation_id: dmConversationId };\n        const initialRq = await this.get('dm_conversations/:dm_conversation_id/dm_events', options, { fullResponse: true, params });\n        return new dm_paginator_v2_1.ConversationDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Spaces */\n    /**\n     * Get a single space by ID.\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    space(spaceId, options = {}) {\n        return this.get('spaces/:id', options, { params: { id: spaceId } });\n    }\n    /**\n     * Get spaces using their IDs.\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    spaces(spaceIds, options = {}) {\n        return this.get('spaces', { ids: spaceIds, ...options });\n    }\n    /**\n     * Get spaces using their creator user ID(s). (no pagination available)\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    spacesByCreators(creatorIds, options = {}) {\n        return this.get('spaces/by/creator_ids', { user_ids: creatorIds, ...options });\n    }\n    /**\n     * Search through spaces using multiple params. (no pagination available)\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/search/api-reference/get-spaces-search\n     */\n    searchSpaces(options) {\n        return this.get('spaces/search', options);\n    }\n    /**\n    * Returns a list of user who purchased a ticket to the requested Space.\n    * You must authenticate the request using the Access Token of the creator of the requested Space.\n    *\n    * **OAuth 2.0 Access Token required**\n    *\n    * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers\n    *\n    * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n    */\n    spaceBuyers(spaceId, options = {}) {\n        return this.get('spaces/:id/buyers', options, { params: { id: spaceId } });\n    }\n    /**\n     * Returns Tweets shared in the requested Spaces.\n     * https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`, `space.read`\n     */\n    spaceTweets(spaceId, options = {}) {\n        return this.get('spaces/:id/tweets', options, { params: { id: spaceId } });\n    }\n    searchStream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/search/stream', options, { payloadIsError: helpers_1.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    /**\n     * Return a list of rules currently active on the streaming endpoint, either as a list or individually.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules\n     */\n    streamRules(options = {}) {\n        return this.get('tweets/search/stream/rules', options);\n    }\n    updateStreamRules(options, query = {}) {\n        return this.post('tweets/search/stream/rules', options, { query });\n    }\n    sampleStream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/sample/stream', options, { payloadIsError: helpers_1.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    sample10Stream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/sample10/stream', options, { payloadIsError: helpers_1.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    /* Batch compliance */\n    /**\n     * Returns a list of recent compliance jobs.\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs\n     */\n    complianceJobs(options) {\n        return this.get('compliance/jobs', options);\n    }\n    /**\n     * Get a single compliance job with the specified ID.\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs-id\n     */\n    complianceJob(jobId) {\n        return this.get('compliance/jobs/:id', undefined, { params: { id: jobId } });\n    }\n    /**\n     * Creates a new compliance job for Tweet IDs or user IDs, send your file, await result and parse it into an array.\n     * You can run one batch job at a time. Returns the created job, but **not the job result!**.\n     *\n     * You can obtain the result (**after job is completed**) with `.complianceJobResult`.\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs\n     */\n    async sendComplianceJob(jobParams) {\n        const job = await this.post('compliance/jobs', { type: jobParams.type, name: jobParams.name });\n        // Send the IDs\n        const rawIdsBody = jobParams.ids instanceof Buffer ? jobParams.ids : Buffer.from(jobParams.ids.join('\\n'));\n        // Upload the IDs\n        await this.put(job.data.upload_url, rawIdsBody, {\n            forceBodyMode: 'raw',\n            enableAuth: false,\n            headers: { 'Content-Type': 'text/plain' },\n            prefix: '',\n        });\n        return job;\n    }\n    /**\n     * Get the result of a running or completed job, obtained through `.complianceJob`, `.complianceJobs` or `.sendComplianceJob`.\n     * If job is still running (`in_progress`), it will await until job is completed. **This could be quite long!**\n     * https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs\n     */\n    async complianceJobResult(job) {\n        let runningJob = job;\n        while (runningJob.status !== 'complete') {\n            if (runningJob.status === 'expired' || runningJob.status === 'failed') {\n                throw new Error('Job failed to be completed.');\n            }\n            await new Promise(resolve => setTimeout(resolve, 3500));\n            runningJob = (await this.complianceJob(job.id)).data;\n        }\n        // Download and parse result\n        const result = await this.get(job.download_url, undefined, {\n            enableAuth: false,\n            prefix: '',\n        });\n        return result\n            .trim()\n            .split('\\n')\n            .filter(line => line)\n            .map(line => JSON.parse(line));\n    }\n}\nexports.default = TwitterApiv2ReadOnly;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globals_1 = require(\"../globals\");\nconst client_v2_labs_read_1 = __importDefault(require(\"./client.v2.labs.read\"));\n/**\n * Base Twitter v2 labs client with read/write rights.\n */\nclass TwitterApiv2LabsReadWrite extends client_v2_labs_read_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_LABS_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\nexports.default = TwitterApiv2LabsReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globals_1 = require(\"../globals\");\nconst client_v2_read_1 = __importDefault(require(\"./client.v2.read\"));\nconst client_v2_labs_write_1 = __importDefault(require(\"../v2-labs/client.v2.labs.write\"));\n/**\n * Base Twitter v2 client with read/write rights.\n */\nclass TwitterApiv2ReadWrite extends client_v2_read_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_PREFIX;\n    }\n    /* Sub-clients */\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new client_v2_labs_write_1.default(this);\n    }\n    /* Tweets */\n    /**\n     * Hides or unhides a reply to a Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/hide-replies/api-reference/put-tweets-id-hidden\n     */\n    hideReply(tweetId, makeHidden) {\n        return this.put('tweets/:id/hidden', { hidden: makeHidden }, { params: { id: tweetId } });\n    }\n    /**\n     * Causes the user ID identified in the path parameter to Like the target Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/post-users-user_id-likes\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    like(loggedUserId, targetTweetId) {\n        return this.post('users/:id/likes', { tweet_id: targetTweetId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to unlike a Tweet.\n     * The request succeeds with no action when the user sends a request to a user they're not liking the Tweet or have already unliked the Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/delete-users-id-likes-tweet_id\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unlike(loggedUserId, targetTweetId) {\n        return this.delete('users/:id/likes/:tweet_id', undefined, {\n            params: { id: loggedUserId, tweet_id: targetTweetId },\n        });\n    }\n    /**\n     * Causes the user ID identified in the path parameter to Retweet the target Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/post-users-id-retweets\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    retweet(loggedUserId, targetTweetId) {\n        return this.post('users/:id/retweets', { tweet_id: targetTweetId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to remove the Retweet of a Tweet.\n     * The request succeeds with no action when the user sends a request to a user they're not Retweeting the Tweet or have already removed the Retweet of.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/delete-users-id-retweets-tweet_id\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unretweet(loggedUserId, targetTweetId) {\n        return this.delete('users/:id/retweets/:tweet_id', undefined, {\n            params: { id: loggedUserId, tweet_id: targetTweetId },\n        });\n    }\n    tweet(status, payload = {}) {\n        if (typeof status === 'object') {\n            payload = status;\n        }\n        else {\n            payload = { text: status, ...payload };\n        }\n        return this.post('tweets', payload);\n    }\n    /**\n     * Reply to a Tweet on behalf of an authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    reply(status, toTweetId, payload = {}) {\n        var _a;\n        const reply = { in_reply_to_tweet_id: toTweetId, ...(_a = payload.reply) !== null && _a !== void 0 ? _a : {} };\n        return this.post('tweets', { text: status, ...payload, reply });\n    }\n    /**\n     * Quote an existing Tweet on behalf of an authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    quote(status, quotedTweetId, payload = {}) {\n        return this.tweet(status, { ...payload, quote_tweet_id: quotedTweetId });\n    }\n    /**\n     * Post a series of tweets.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    async tweetThread(tweets) {\n        var _a, _b;\n        const postedTweets = [];\n        for (const tweet of tweets) {\n            // Retrieve the last sent tweet\n            const lastTweet = postedTweets.length ? postedTweets[postedTweets.length - 1] : null;\n            // Build the tweet query params\n            const queryParams = { ...(typeof tweet === 'string' ? ({ text: tweet }) : tweet) };\n            // Reply to an existing tweet if needed\n            const inReplyToId = lastTweet ? lastTweet.data.id : (_a = queryParams.reply) === null || _a === void 0 ? void 0 : _a.in_reply_to_tweet_id;\n            const status = (_b = queryParams.text) !== null && _b !== void 0 ? _b : '';\n            if (inReplyToId) {\n                postedTweets.push(await this.reply(status, inReplyToId, queryParams));\n            }\n            else {\n                postedTweets.push(await this.tweet(status, queryParams));\n            }\n        }\n        return postedTweets;\n    }\n    /**\n     * Allows a user or authenticated user ID to delete a Tweet\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/delete-tweets-id\n     */\n    deleteTweet(tweetId) {\n        return this.delete('tweets/:id', undefined, {\n            params: {\n                id: tweetId,\n            },\n        });\n    }\n    /* Bookmarks */\n    /**\n     * Causes the user ID of an authenticated user identified in the path parameter to Bookmark the target Tweet provided in the request body.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/post-users-id-bookmarks\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.write`\n     */\n    async bookmark(tweetId) {\n        const user = await this.getCurrentUserV2Object();\n        return this.post('users/:id/bookmarks', { tweet_id: tweetId }, { params: { id: user.data.id } });\n    }\n    /**\n     * Allows a user or authenticated user ID to remove a Bookmark of a Tweet.\n     * https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/delete-users-id-bookmarks-tweet_id\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.write`\n     */\n    async deleteBookmark(tweetId) {\n        const user = await this.getCurrentUserV2Object();\n        return this.delete('users/:id/bookmarks/:tweet_id', undefined, { params: { id: user.data.id, tweet_id: tweetId } });\n    }\n    /* Users */\n    /**\n     * Allows a user ID to follow another user.\n     * If the target user does not have public Tweets, this endpoint will send a follow request.\n     * https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/post-users-source_user_id-following\n     *\n     * OAuth2 scope: `follows.write`\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    follow(loggedUserId, targetUserId) {\n        return this.post('users/:id/following', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user ID to unfollow another user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/delete-users-source_id-following\n     *\n     * OAuth2 scope: `follows.write`\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unfollow(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/following/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /**\n     * Causes the user (in the path) to block the target user.\n     * The user (in the path) must match the user context authorizing the request.\n     * https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/post-users-user_id-blocking\n     *\n     * **Note**: You must specify the currently logged user ID; you can obtain it through v1.1 API.\n     */\n    block(loggedUserId, targetUserId) {\n        return this.post('users/:id/blocking', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to unblock another user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/delete-users-user_id-blocking\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unblock(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/blocking/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /**\n     * Allows an authenticated user ID to mute the target user.\n     * https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/post-users-user_id-muting\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    mute(loggedUserId, targetUserId) {\n        return this.post('users/:id/muting', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows an authenticated user ID to unmute the target user.\n     * The request succeeds with no action when the user sends a request to a user they're not muting or have already unmuted.\n     * https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/delete-users-user_id-muting\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unmute(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/muting/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /* Lists */\n    /**\n     * Creates a new list for the authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists\n     */\n    createList(options) {\n        return this.post('lists', options);\n    }\n    /**\n     * Updates the specified list. The authenticated user must own the list to be able to update it.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/put-lists-id\n     */\n    updateList(listId, options = {}) {\n        return this.put('lists/:id', options, { params: { id: listId } });\n    }\n    /**\n     * Deletes the specified list. The authenticated user must own the list to be able to destroy it.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id\n     */\n    removeList(listId) {\n        return this.delete('lists/:id', undefined, { params: { id: listId } });\n    }\n    /**\n     * Adds a member to a list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists-id-members\n     */\n    addListMember(listId, userId) {\n        return this.post('lists/:id/members', { user_id: userId }, { params: { id: listId } });\n    }\n    /**\n     * Remember a member to a list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id-members-user_id\n     */\n    removeListMember(listId, userId) {\n        return this.delete('lists/:id/members/:user_id', undefined, { params: { id: listId, user_id: userId } });\n    }\n    /**\n     * Subscribes the authenticated user to the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-users-id-followed-lists\n     */\n    subscribeToList(loggedUserId, listId) {\n        return this.post('users/:id/followed_lists', { list_id: listId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Unsubscribes the authenticated user to the specified list.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-users-id-followed-lists-list_id\n     */\n    unsubscribeOfList(loggedUserId, listId) {\n        return this.delete('users/:id/followed_lists/:list_id', undefined, { params: { id: loggedUserId, list_id: listId } });\n    }\n    /**\n     * Enables the authenticated user to pin a List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-users-id-pinned-lists\n     */\n    pinList(loggedUserId, listId) {\n        return this.post('users/:id/pinned_lists', { list_id: listId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Enables the authenticated user to unpin a List.\n     * https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-users-id-pinned-lists-list_id\n     */\n    unpinList(loggedUserId, listId) {\n        return this.delete('users/:id/pinned_lists/:list_id', undefined, { params: { id: loggedUserId, list_id: listId } });\n    }\n    /* Direct messages */\n    /**\n     * Creates a Direct Message on behalf of an authenticated user, and adds it to the specified conversation.\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations-dm_conversation_id-messages\n     */\n    sendDmInConversation(conversationId, message) {\n        return this.post('dm_conversations/:dm_conversation_id/messages', message, { params: { dm_conversation_id: conversationId } });\n    }\n    /**\n     * Creates a one-to-one Direct Message and adds it to the one-to-one conversation.\n     * This method either creates a new one-to-one conversation or retrieves the current conversation and adds the Direct Message to it.\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations-with-participant_id-messages\n     */\n    sendDmToParticipant(participantId, message) {\n        return this.post('dm_conversations/with/:participant_id/messages', message, { params: { participant_id: participantId } });\n    }\n    /**\n     * Creates a new group conversation and adds a Direct Message to it on behalf of an authenticated user.\n     * https://developer.twitter.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations\n     */\n    createDmConversation(options) {\n        return this.post('dm_conversations', options);\n    }\n}\nexports.default = TwitterApiv2ReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiv2Labs = void 0;\nconst globals_1 = require(\"../globals\");\nconst client_v2_labs_write_1 = __importDefault(require(\"./client.v2.labs.write\"));\n/**\n * Twitter v2 labs client with all rights (read/write/DMs)\n */\nclass TwitterApiv2Labs extends client_v2_labs_write_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_LABS_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n}\nexports.TwitterApiv2Labs = TwitterApiv2Labs;\nexports.default = TwitterApiv2Labs;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiv2 = void 0;\nconst globals_1 = require(\"../globals\");\nconst client_v2_write_1 = __importDefault(require(\"./client.v2.write\"));\nconst client_v2_labs_1 = __importDefault(require(\"../v2-labs/client.v2.labs\"));\n/**\n * Twitter v2 client with all rights (read/write/DMs)\n */\nclass TwitterApiv2 extends client_v2_write_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_PREFIX;\n        /** API endpoints */\n    }\n    /* Sub-clients */\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new client_v2_labs_1.default(this);\n    }\n}\nexports.TwitterApiv2 = TwitterApiv2;\nexports.default = TwitterApiv2;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = __importDefault(require(\".\"));\nconst client_base_1 = __importDefault(require(\"../client.base\"));\nconst client_v1_read_1 = __importDefault(require(\"../v1/client.v1.read\"));\nconst client_v2_read_1 = __importDefault(require(\"../v2/client.v2.read\"));\nconst oauth2_helper_1 = require(\"../client-mixins/oauth2.helper\");\nconst request_param_helper_1 = __importDefault(require(\"../client-mixins/request-param.helper\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadOnly extends client_base_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_read_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_read_1.default(this);\n    }\n    /**\n     * Fetch and cache current user.\n     * This method can only be called with a OAuth 1.0a user authentication.\n     *\n     * You can use this method to test if authentication was successful.\n     * Next calls to this methods will use the cached user, unless `forceFetch: true` is given.\n     */\n    async currentUser(forceFetch = false) {\n        return await this.getCurrentUserObject(forceFetch);\n    }\n    /**\n     * Fetch and cache current user.\n     * This method can only be called with a OAuth 1.0a or OAuth2 user authentication.\n     *\n     * This can only be the slimest available `UserV2` object, with only id, name and username properties defined.\n     * To get a customized `UserV2Result`, use `.v2.me()`\n     *\n     * You can use this method to test if authentication was successful.\n     * Next calls to this methods will use the cached user, unless `forceFetch: true` is given.\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    async currentUserV2(forceFetch = false) {\n        return await this.getCurrentUserV2Object(forceFetch);\n    }\n    /* Shortcuts to endpoints */\n    search(what, options) {\n        return this.v2.search(what, options);\n    }\n    /* Authentication */\n    /**\n     * Generate the OAuth request token link for user-based OAuth 1.0 auth.\n     *\n     * ```ts\n     * // Instantiate TwitterApi with consumer keys\n     * const client = new TwitterApi({ appKey: 'consumer_key', appSecret: 'consumer_secret' });\n     *\n     * const tokenRequest = await client.generateAuthLink('oob-or-your-callback-url');\n     * // redirect end-user to tokenRequest.url\n     *\n     * // Save tokenRequest.oauth_token_secret somewhere, it will be needed for next auth step.\n     * ```\n     */\n    async generateAuthLink(oauth_callback = 'oob', { authAccessType, linkMode = 'authenticate', forceLogin, screenName, } = {}) {\n        const oauthResult = await this.post('https://api.twitter.com/oauth/request_token', { oauth_callback, x_auth_access_type: authAccessType });\n        let url = `https://api.twitter.com/oauth/${linkMode}?oauth_token=${encodeURIComponent(oauthResult.oauth_token)}`;\n        if (forceLogin !== undefined) {\n            url += `&force_login=${encodeURIComponent(forceLogin)}`;\n        }\n        if (screenName !== undefined) {\n            url += `&screen_name=${encodeURIComponent(screenName)}`;\n        }\n        if (this._requestMaker.hasPlugins()) {\n            this._requestMaker.applyPluginMethod('onOAuth1RequestToken', {\n                client: this._requestMaker,\n                url,\n                oauthResult,\n            });\n        }\n        return {\n            url,\n            ...oauthResult,\n        };\n    }\n    /**\n     * Obtain access to user-based OAuth 1.0 auth.\n     *\n     * After user is redirect from your callback, use obtained oauth_token and oauth_verifier to\n     * instantiate the new TwitterApi instance.\n     *\n     * ```ts\n     * // Use the saved oauth_token_secret associated to oauth_token returned by callback\n     * const requestClient = new TwitterApi({\n     *  appKey: 'consumer_key',\n     *  appSecret: 'consumer_secret',\n     *  accessToken: 'oauth_token',\n     *  accessSecret: 'oauth_token_secret'\n     * });\n     *\n     * // Use oauth_verifier obtained from callback request\n     * const { client: userClient } = await requestClient.login('oauth_verifier');\n     *\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * ```\n     */\n    async login(oauth_verifier) {\n        const tokens = this.getActiveTokens();\n        if (tokens.type !== 'oauth-1.0a')\n            throw new Error('You must setup TwitterApi instance with consumer keys to accept OAuth 1.0 login');\n        const oauth_result = await this.post('https://api.twitter.com/oauth/access_token', { oauth_token: tokens.accessToken, oauth_verifier });\n        const client = new _1.default({\n            appKey: tokens.appKey,\n            appSecret: tokens.appSecret,\n            accessToken: oauth_result.oauth_token,\n            accessSecret: oauth_result.oauth_token_secret,\n        }, this._requestMaker.clientSettings);\n        return {\n            accessToken: oauth_result.oauth_token,\n            accessSecret: oauth_result.oauth_token_secret,\n            userId: oauth_result.user_id,\n            screenName: oauth_result.screen_name,\n            client,\n        };\n    }\n    /**\n     * Enable application-only authentication.\n     *\n     * To make the request, instantiate TwitterApi with consumer and secret.\n     *\n     * ```ts\n     * const requestClient = new TwitterApi({ appKey: 'consumer', appSecret: 'secret' });\n     * const appClient = await requestClient.appLogin();\n     *\n     * // Use {appClient} to make requests\n     * ```\n     */\n    async appLogin() {\n        const tokens = this.getActiveTokens();\n        if (tokens.type !== 'oauth-1.0a')\n            throw new Error('You must setup TwitterApi instance with consumer keys to accept app-only login');\n        // Create a client with Basic authentication\n        const basicClient = new _1.default({ username: tokens.appKey, password: tokens.appSecret }, this._requestMaker.clientSettings);\n        const res = await basicClient.post('https://api.twitter.com/oauth2/token', { grant_type: 'client_credentials' });\n        // New object with Bearer token\n        return new _1.default(res.access_token, this._requestMaker.clientSettings);\n    }\n    /* OAuth 2 user authentication */\n    /**\n     * Generate the OAuth request token link for user-based OAuth 2.0 auth.\n     *\n     * - **You can only use v2 API endpoints with this authentication method.**\n     * - **You need to specify which scope you want to have when you create your auth link. Make sure it matches your needs.**\n     *\n     * See https://developer.twitter.com/en/docs/authentication/oauth-2-0/user-access-token for details.\n     *\n     * ```ts\n     * // Instantiate TwitterApi with client ID\n     * const client = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * // Generate a link to callback URL that will gives a token with tweet+user read access\n     * const link = client.generateOAuth2AuthLink('your-callback-url', { scope: ['tweet.read', 'users.read'] });\n     *\n     * // Extract props from generate link\n     * const { url, state, codeVerifier } = link;\n     *\n     * // redirect end-user to url\n     * // Save `state` and `codeVerifier` somewhere, it will be needed for next auth step.\n     * ```\n     */\n    generateOAuth2AuthLink(redirectUri, options = {}) {\n        var _a, _b;\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. You can find your client ID in Twitter Developer Portal. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const state = (_a = options.state) !== null && _a !== void 0 ? _a : oauth2_helper_1.OAuth2Helper.generateRandomString(32);\n        const codeVerifier = oauth2_helper_1.OAuth2Helper.getCodeVerifier();\n        const codeChallenge = oauth2_helper_1.OAuth2Helper.getCodeChallengeFromVerifier(codeVerifier);\n        const rawScope = (_b = options.scope) !== null && _b !== void 0 ? _b : '';\n        const scope = Array.isArray(rawScope) ? rawScope.join(' ') : rawScope;\n        const url = new URL('https://twitter.com/i/oauth2/authorize');\n        const query = {\n            response_type: 'code',\n            client_id: this._requestMaker.clientId,\n            redirect_uri: redirectUri,\n            state,\n            code_challenge: codeChallenge,\n            code_challenge_method: 's256',\n            scope,\n        };\n        request_param_helper_1.default.addQueryParamsToUrl(url, query);\n        const result = {\n            url: url.toString(),\n            state,\n            codeVerifier,\n            codeChallenge,\n        };\n        if (this._requestMaker.hasPlugins()) {\n            this._requestMaker.applyPluginMethod('onOAuth2RequestToken', {\n                client: this._requestMaker,\n                result,\n                redirectUri,\n            });\n        }\n        return result;\n    }\n    /**\n     * Obtain access to user-based OAuth 2.0 auth.\n     *\n     * After user is redirect from your callback, use obtained code to\n     * instantiate the new TwitterApi instance.\n     *\n     * You need to obtain `codeVerifier` from a call to `.generateOAuth2AuthLink`.\n     *\n     * ```ts\n     * // Use the saved codeVerifier associated to state (present in query string of callback)\n     * const requestClient = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * const { client: userClient, refreshToken } = await requestClient.loginWithOAuth2({\n     *  code: 'codeFromQueryString',\n     *  // the same URL given to generateOAuth2AuthLink\n     *  redirectUri,\n     *  // the verifier returned by generateOAuth2AuthLink\n     *  codeVerifier,\n     * });\n     *\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * // {refreshToken} is defined if 'offline.access' is in scope.\n     * ```\n     */\n    async loginWithOAuth2({ code, codeVerifier, redirectUri }) {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const accessTokenResult = await this.post('https://api.twitter.com/2/oauth2/token', {\n            code,\n            code_verifier: codeVerifier,\n            redirect_uri: redirectUri,\n            grant_type: 'authorization_code',\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n        });\n        return this.parseOAuth2AccessTokenResult(accessTokenResult);\n    }\n    /**\n     * Obtain a new access token to user-based OAuth 2.0 auth from a refresh token.\n     *\n     * ```ts\n     * const requestClient = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * const { client: userClient } = await requestClient.refreshOAuth2Token('refreshToken');\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * ```\n     */\n    async refreshOAuth2Token(refreshToken) {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const accessTokenResult = await this.post('https://api.twitter.com/2/oauth2/token', {\n            refresh_token: refreshToken,\n            grant_type: 'refresh_token',\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n        });\n        return this.parseOAuth2AccessTokenResult(accessTokenResult);\n    }\n    /**\n     * Revoke a single user-based OAuth 2.0 token.\n     *\n     * You must specify its source, access token (directly after login)\n     * or refresh token (if you've called `.refreshOAuth2Token` before).\n     */\n    async revokeOAuth2Token(token, tokenType = 'access_token') {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        return await this.post('https://api.twitter.com/2/oauth2/revoke', {\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n            token,\n            token_type_hint: tokenType,\n        });\n    }\n    parseOAuth2AccessTokenResult(result) {\n        const client = new _1.default(result.access_token, this._requestMaker.clientSettings);\n        const scope = result.scope.split(' ').filter(e => e);\n        return {\n            client,\n            expiresIn: result.expires_in,\n            accessToken: result.access_token,\n            scope,\n            refreshToken: result.refresh_token,\n        };\n    }\n}\nexports.default = TwitterApiReadOnly;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_v1_write_1 = __importDefault(require(\"../v1/client.v1.write\"));\nconst client_v2_write_1 = __importDefault(require(\"../v2/client.v2.write\"));\nconst readonly_1 = __importDefault(require(\"./readonly\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadWrite extends readonly_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_write_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_write_1.default(this);\n    }\n    /**\n     * Get a client with read only rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\nexports.default = TwitterApiReadWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwitterApiReadOnly = exports.TwitterApiReadWrite = exports.TwitterApi = void 0;\nconst client_v1_1 = __importDefault(require(\"../v1/client.v1\"));\nconst client_v2_1 = __importDefault(require(\"../v2/client.v2\"));\nconst readwrite_1 = __importDefault(require(\"./readwrite\"));\n// \"Real\" exported client for usage of TwitterApi.\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApi extends readwrite_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_1.default(this);\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /* Static helpers */\n    static getErrors(error) {\n        var _a;\n        if (typeof error !== 'object')\n            return [];\n        if (!('data' in error))\n            return [];\n        return (_a = error.data.errors) !== null && _a !== void 0 ? _a : [];\n    }\n    /** Extract another image size than obtained in a `profile_image_url` or `profile_image_url_https` field of a user object. */\n    static getProfileImageInSize(profileImageUrl, size) {\n        const lastPart = profileImageUrl.split('/').pop();\n        const sizes = ['normal', 'bigger', 'mini'];\n        let originalUrl = profileImageUrl;\n        for (const availableSize of sizes) {\n            if (lastPart.includes(`_${availableSize}`)) {\n                originalUrl = profileImageUrl.replace(`_${availableSize}`, '');\n                break;\n            }\n        }\n        if (size === 'original') {\n            return originalUrl;\n        }\n        const extPos = originalUrl.lastIndexOf('.');\n        if (extPos !== -1) {\n            const ext = originalUrl.slice(extPos + 1);\n            return originalUrl.slice(0, extPos) + '_' + size + '.' + ext;\n        }\n        else {\n            return originalUrl + '_' + size;\n        }\n    }\n}\nexports.TwitterApi = TwitterApi;\nvar readwrite_2 = require(\"./readwrite\");\nObject.defineProperty(exports, \"TwitterApiReadWrite\", { enumerable: true, get: function () { return __importDefault(readwrite_2).default; } });\nvar readonly_1 = require(\"./readonly\");\nObject.defineProperty(exports, \"TwitterApiReadOnly\", { enumerable: true, get: function () { return __importDefault(readonly_1).default; } });\nexports.default = TwitterApi;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar client_1 = require(\"./client\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return __importDefault(client_1).default; } });\n__exportStar(require(\"./client\"), exports);\n__exportStar(require(\"./v1/client.v1\"), exports);\n__exportStar(require(\"./v2/client.v2\"), exports);\n__exportStar(require(\"./v2/includes.v2.helper\"), exports);\n__exportStar(require(\"./v2-labs/client.v2.labs\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./paginators\"), exports);\n__exportStar(require(\"./stream/TweetStream\"), exports);\n__exportStar(require(\"./settings\"), exports);\n", "import { ReactElement } from \"react\";\nimport { useV2 } from \"./common\";\nimport { UserList } from \"./v1/components/user_search\";\nimport { SearchUserListV2 } from \"./v2/components/user_search\";\n\nexport default function UserSearchRoot(): ReactElement {\n  if (useV2()) {\n    return <SearchUserListV2 />;\n  } else {\n    return <UserList />;\n  }\n}\n", "import { getPreferenceValues } from \"@raycast/api\";\nimport { getClientId } from \"./v2/lib/oauth\";\n\nexport function shouldShowListWithDetails(): boolean {\n  const pref = getPreferenceValues();\n  const val: boolean | undefined = pref.listwithdetail as boolean;\n  if (val === undefined) {\n    return true;\n  }\n  return val;\n}\n\nexport function useV2(): boolean {\n  return true; // v1 does not work anymore with X\n  /*const pref = getPreferenceValues();\n  const appKey = (pref.appkey as string) || \"\";\n  const appSecret = (pref.appsecret as string) || \"\";\n  const accessToken = (pref.accesstoken as string) || \"\";\n  const accessSecret = (pref.accesssecret as string) || \"\";\n  if (appKey.length > 0 || appSecret.length > 0 || accessToken.length > 0 || accessSecret.length > 0) {\n    console.log(\"use v1\");\n    return false;\n  }\n  console.log(\"use v2\");\n  return true;*/\n}\n\nexport function hasRestrictedAccess() {\n  const ci = getClientId();\n  if (!ci || ci === \"\" || ci === \"-\") {\n    return true;\n  }\n  return false;\n}\n", "import { OAuth, getPreferenceValues } from \"@raycast/api\";\nimport fetch from \"node-fetch\";\nimport { XIcon } from \"../../icon\";\n\n// Register a new OAuth app via https://developer.twitter.com/en/portal/dashboard\n// Select OAuth 2.0\n// As type of app choose: Native App\n// For the redirect URL enter: https://raycast.com/redirect\n// For the website URL enter: https://raycast.com\n\ninterface Preferences {\n  clientid?: string;\n}\n\nexport function getClientId(): string {\n  const prefs = getPreferenceValues<Preferences>();\n  return prefs.clientid || \"\";\n}\n\nconst oauthClient = new OAuth.PKCEClient({\n  redirectMethod: OAuth.RedirectMethod.Web,\n  providerName: \"Twitter\",\n  providerIcon: XIcon(),\n  providerId: \"twitter\",\n  description: \"Connect your X account\",\n});\n\n// Authorization\n\nexport async function authorize(): Promise<void> {\n  const tokenSet = await oauthClient.getTokens();\n  if (tokenSet?.accessToken) {\n    if (tokenSet.refreshToken && tokenSet.isExpired()) {\n      await oauthClient.setTokens(await refreshTokens(tokenSet.refreshToken));\n    }\n    return;\n  }\n\n  const authRequest = await oauthClient.authorizationRequest({\n    endpoint: \"https://twitter.com/i/oauth2/authorize\",\n    clientId: getClientId(),\n    scope: \"tweet.read tweet.write users.read follows.read like.read like.write offline.access\",\n  });\n  const { authorizationCode } = await oauthClient.authorize(authRequest);\n  await oauthClient.setTokens(await fetchTokens(authRequest, authorizationCode));\n}\n\nexport async function fetchTokens(\n  authRequest: OAuth.AuthorizationRequest,\n  authCode: string,\n): Promise<OAuth.TokenResponse> {\n  const params = new URLSearchParams();\n  params.append(\"client_id\", getClientId());\n  params.append(\"code\", authCode);\n  params.append(\"code_verifier\", authRequest.codeVerifier);\n  params.append(\"grant_type\", \"authorization_code\");\n  params.append(\"redirect_uri\", authRequest.redirectURI);\n\n  const response = await fetch(\"https://api.twitter.com/2/oauth2/token\", { method: \"POST\", body: params });\n  if (!response.ok) {\n    console.error(\"fetch tokens error:\", await response.text());\n    throw new Error(response.statusText);\n  }\n  return (await response.json()) as OAuth.TokenResponse;\n}\n\nexport async function getOAuthTokens(): Promise<OAuth.TokenSet | undefined> {\n  return await oauthClient.getTokens();\n}\n\nexport async function resetOAuthTokens(): Promise<void> {\n  await oauthClient.removeTokens();\n}\n\nasync function refreshTokens(refreshToken: string): Promise<OAuth.TokenResponse> {\n  const params = new URLSearchParams();\n  params.append(\"client_id\", getClientId());\n  params.append(\"refresh_token\", refreshToken);\n  params.append(\"grant_type\", \"refresh_token\");\n\n  const response = await fetch(\"https://api.twitter.com/2/oauth2/token\", { method: \"POST\", body: params });\n  if (!response.ok) {\n    console.error(\"refresh tokens error:\", await response.text());\n    throw new Error(response.statusText);\n  }\n\n  const tokenResponse = (await response.json()) as OAuth.TokenResponse;\n  tokenResponse.refresh_token = tokenResponse.refresh_token ?? refreshToken;\n  return tokenResponse;\n}\n", "import { Image } from \"@raycast/api\";\n\nexport function XIcon(): Image {\n  return { source: { light: \"logo.png\", dark: \"logo@dark.png\" } };\n}\n", "import { List, showToast, Toast } from \"@raycast/api\";\nimport { ReactElement, useState } from \"react\";\nimport { UserV1 } from \"twitter-api-v2\";\nimport { UserListItem } from \"./user\";\nimport { twitterClient, useRefresher } from \"../lib/twitterapi\";\n\nexport function UserList() {\n  const [query, setQuery] = useState<string | undefined>();\n  // eslint-disable-next-line\n  const { data, error, isLoading, fetcher } = useRefresher<UserV1[] | undefined>(async (): Promise<\n    UserV1[] | undefined\n  > => {\n    if (query && query.length > 0 && query !== \"@\") {\n      const userdata = await twitterClient().v1.searchUsers(query);\n      const users: UserV1[] = [];\n      for (const u of userdata) {\n        users.push(u);\n      }\n      return users;\n    } else {\n      return undefined;\n    }\n  }, [query]);\n  if (error) {\n    showToast({ style: Toast.Style.Failure, title: \"Error\", message: error });\n  }\n  return (\n    <List\n      isLoading={isLoading}\n      searchBarPlaceholder=\"Search User by Name of Handle (e.g. @tonka_2000 or Michael Aigner)...\"\n      onSearchTextChange={setQuery}\n      throttle={true}\n    >\n      {data?.map((u) => <UserListItem key={u.screen_name} user={u} />)}\n    </List>\n  );\n}\n\nexport function UserSearchRoot(): ReactElement {\n  return <UserList />;\n}\n", "import { ActionPanel, Image, List } from \"@raycast/api\";\nimport { UserV1 } from \"twitter-api-v2\";\nimport { compactNumberFormat } from \"../../utils\";\nimport { ShowUserTweetsAction } from \"./user_actions\";\n\nexport function UserListItem(props: { user: UserV1 }) {\n  const u = props.user;\n  return (\n    <List.Item\n      key={u.screen_name}\n      title={u.name}\n      subtitle={`@${u.screen_name}`}\n      icon={{ source: u.profile_image_url_https, mask: Image.Mask.Circle }}\n      accessoryTitle={`${compactNumberFormat(u.followers_count)}`}\n      accessoryIcon={{ source: \"\uD83D\uDC40\" }}\n      actions={\n        <ActionPanel>\n          <ShowUserTweetsAction user={u} />\n        </ActionPanel>\n      }\n    />\n  );\n}\n", "export function getErrorMessage(error: unknown): string {\n  return error instanceof Error ? error.message : \"unknown error\";\n}\n\nexport const padStart = (str: string | number, length: number): string => {\n  return String(str).padStart(length, \"\u2000\");\n};\n\nconst fmt = new Intl.NumberFormat(\"en\", { notation: \"compact\" });\n\nexport function compactNumberFormat(num: number): string {\n  return fmt.format(num);\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function replaceAll(str: string, find: RegExp, replace: string): string {\n  return str.replace(find, replace);\n}\n", "import { Action } from \"@raycast/api\";\nimport { UserV1 } from \"twitter-api-v2\";\nimport { UserTweetList } from \"./usertweets\";\nimport { XIcon } from \"../../icon\";\n\nexport function ShowUserTweetsAction(props: { user: UserV1 }) {\n  return (\n    <Action.Push title=\"Show Tweets\" target={<UserTweetList username={props.user.screen_name} />} icon={XIcon()} />\n  );\n}\n", "import { showToast, Toast } from \"@raycast/api\";\nimport { TweetV1 } from \"twitter-api-v2\";\nimport { TweetList } from \"./tweet\";\nimport { refreshTweets, twitterClient, useRefresher } from \"../lib/twitterapi\";\n\nexport function UserTweetList(props: { username: string }) {\n  const username = props.username;\n  const { data, error, isLoading, fetcher } = useRefresher<TweetV1[] | undefined>(\n    async (updateInline): Promise<TweetV1[] | undefined> => {\n      return updateInline ? await refreshTweets(data) : await getTweets(username);\n    },\n  );\n  if (error) {\n    showToast({ style: Toast.Style.Failure, title: \"Error\", message: error });\n  }\n  return <TweetList isLoading={isLoading} tweets={data} fetcher={fetcher} />;\n}\n\nasync function getTweets(username: string): Promise<TweetV1[]> {\n  const usertweets = await twitterClient().v1.userTimelineByUsername(username);\n  const tweets: TweetV1[] = [];\n  for (const t of usertweets.tweets) {\n    tweets.push(t);\n  }\n  return tweets;\n}\n", "import { Action, ActionPanel, Detail, Image, List, showToast, Toast } from \"@raycast/api\";\nimport { TweetV1 } from \"twitter-api-v2\";\nimport { shouldShowListWithDetails } from \"../../common\";\nimport { Fetcher, getPhotoUrlFromTweet, refreshTweet, useRefresher } from \"../lib/twitterapi\";\nimport { compactNumberFormat, padStart } from \"../../utils\";\nimport {\n  DeleteTweetAction,\n  LikeAction,\n  OpenAuthorProfileAction,\n  RefreshAction,\n  RefreshInlineAction,\n  ReplyTweetAction,\n  RetweetAction,\n  ShowTweetAction,\n  ShowUserTweetsAction,\n} from \"./tweet_actions\";\n\nfunction getTweetUrl(tweet: TweetV1): string {\n  return `https://twitter.com/${tweet.user.screen_name}/status/${tweet.id_str}`;\n}\n\nexport function TweetListItem(props: {\n  tweet: TweetV1;\n  fetcher?: Fetcher;\n  maxRTDigits?: number;\n  maxCommentDigits?: number;\n  maxFavDigits?: number;\n  millifyState?: boolean;\n  withDetail?: boolean;\n}) {\n  const t = props.tweet;\n  const withDetail = props.withDetail;\n  const fetcher = props.fetcher;\n  const millifyState = props.millifyState !== undefined ? props.millifyState : true;\n\n  const maxLength = 70;\n  const textRaw = t.full_text ? t.full_text.trim() : \"\";\n  const text = textRaw.slice(0, maxLength) + (textRaw.length > maxLength ? \" ...\" : \"\");\n\n  const imgUrl = t.user.profile_image_url_https;\n  const icon: Image | undefined = imgUrl\n    ? { source: t.user.profile_image_url_https, mask: Image.Mask.Circle }\n    : undefined;\n\n  const ownFavoriteCount = t.favorited && textRaw.startsWith(\"RT @\") ? 1 : 0;\n\n  const hasImage = getPhotoUrlFromTweet(t) ? true : false;\n  const p = (num: number | undefined, length: number): string => {\n    if (num === undefined) {\n      return \"0\";\n    }\n    const text = millifyState ? compactNumberFormat(num) : `${num}`;\n    return padStart(text, length);\n  };\n  const minPadding = 1;\n  const maxPadding = 3;\n  const calcPadding = (num: number | undefined): number => {\n    if (num === undefined) {\n      return minPadding;\n    }\n    if (num < minPadding) {\n      return minPadding;\n    }\n    if (num > maxPadding) {\n      return maxPadding;\n    }\n    return num;\n  };\n  const maxReplyDigits = calcPadding(props.maxCommentDigits);\n  const maxRTDigits = calcPadding(props.maxRTDigits);\n  const maxFavDigits = calcPadding(props.maxFavDigits);\n  let states = [\n    `\uD83D\uDCAC ${p(t.reply_count || 0, maxReplyDigits)}`,\n    `\uD83D\uDD01 ${p(t.retweet_count, maxRTDigits)}`,\n    `\u2764\uFE0F ${p(t.favorite_count + ownFavoriteCount, maxFavDigits)}`,\n  ];\n  if (hasImage) {\n    states = [\"\uD83D\uDDBC\uFE0F\", ...states];\n  }\n\n  const accessories: List.Item.Accessory[] = [{ text: states.join(\"  \") }];\n\n  return (\n    <List.Item\n      id={t.id_str}\n      key={t.id_str}\n      title={text}\n      icon={icon}\n      accessories={!withDetail ? accessories : undefined}\n      detail={withDetail ? <List.Item.Detail markdown={getMarkdownFromTweet(t)} /> : undefined}\n      actions={\n        <ActionPanel>\n          <ActionPanel.Section title=\"Tweet\">\n            <ShowTweetAction tweet={t} />\n            <Action.OpenInBrowser url={getTweetUrl(t)} shortcut={{ modifiers: [\"cmd\"], key: \"b\" }} />\n            <LikeAction tweet={t} fetcher={fetcher} />\n            <ReplyTweetAction tweet={t} />\n            <RetweetAction tweet={t} fetcher={fetcher} />\n            <ShowUserTweetsAction username={t.user.screen_name} />\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Info\">\n            <OpenAuthorProfileAction tweet={t} />\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Destructive\">\n            <DeleteTweetAction tweet={t} />\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Update\">\n            <RefreshInlineAction fetcher={fetcher} />\n            <RefreshAction fetcher={fetcher} />\n          </ActionPanel.Section>\n        </ActionPanel>\n      }\n    />\n  );\n}\n\nfunction getCleanTweetText(tweet: TweetV1): string | undefined {\n  if (tweet.full_text === undefined) {\n    return undefined;\n  }\n  if (isRetweet(tweet)) {\n    const i = tweet.full_text.indexOf(\":\");\n    if (i !== undefined && i > 0) {\n      return tweet.full_text.substring(i + 1).trimStart();\n    }\n  }\n  return tweet.full_text;\n}\n\nfunction isRetweet(tweet: TweetV1): boolean {\n  if (tweet.full_text && tweet.full_text.startsWith(\"RT @\")) {\n    return true;\n  }\n  return false;\n}\n\nfunction getMarkdownFromTweet(tweet: TweetV1): string {\n  const t = tweet;\n  const ownFavoriteCount = t.favorited && isRetweet(t) ? 1 : 0;\n  const states = [`\uD83D\uDCAC ${t.reply_count || 0}`, `\uD83D\uDD01 ${t.retweet_count}`, `\u2764\uFE0F ${t.favorite_count + ownFavoriteCount}`];\n  const imgUrl = getPhotoUrlFromTweet(t);\n  const retweetedText = isRetweet(t) ? \" retweeted\" : \"\";\n  const parts = [\n    `## ${t.user.name} \\`@${t.user.screen_name}\\`${retweetedText}`,\n    getCleanTweetText(t) || \"\",\n    `\\`${t.created_at}\\``,\n  ];\n  if (imgUrl) {\n    parts.push(`![${imgUrl}](${imgUrl})`);\n  }\n  parts.push(states.join(\"   \"));\n  const md = parts.join(\"\\n\\n\");\n  return md;\n}\n\nexport function TweetDetail(props: { tweet: TweetV1 }) {\n  const { data, error, isLoading, fetcher } = useRefresher<TweetV1 | undefined>(\n    async (): Promise<TweetV1 | undefined> => {\n      if (data === undefined) {\n        return props.tweet;\n      } else {\n        return await refreshTweet(data);\n      }\n    },\n  );\n  if (error) {\n    showToast({ style: Toast.Style.Failure, title: \"Error\", message: error });\n  }\n  const t = data || props.tweet;\n  const md = getMarkdownFromTweet(t);\n  return (\n    <Detail\n      isLoading={isLoading}\n      markdown={md}\n      actions={\n        <ActionPanel>\n          <ActionPanel.Section title=\"Tweet\">\n            <ReplyTweetAction tweet={t} />\n            <LikeAction tweet={t} fetcher={fetcher} />\n            <RetweetAction tweet={t} fetcher={fetcher} />\n            <ShowUserTweetsAction username={t.user.screen_name} />\n            <Action.OpenInBrowser url={getTweetUrl(t)} shortcut={{ modifiers: [\"cmd\"], key: \"b\" }} />\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Info\">\n            <OpenAuthorProfileAction tweet={t} />\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Destructive\">\n            <DeleteTweetAction tweet={t} />\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Update\">\n            <RefreshAction title=\"Refresh Tweet\" fetcher={fetcher} />\n          </ActionPanel.Section>\n        </ActionPanel>\n      }\n    />\n  );\n}\n\nexport function TweetList(props: {\n  tweets: TweetV1[] | undefined;\n  isLoading?: boolean | undefined;\n  fetcher?: Fetcher | undefined;\n  millifyState?: boolean;\n}) {\n  const tweets = props.tweets;\n  const isShowingDetail = shouldShowListWithDetails();\n  const millifyState = props.millifyState !== undefined ? props.millifyState : true;\n  let maxFavDigits = 1;\n  let maxRTDigits = 1;\n  let maxCDigits = 1;\n  const getStringLength = (num: number | undefined): number => {\n    if (num === undefined) {\n      return 0;\n    }\n    const text = millifyState ? compactNumberFormat(num) : `${num}`;\n    return text.length;\n  };\n\n  if (tweets) {\n    for (const t of tweets) {\n      const lenF = getStringLength(t.favorite_count);\n      if (lenF > maxFavDigits) {\n        maxFavDigits = lenF;\n      }\n      const lenRT = getStringLength(t.retweet_count);\n      if (lenRT > maxRTDigits) {\n        maxRTDigits = lenRT;\n      }\n      const lenC = getStringLength(t.reply_count);\n      if (lenC > maxCDigits) {\n        maxCDigits = lenC;\n      }\n    }\n  }\n\n  return (\n    <List isLoading={props.isLoading} searchBarPlaceholder=\"Filter Tweets by name...\" isShowingDetail={isShowingDetail}>\n      {tweets?.map((tweet) => (\n        <TweetListItem\n          key={tweet.id_str}\n          tweet={tweet}\n          fetcher={props.fetcher}\n          maxCommentDigits={maxCDigits}\n          maxFavDigits={maxFavDigits}\n          maxRTDigits={maxRTDigits}\n          millifyState={millifyState}\n          withDetail={isShowingDetail}\n        />\n      ))}\n    </List>\n  );\n}\n", "import { getPreferenceValues } from \"@raycast/api\";\nimport { useEffect, useState } from \"react\";\nimport { AccountSettingsV1, TweetV1, TwitterApi } from \"twitter-api-v2\";\nimport { getErrorMessage } from \"../../utils\";\n\nfunction createClient(): TwitterApi {\n  const pref = getPreferenceValues();\n  const appKey = (pref.appkey as string) || \"\";\n  const appSecret = (pref.appsecret as string) || \"\";\n  const accessToken = (pref.accesstoken as string) || \"\";\n  const accessSecret = (pref.accesssecret as string) || \"\";\n  const client = new TwitterApi({\n    appKey: appKey,\n    appSecret: appSecret,\n    accessToken: accessToken,\n    accessSecret: accessSecret,\n  });\n  return client;\n}\n\nlet _twitterClient: TwitterApi | null = null;\n\nexport function twitterClient(): TwitterApi {\n  if (!_twitterClient) {\n    _twitterClient = createClient();\n  }\n  return _twitterClient;\n}\n\nlet activeAccount: AccountSettingsV1 | undefined;\n\nexport async function loggedInUserAccount(): Promise<AccountSettingsV1> {\n  if (!activeAccount) {\n    const account = await twitterClient().v1.accountSettings();\n    activeAccount = account;\n  }\n  return activeAccount;\n}\n\nexport async function refreshTweets(tweets?: TweetV1[]): Promise<TweetV1[] | undefined> {\n  if (tweets) {\n    const tweetIds = tweets.map((t) => t.id_str);\n    const unorderedFreshTweets = await twitterClient().v1.tweets(tweetIds);\n\n    const freshTweets: TweetV1[] = [];\n    for (const tid of tweetIds) {\n      const t = unorderedFreshTweets.find((t) => tid === t.id_str);\n      if (t) {\n        freshTweets.push(t);\n      }\n    }\n    return freshTweets;\n  } else {\n    return undefined;\n  }\n}\n\nexport async function refreshTweet(tweet: TweetV1): Promise<TweetV1 | undefined> {\n  const tweets = await refreshTweets([tweet]);\n  if (tweets && tweets.length === 1) {\n    return tweets[0];\n  }\n  return undefined;\n}\n\nexport interface Fetcher {\n  updateInline: () => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useRefresher<T>(\n  fn: (updateInline: boolean) => Promise<T>,\n  deps?: React.DependencyList | undefined,\n): {\n  data: T | undefined;\n  error?: string;\n  isLoading: boolean;\n  fetcher: Fetcher;\n} {\n  const [data, setData] = useState<T>();\n  const [error, setError] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [timestamp, setTimestamp] = useState<Date>(new Date());\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const depsAll: any[] = [timestamp];\n  if (deps) {\n    for (const d of deps) {\n      depsAll.push(d);\n    }\n  }\n  let cancel = false;\n\n  const fetcher: Fetcher = {\n    updateInline: async () => {\n      await fetchData(true);\n    },\n    refresh: async () => {\n      setTimestamp(new Date());\n    },\n  };\n\n  async function fetchData(updateInline = false) {\n    if (cancel) {\n      return;\n    }\n\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const data = await fn(updateInline);\n      if (!cancel) {\n        setData(data);\n      }\n    } catch (e) {\n      if (!cancel) {\n        setError(getErrorMessage(e));\n      }\n    } finally {\n      if (!cancel) {\n        setIsLoading(false);\n      }\n    }\n  }\n  useEffect(() => {\n    fetchData();\n\n    return () => {\n      cancel = true;\n    };\n  }, depsAll);\n\n  return { data, error, isLoading, fetcher };\n}\n\nexport function getPhotoUrlFromTweet(tweet: TweetV1): string | undefined {\n  const media = tweet.entities.media;\n  if (media) {\n    for (const m of media) {\n      if (m.type === \"photo\" && m.media_url_https) {\n        return m.media_url_https;\n      }\n    }\n  }\n  return undefined;\n}\n", "import { Action, ActionPanel, Color, Icon, Image, showToast, Toast } from \"@raycast/api\";\nimport { useEffect, useState } from \"react\";\nimport { TweetV1 } from \"twitter-api-v2\";\nimport { loggedInUserAccount, twitterClient, Fetcher } from \"../lib/twitterapi\";\nimport { getErrorMessage } from \"../../utils\";\nimport { TweetSendForm } from \"./send\";\nimport { TweetDetail } from \"./tweet\";\nimport { UserTweetList } from \"./usertweets\";\nimport { XIcon } from \"../../icon\";\n\nexport function ShowTweetAction(props: { tweet: TweetV1 }) {\n  return (\n    <Action.Push\n      title=\"Show Tweet\"\n      target={<TweetDetail tweet={props.tweet} />}\n      icon={{ source: Icon.List, tintColor: Color.PrimaryText }}\n    />\n  );\n}\n\nexport function ReplyTweetAction(props: { tweet: TweetV1 }) {\n  return (\n    <Action.Push\n      title=\"Reply\"\n      target={<TweetSendForm replyTweet={props.tweet} />}\n      icon={{ source: Icon.Bubble, tintColor: Color.PrimaryText }}\n      shortcut={{ modifiers: [\"cmd\"], key: \"w\" }}\n    />\n  );\n}\n\nexport function DeleteTweetAction(props: { tweet: TweetV1 }) {\n  const [user, setUser] = useState<string | undefined>();\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const u = await loggedInUserAccount();\n        setUser(u.screen_name);\n      } catch (error) {\n        // ignore\n      }\n    }\n    fetch();\n  }, []);\n  const t = props.tweet;\n  const deleteTweet = async () => {\n    try {\n      const account = await loggedInUserAccount();\n      if (account.screen_name !== t.user.screen_name) {\n        throw Error(\"You can only delete your own Tweets\");\n      }\n      await twitterClient().v1.deleteTweet(t.id_str);\n      showToast({ style: Toast.Style.Success, title: \"Tweet deleted\", message: \"Tweet deletion successful\" });\n    } catch (error) {\n      showToast({ style: Toast.Style.Failure, title: \"Could not delete Tweet\", message: getErrorMessage(error) });\n    }\n  };\n  if (user === t.user.screen_name) {\n    return (\n      <Action title=\"Delete Tweet\" icon={{ source: Icon.XMarkCircle, tintColor: Color.Red }} onAction={deleteTweet} />\n    );\n  } else {\n    return null;\n  }\n}\n\nexport function RetweetAction(props: { tweet: TweetV1; fetcher?: Fetcher }) {\n  const t = props.tweet;\n  const cmd = t.retweeted ? \"unretweet\" : \"retweet\";\n  const title = t.retweeted ? \"Unretweet\" : \"Retweet\";\n  const icon: Image.ImageLike = t.retweeted\n    ? { source: \"retweet.png\", tintColor: Color.Green }\n    : { source: \"retweet.png\", tintColor: Color.PrimaryText };\n  const retweet = async () => {\n    try {\n      await twitterClient().v1.post(`statuses/${cmd}/${t.id_str}.json`);\n      showToast({ style: Toast.Style.Success, title: \"Retweet successful\", message: \"Retweet creation successful\" });\n      if (props.fetcher) {\n        await props.fetcher.updateInline();\n      }\n    } catch (error) {\n      showToast({ style: Toast.Style.Failure, title: \"Could not retweet\", message: getErrorMessage(error) });\n    }\n  };\n  return <Action title={title} icon={icon} onAction={retweet} shortcut={{ modifiers: [\"cmd\"], key: \"t\" }} />;\n}\n\nexport function LikeAction(props: { tweet: TweetV1; fetcher?: Fetcher }) {\n  const t = props.tweet;\n  const cmd = t.favorited ? \"destroy\" : \"create\";\n  const title = t.favorited ? \"Undo Like\" : \"Like\";\n  const icon: Image.ImageLike = t.favorited\n    ? { source: \"heart_full.png\", tintColor: Color.Red }\n    : { source: \"heart_empty.png\", tintColor: Color.PrimaryText };\n  const retweet = async () => {\n    try {\n      await twitterClient().v1.post(`favorites/${cmd}.json`, { id: t.id_str });\n      showToast({ style: Toast.Style.Success, title: `${title} successful`, message: `${title} operation successful` });\n      if (props.fetcher) {\n        await props.fetcher.updateInline();\n      }\n    } catch (error) {\n      showToast({ style: Toast.Style.Failure, title: `${title} failed`, message: getErrorMessage(error) });\n    }\n  };\n  return <ActionPanel.Item title={title} shortcut={{ modifiers: [\"cmd\"], key: \"l\" }} icon={icon} onAction={retweet} />;\n}\n\nexport function OpenAuthorProfileAction(props: { tweet: TweetV1 }) {\n  return (\n    <Action.OpenInBrowser\n      title=\"Open Author Profile\"\n      url={`https://twitter.com/${props.tweet.user.screen_name}`}\n      icon={{ source: Icon.Person, tintColor: Color.PrimaryText }}\n    />\n  );\n}\n\nexport function RefreshInlineAction(props: { fetcher?: Fetcher }) {\n  const handle = async () => {\n    if (props.fetcher) {\n      await props.fetcher.updateInline();\n    }\n  };\n  return (\n    <Action\n      title=\"Refresh Existing Tweets\"\n      shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"r\" }}\n      icon={{ source: Icon.Download, tintColor: Color.PrimaryText }}\n      onAction={handle}\n    />\n  );\n}\n\nexport function RefreshAction(props: { title?: string; fetcher?: Fetcher }) {\n  const handle = async () => {\n    if (props.fetcher) {\n      await props.fetcher.refresh();\n    }\n  };\n  const title = props.title ? props.title : \"Refresh Tweets\";\n  return (\n    <Action\n      title={title}\n      shortcut={{ modifiers: [\"cmd\"], key: \"r\" }}\n      icon={{ source: Icon.Binoculars, tintColor: Color.PrimaryText }}\n      onAction={handle}\n    />\n  );\n}\n\nexport function ShowUserTweetsAction(props: { username: string; title?: string }) {\n  return (\n    <Action.Push\n      title={props.title || `Tweets from @${props.username}`}\n      shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"a\" }}\n      icon={XIcon()}\n      target={<UserTweetList username={props.username} />}\n    />\n  );\n}\n", "import { Action, ActionPanel, Color, confirmAlert, Form, Icon, popToRoot, showToast, Toast } from \"@raycast/api\";\nimport { Fragment, ReactElement, useState } from \"react\";\nimport { TweetV1 } from \"twitter-api-v2\";\nimport { twitterClient } from \"../lib/twitterapi\";\nimport { getErrorMessage } from \"../../utils\";\nimport { XIcon } from \"../../icon\";\n\ninterface TweetFormValues {\n  text: string;\n}\n\nasync function submit(values: TweetFormValues, replyTweet?: TweetV1 | undefined) {\n  try {\n    const text = values.text;\n    if (text.length <= 0) {\n      throw Error(\"Please enter a text\");\n    }\n    if (text.length > 280) {\n      throw Error(\"Tweet text could not be longer than 280 characters\");\n    }\n    if (replyTweet) {\n      await twitterClient().v1.reply(text, replyTweet.id_str);\n      await showToast({\n        style: Toast.Style.Success,\n        title: \"Tweet created\",\n        message: \"Reply Tweet creation successful\",\n      });\n    } else {\n      await twitterClient().v1.tweet(text);\n      await showToast({ style: Toast.Style.Success, title: \"Tweet created\", message: \"Tweet creation successful\" });\n    }\n    popToRoot();\n  } catch (error) {\n    await showToast({ style: Toast.Style.Failure, title: \"Error\", message: getErrorMessage(error) });\n  }\n}\n\nfunction TweetLengthCounter(props: { text: string }): ReactElement | null {\n  const t = props.text;\n  const isValid = validTweetText(t);\n  return <Form.Description text={`${t.length}/280 ${isValid ? \"\u2705\" : \"\u274C\"}`} />;\n}\n\nexport function TweetSendForm(props: { replyTweet?: TweetV1 | undefined }) {\n  const rt = props.replyTweet;\n  const submitText = rt ? \"Send Reply\" : \"Send Tweet\";\n  const fromTitle = rt ? \"Reply\" : \"Tweet\";\n  const placeholder = rt ? \"Tweet your reply\" : \"What's happening?\";\n  const [text, setText] = useState<string>(\"\");\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          {text.length > 0 && text.length <= 280 && (\n            <Action.SubmitForm title={submitText} onSubmit={(values: TweetFormValues) => submit(values, rt)} />\n          )}\n        </ActionPanel>\n      }\n    >\n      <Form.TextArea id=\"text\" title={fromTitle} placeholder={placeholder} onChange={setText} />\n      <TweetLengthCounter text={text} />\n    </Form>\n  );\n}\n\ninterface TweetContent {\n  text: string;\n}\n\nfunction TweetFragment(props: {\n  content: TweetContent;\n  index: number;\n  onTextChange: (text: string, index: number) => void;\n}): ReactElement {\n  const index = props.index;\n  const content = props.content;\n  const placeholder = index === 0 ? \"What's happening?\" : \"Another Tweet\";\n  return (\n    <Fragment>\n      <Form.TextArea\n        id={`${index}`}\n        title={`Tweet ${index > 0 ? index + 1 : \"\"}`}\n        placeholder={placeholder}\n        value={content.text}\n        onChange={(newtext) => props.onTextChange(newtext, index)}\n      />\n      <TweetLengthCounter text={content.text} />\n    </Fragment>\n  );\n}\n\nfunction validTweetText(text: string): boolean {\n  const l = text.length;\n  if (l < 1 || l > 280) {\n    return false;\n  }\n  return true;\n}\n\nfunction validTweet(content: TweetContent): boolean {\n  return validTweetText(content.text);\n}\n\nfunction validTweets(tweets: TweetContent[]): boolean {\n  if (tweets.length < 1) {\n    return false;\n  }\n  for (const t of tweets) {\n    if (!validTweet(t)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nasync function submitTweets(tweets: TweetContent[]) {\n  try {\n    if (!validTweets(tweets)) {\n      await showToast({ style: Toast.Style.Failure, title: \"Invalid Tweet\", message: \"Tweets are not valid\" });\n      return;\n    }\n    if (tweets.length === 1) {\n      const t = tweets[0];\n      await twitterClient().v1.tweet(t.text);\n      await showToast({ style: Toast.Style.Success, title: \"Tweet created\", message: \"Tweet creation successful\" });\n      popToRoot();\n    } else {\n      const tweetTexts: string[] = tweets.map((t) => t.text);\n      await twitterClient().v1.tweetThread(tweetTexts);\n      await showToast({ style: Toast.Style.Success, title: \"Thread created\", message: \"Thread creation successful\" });\n      popToRoot();\n    }\n  } catch (error) {\n    await showToast({ style: Toast.Style.Failure, title: \"Error\", message: getErrorMessage(error) });\n  }\n}\n\nexport function TweetSendThreadForm(): ReactElement {\n  const [tweets, setTweets] = useState<TweetContent[]>([{ text: \"\" }]);\n  const addTweet = () => {\n    const nt = [...tweets, { text: \"\" }];\n    setTweets(nt);\n  };\n  const submitText = tweets && tweets.length > 1 ? \"Send Thread\" : \"Send Tweet\";\n  const removeTweet = async () => {\n    if (tweets.length > 1) {\n      const lt = tweets[tweets.length - 1];\n      let remove = true;\n      if (lt.text.length > 0) {\n        remove = await confirmAlert({\n          title: \"Really remove last Tweet?\",\n          message: \"You last tweet contain content, it will get lost\",\n          icon: \"\u26A0\uFE0F\",\n        });\n      }\n      if (remove) {\n        const nt = [...tweets];\n        nt.pop();\n        setTweets(nt);\n      }\n    }\n  };\n  const updateTweet = (text: string, index: number) => {\n    const nt = [...tweets];\n    nt[index].text = text;\n    setTweets(nt);\n  };\n  const addTweetNumber = () => {\n    const nt = [...tweets];\n    for (let i = 0; i < nt.length; i++) {\n      nt[i].text += ` ${i + 1}/${nt.length}`;\n    }\n    setTweets(nt);\n  };\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <ActionPanel.Section>\n            {validTweets(tweets) && (\n              <Action.SubmitForm title={submitText} icon={XIcon()} onSubmit={() => submitTweets(tweets)} />\n            )}\n          </ActionPanel.Section>\n          <ActionPanel.Section title=\"Thread\">\n            <Action\n              title=\"Add Tweet\"\n              onAction={addTweet}\n              icon={{ source: Icon.Plus, tintColor: Color.PrimaryText }}\n              shortcut={{ modifiers: [\"cmd\"], key: \"+\" }}\n            />\n            {tweets.length > 1 && (\n              <Action\n                title=\"Remove Last Tweet\"\n                onAction={removeTweet}\n                icon={{ source: Icon.Trash, tintColor: Color.Red }}\n                shortcut={{ modifiers: [\"cmd\"], key: \"-\" }}\n              />\n            )}\n            {tweets.length > 1 && (\n              <Action\n                title=\"Add Tweet Numbers\"\n                onAction={addTweetNumber}\n                icon={Icon.Document}\n                shortcut={{ modifiers: [\"cmd\"], key: \"n\" }}\n              />\n            )}\n          </ActionPanel.Section>\n        </ActionPanel>\n      }\n    >\n      {tweets.map((t, index) => (\n        <TweetFragment key={index} index={index} content={t} onTextChange={updateTweet} />\n      ))}\n    </Form>\n  );\n}\n", "import { Action, ActionPanel, Icon, List } from \"@raycast/api\";\nimport { ReactElement, useState } from \"react\";\nimport { URL } from \"url\";\nimport { XIcon } from \"../../icon\";\n\nfunction OpenSearchInBrowserAction(props: { search: string }): ReactElement {\n  const url = new URL(\"https://twitter.com/search\");\n  url.searchParams.append(\"q\", props.search);\n  url.searchParams.append(\"f\", \"user\");\n  return <Action.OpenInBrowser title=\"Search on Twitter.com\" icon={XIcon()} url={url.href} />;\n}\n\nfunction ListItemSearch(props: { search: string | undefined }): ReactElement | null {\n  const s = props.search;\n  if (!s || s.length <= 0) {\n    return null;\n  }\n  return (\n    <List.Item\n      title={`Search '${s}' on twitter.com`}\n      icon={XIcon()}\n      actions={\n        <ActionPanel>\n          <OpenSearchInBrowserAction search={s} />\n        </ActionPanel>\n      }\n    />\n  );\n}\n\nexport function SearchUserListV2(): ReactElement {\n  const [search, setSearch] = useState<string>();\n  // INFO search user via twitter.com because twitter v2 has no endpoint for user search\n  return (\n    <List\n      searchText={search}\n      onSearchTextChange={setSearch}\n      searchBarPlaceholder=\"Search Users by Name or Handle (e.g. @tonka_2000 or Michael Aigner)\"\n    >\n      <ListItemSearch search={search} />\n      <List.EmptyView icon={Icon.Person} title=\"Search for a User on X.com\" />\n    </List>\n  );\n}\n"],
  "mappings": "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",
  "names": ["require_globals", "__commonJSMin", "exports", "require_TwitterPaginator", "__commonJSMin", "exports", "TwitterPaginator", "realData", "rateLimit", "instance", "queryParams", "sharedParams", "result", "maxResults", "count", "resultCount", "response", "_a", "paginator", "canFetchNextPage", "next", "item", "PreviousableTwitterPaginator", "require_paginator_v1", "__commonJSMin", "exports", "__importDefault", "mod", "TwitterPaginator_1", "CursoredV1Paginator", "maxResults", "_a", "result", "value", "require_dm_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "DmEventsV1Paginator", "response", "isNextPage", "result", "WelcomeDmV1Paginator", "require_streaming_v1_types", "__commonJSMin", "exports", "require_tweet_v1_types", "__commonJSMin", "exports", "EUploadMimeType", "require_entities_v1_types", "__commonJSMin", "exports", "require_user_v1_types", "__commonJSMin", "exports", "require_dev_utilities_v1_types", "__commonJSMin", "exports", "require_geo_v1_types", "__commonJSMin", "exports", "require_trends_v1_types", "__commonJSMin", "exports", "require_dm_v1_types", "__commonJSMin", "exports", "EDirectMessageEventTypeV1", "require_list_v1_types", "__commonJSMin", "exports", "require_v1", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_streaming_v2_types", "__commonJSMin", "exports", "require_tweet_v2_types", "__commonJSMin", "exports", "require_tweet_definition_v2", "__commonJSMin", "exports", "require_user_v2_types", "__commonJSMin", "exports", "require_spaces_v2_types", "__commonJSMin", "exports", "require_list_v2_types", "__commonJSMin", "exports", "require_v2", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_errors_types", "__commonJSMin", "exports", "ETwitterApiError", "ApiError", "ApiRequestError", "message", "options", "ApiPartialResponseError", "ApiResponseError", "data", "EApiV1ErrorCode", "codes", "errors", "error", "v2error", "_a", "EApiV2ErrorCode", "require_responses_types", "__commonJSMin", "exports", "require_client_types", "__commonJSMin", "exports", "ETwitterStreamEvent", "require_auth_types", "__commonJSMin", "exports", "require_client_plugins_types", "__commonJSMin", "exports", "TwitterApiPluginResponseOverride", "value", "require_plugins", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_types", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_settings", "__commonJSMin", "exports", "require_helpers", "__commonJSMin", "exports", "settings_1", "sharedPromise", "getter", "val", "arrayWrap", "value", "trimUndefinedProperties", "object", "parameter", "isTweetStreamV2ErrorPayload", "payload", "hasMultipleItems", "item", "deprecationWarningsCache", "safeDeprecationWarning", "message", "hash", "formattedMsg", "require_request_handler_helper", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "__importDefault", "https_1", "settings_1", "TweetStream_1", "types_1", "zlib", "events_1", "RequestHandlerHelper", "requestData", "url", "error", "abortClose", "message", "errors", "code", "res", "data", "rateLimit", "_a", "errorString", "contentEncoding", "brotli", "gunzip", "inflate", "_b", "mode", "asText", "formEntries", "item", "value", "reject", "cleanupListener", "socket", "onClose", "requestError", "resolve", "dataStream", "chunk", "e", "key", "auth", "headers", "req", "withError", "_resolve", "_reject", "originalResponse", "require_TweetStreamEventCombiner", "__commonJSMin", "exports", "events_1", "types_1", "TweetStreamEventCombiner", "stream", "stack", "type", "payload", "require_TweetStreamParser", "__commonJSMin", "exports", "events_1", "TweetStreamParser", "chunk", "size", "start", "offset", "piece", "payload", "EStreamParserEvent", "error", "require_TweetStream", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "__importDefault", "events_1", "request_handler_helper_1", "types_1", "TweetStreamEventCombiner_1", "TweetStreamParser_1", "basicRetriesAttempt", "basicReconnectRetry", "tryOccurrence", "TweetStream", "requestData", "connection", "event", "handler", "errorHandler", "err", "chunk", "payloadIsError", "eventData", "error", "newStream", "listenerNames", "listener", "callbacks", "callback", "options", "e", "initialConnection", "req", "res", "originalResponse", "retryOccurrence", "nextRetry", "eventCombiner", "type", "payload", "require_helpers", "__commonJSMin", "exports", "types_1", "hasRequestErrorPlugins", "client", "_a", "plugin", "applyResponseHooks", "requestParams", "computedParams", "requestOptions", "error", "override", "require_oauth1_helper", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "crypto", "OAuth1Helper", "options", "str", "base", "key", "request", "accessTokens", "oauthInfo", "sorted", "sortObject", "header_value", "element", "wordCharacters", "i", "tokenSecret", "baseStringData", "percentEncodeData", "mergeObject", "deParamUrl", "dataStr", "value", "valString", "item", "url", "obj1", "obj2", "data", "deParam", "string", "split", "coupleKeyValue", "tmp", "require_form_data_helper", "__commonJSMin", "exports", "helpers_1", "FormDataHelper", "values", "allAsBuffer", "val", "field", "value", "contentType", "convertedValue", "header", "acc", "cur", "allChunks", "totalBuffer", "i", "chunk", "j", "boundary", "headers", "contents", "prop", "require_request_param_helper", "__commonJSMin", "exports", "__importDefault", "mod", "form_data_helper_1", "oauth1_helper_1", "RequestParamHelpers", "query", "formattedQuery", "prop", "url", "endpoint", "queryEntries", "search", "key", "value", "body", "headers", "mode", "form", "parameter", "formHeaders", "options", "_a", "item", "parameters", "bodyProp", "param", "fullMatch", "paramName", "require_oauth2_helper", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "crypto", "OAuth2Helper", "verifier", "clientId", "clientSecret", "key", "length", "text", "possible", "string", "require_request_maker_mixin", "__commonJSMin", "exports", "__importDefault", "mod", "types_1", "TweetStream_1", "helpers_1", "helpers_2", "oauth1_helper_1", "request_handler_helper_1", "request_param_helper_1", "oauth2_helper_1", "ClientRequestMaker", "settings", "originalUrl", "rateLimit", "requestParams", "_a", "_b", "_c", "_d", "_e", "possibleResponse", "args", "options", "enableRateLimitSave", "request", "response", "responseOverride", "enableAutoConnect", "requestData", "stream", "token", "key", "method", "returnValue", "plugin", "value", "headers", "bodyInSignature", "url", "query", "body", "data", "auth", "stringUrl", "rawQuery", "rawBody", "forceBodyMode", "enableAuth", "params", "rawUrl", "bodyType", "result", "computedParams", "requestOptions", "promise", "require_client_base", "__commonJSMin", "exports", "request_maker_mixin_1", "helpers_1", "globals_1", "TwitterApiBase", "token", "settings", "prefix", "clone", "type", "plugin", "endpoint", "_a", "rateLimit", "endpointWithPrefix", "forceFetch", "url", "query", "fullResponse", "rest", "resp", "body", "require_client_subclient", "__commonJSMin", "exports", "__importDefault", "mod", "client_base_1", "TwitterApiSubClient", "instance", "require_tweet_paginator_v1", "__commonJSMin", "exports", "__importDefault", "mod", "TwitterPaginator_1", "TweetTimelineV1Paginator", "response", "isNextPage", "result", "maxResults", "latestId", "HomeTimelineV1Paginator", "MentionTimelineV1Paginator", "UserTimelineV1Paginator", "ListTimelineV1Paginator", "UserFavoritesV1Paginator", "require_mutes_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "MuteUserListV1Paginator", "response", "isNextPage", "result", "MuteUserIdsV1Paginator", "require_followers_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "UserFollowerListV1Paginator", "response", "isNextPage", "result", "UserFollowerIdsV1Paginator", "require_friends_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "UserFriendListV1Paginator", "response", "isNextPage", "result", "UserFollowersIdsV1Paginator", "require_user_paginator_v1", "__commonJSMin", "exports", "__importDefault", "mod", "TwitterPaginator_1", "paginator_v1_1", "UserSearchV1Paginator", "response", "isNextPage", "result", "maxResults", "_a", "previousPage", "FriendshipsIncomingV1Paginator", "FriendshipsOutgoingV1Paginator", "require_list_paginator_v1", "__commonJSMin", "exports", "paginator_v1_1", "ListListsV1Paginator", "response", "isNextPage", "result", "ListMembershipsV1Paginator", "ListOwnershipsV1Paginator", "ListSubscriptionsV1Paginator", "ListUsersV1Paginator", "ListMembersV1Paginator", "ListSubscribersV1Paginator", "require_client_v1_read", "__commonJSMin", "exports", "__importDefault", "mod", "client_subclient_1", "globals_1", "helpers_1", "client_v1_1", "tweet_paginator_v1_1", "mutes_paginator_v1_1", "followers_paginator_v1_1", "friends_paginator_v1_1", "user_paginator_v1_1", "list_paginator_v1_1", "TwitterApiv1ReadOnly", "tweetId", "options", "ids", "queryParams", "initialRq", "userId", "username", "user", "query", "sources", "friendships", "params", "mediaId", "autoConnect", "parameters", "key", "value", "locations", "loc", "copiedClient", "woeId", "lat", "long", "placeId", "resources", "require_media_helpers_v1", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "fs", "helpers_1", "types_1", "readFileIntoBuffer", "file", "handle", "getFileHandle", "resolve", "reject", "err", "data", "getFileSizeFromFileHandle", "fileHandle", "stats", "getMimeType", "type", "mimeType", "getMimeByName", "getMimeByType", "name", "getMediaCategoryByMime", "target", "sleepSecs", "seconds", "readNextPartOf", "chunkLength", "bufferOffset", "buffer", "rt", "bytesRead", "nread", "require_client_v1_write", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "mod", "result", "__importDefault", "fs", "globals_1", "helpers_1", "types_1", "client_v1_read_1", "media_helpers_v1_1", "UPLOAD_ENDPOINT", "TwitterApiv1ReadWrite", "status", "payload", "queryParams", "quotingStatusId", "url", "tweets", "postedTweets", "tweet", "lastTweet", "inReplyToId", "in_reply_to_status_id", "tweetId", "options", "file", "endpoint", "mediaId", "metadata", "subtitles", "languages", "lang", "returnFullMediaData", "_a", "chunkLength", "fileHandle", "mediaCategory", "fileSize", "mimeType", "mediaData", "fullMediaData", "processing_info", "name", "message", "type", "target", "longVideo", "realMimeType", "e", "maxConcurrentUploads", "chunkIndex", "buffer", "readBuffer", "nread", "offset", "currentUploads", "mediaBufferPart", "request", "require_client_v1", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "dm_paginator_v1_1", "types_1", "client_v1_write_1", "TwitterApiv1", "recipient_id", "custom_profile_id", "params", "args", "id", "queryParams", "initialRq", "name", "data", "welcomeMessageId", "deleteAssociatedWelcomeDmWhenDeletingRule", "_a", "existingRules", "rule", "lastEventId", "recipientId", "urlOrDm", "attachment", "require_includes_v2_helper", "__commonJSMin", "exports", "TwitterV2IncludesHelper", "result", "_a", "_b", "id", "tweet", "retweetIds", "ref", "t", "quoteIds", "repliesIds", "authorId", "u", "inReplyUserId", "user", "keys", "m", "pollIds", "pollId", "p", "placeId", "list", "creatorId", "space", "hostIds", "speakerIds", "invitedUserIds", "require_v2_paginator", "__commonJSMin", "exports", "includes_v2_helper_1", "TwitterPaginator_1", "TwitterV2Paginator", "data", "includesRealData", "includeKey", "includeArray", "_a", "TimelineV2Paginator", "response", "isNextPage", "result", "resultData", "maxResults", "_b", "require_tweet_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "TweetTimelineV2Paginator", "response", "isNextPage", "_a", "result", "resultData", "maxResults", "params", "_b", "dateStr", "TWITTER_START_EPOCH", "date", "TweetPaginableTimelineV2Paginator", "TweetSearchRecentV2Paginator", "TweetSearchAllV2Paginator", "QuotedTweetsTimelineV2Paginator", "TweetHomeTimelineV2Paginator", "TweetUserTimelineV2Paginator", "TweetUserMentionTimelineV2Paginator", "TweetBookmarksTimelineV2Paginator", "TweetListV2Paginator", "TweetV2UserLikedTweetsPaginator", "TweetV2ListTweetsPaginator", "require_user_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "UserTimelineV2Paginator", "_a", "UserBlockingUsersV2Paginator", "UserMutingUsersV2Paginator", "UserFollowersV2Paginator", "UserFollowingV2Paginator", "UserListMembersV2Paginator", "UserListFollowersV2Paginator", "TweetLikingUsersV2Paginator", "TweetRetweetersUsersV2Paginator", "require_list_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "ListTimelineV2Paginator", "_a", "UserOwnedListsV2Paginator", "UserListMembershipsV2Paginator", "UserListFollowedV2Paginator", "require_paginators", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_client_v2_labs_read", "__commonJSMin", "exports", "__importDefault", "mod", "client_subclient_1", "globals_1", "TwitterApiv2LabsReadOnly", "require_dm_paginator_v2", "__commonJSMin", "exports", "v2_paginator_1", "DMTimelineV2Paginator", "_a", "FullDMTimelineV2Paginator", "OneToOneDMTimelineV2Paginator", "ConversationDMTimelineV2Paginator", "require_client_v2_read", "__commonJSMin", "exports", "__importDefault", "mod", "client_subclient_1", "globals_1", "paginators_1", "client_v2_labs_read_1", "user_paginator_v2_1", "helpers_1", "dm_paginator_v2_1", "TwitterApiv2ReadOnly", "queryOrOptions", "options", "queryParams", "initialRq", "query", "tweetId", "tweetIds", "asPaginator", "parameters", "meUser", "userId", "user", "userIds", "ids", "username", "usernames", "params", "id", "listId", "participantId", "dmConversationId", "spaceId", "spaceIds", "creatorIds", "autoConnect", "jobId", "jobParams", "job", "rawIdsBody", "runningJob", "resolve", "line", "require_client_v2_labs_write", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_labs_read_1", "TwitterApiv2LabsReadWrite", "require_client_v2_write", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_read_1", "client_v2_labs_write_1", "TwitterApiv2ReadWrite", "tweetId", "makeHidden", "loggedUserId", "targetTweetId", "status", "payload", "toTweetId", "_a", "reply", "quotedTweetId", "tweets", "_b", "postedTweets", "tweet", "lastTweet", "queryParams", "inReplyToId", "user", "targetUserId", "options", "listId", "userId", "conversationId", "message", "participantId", "require_client_v2_labs", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_labs_write_1", "TwitterApiv2Labs", "require_client_v2", "__commonJSMin", "exports", "__importDefault", "mod", "globals_1", "client_v2_write_1", "client_v2_labs_1", "TwitterApiv2", "require_readonly", "__commonJSMin", "exports", "__importDefault", "mod", "_1", "client_base_1", "client_v1_read_1", "client_v2_read_1", "oauth2_helper_1", "request_param_helper_1", "TwitterApiReadOnly", "forceFetch", "what", "options", "oauth_callback", "authAccessType", "linkMode", "forceLogin", "screenName", "oauthResult", "url", "oauth_verifier", "tokens", "oauth_result", "client", "res", "redirectUri", "_a", "_b", "state", "codeVerifier", "codeChallenge", "rawScope", "scope", "query", "result", "code", "accessTokenResult", "refreshToken", "token", "tokenType", "e", "require_readwrite", "__commonJSMin", "exports", "__importDefault", "mod", "client_v1_write_1", "client_v2_write_1", "readonly_1", "TwitterApiReadWrite", "require_client", "__commonJSMin", "exports", "__importDefault", "mod", "client_v1_1", "client_v2_1", "readwrite_1", "TwitterApi", "error", "_a", "profileImageUrl", "size", "lastPart", "sizes", "originalUrl", "availableSize", "extPos", "ext", "readwrite_2", "readonly_1", "require_cjs", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "__importDefault", "mod", "client_1", "user_search_exports", "__export", "UserSearchRoot", "__toCommonJS", "import_api", "import_api", "XIcon", "oauthClient", "XIcon", "shouldShowListWithDetails", "val", "useV2", "import_api", "import_react", "import_api", "getErrorMessage", "error", "padStart", "str", "length", "fmt", "compactNumberFormat", "num", "import_api", "import_api", "import_api", "import_api", "import_react", "import_twitter_api_v2", "createClient", "pref", "appKey", "appSecret", "accessToken", "accessSecret", "_twitterClient", "twitterClient", "activeAccount", "loggedInUserAccount", "refreshTweets", "tweets", "tweetIds", "t", "unorderedFreshTweets", "freshTweets", "tid", "refreshTweet", "tweet", "useRefresher", "fn", "deps", "data", "setData", "error", "setError", "isLoading", "setIsLoading", "timestamp", "setTimestamp", "depsAll", "d", "cancel", "fetcher", "fetchData", "updateInline", "e", "getErrorMessage", "getPhotoUrlFromTweet", "media", "m", "import_api", "import_react", "import_api", "import_react", "import_jsx_runtime", "submit", "values", "replyTweet", "text", "twitterClient", "error", "getErrorMessage", "TweetLengthCounter", "props", "t", "isValid", "validTweetText", "TweetSendForm", "rt", "submitText", "fromTitle", "placeholder", "setText", "validTweetText", "text", "l", "import_jsx_runtime", "ShowTweetAction", "props", "TweetDetail", "ReplyTweetAction", "TweetSendForm", "DeleteTweetAction", "user", "setUser", "fetch", "u", "loggedInUserAccount", "t", "deleteTweet", "twitterClient", "error", "getErrorMessage", "RetweetAction", "cmd", "title", "icon", "LikeAction", "retweet", "OpenAuthorProfileAction", "RefreshInlineAction", "handle", "RefreshAction", "ShowUserTweetsAction", "XIcon", "UserTweetList", "import_jsx_runtime", "getTweetUrl", "tweet", "TweetListItem", "props", "t", "withDetail", "fetcher", "millifyState", "maxLength", "textRaw", "text", "icon", "ownFavoriteCount", "hasImage", "getPhotoUrlFromTweet", "p", "num", "length", "compactNumberFormat", "padStart", "minPadding", "maxPadding", "calcPadding", "maxReplyDigits", "maxRTDigits", "maxFavDigits", "states", "accessories", "getMarkdownFromTweet", "ShowTweetAction", "LikeAction", "ReplyTweetAction", "RetweetAction", "ShowUserTweetsAction", "OpenAuthorProfileAction", "DeleteTweetAction", "RefreshInlineAction", "RefreshAction", "getCleanTweetText", "isRetweet", "i", "imgUrl", "retweetedText", "parts", "TweetDetail", "data", "error", "isLoading", "useRefresher", "refreshTweet", "md", "TweetList", "tweets", "isShowingDetail", "shouldShowListWithDetails", "maxCDigits", "getStringLength", "lenF", "lenRT", "lenC", "import_jsx_runtime", "UserTweetList", "props", "username", "data", "error", "isLoading", "fetcher", "useRefresher", "updateInline", "refreshTweets", "getTweets", "TweetList", "usertweets", "twitterClient", "tweets", "t", "import_jsx_runtime", "ShowUserTweetsAction", "props", "UserTweetList", "XIcon", "import_jsx_runtime", "UserListItem", "props", "u", "compactNumberFormat", "ShowUserTweetsAction", "import_jsx_runtime", "UserList", "query", "setQuery", "data", "error", "isLoading", "fetcher", "useRefresher", "userdata", "twitterClient", "users", "u", "UserListItem", "import_api", "import_react", "import_url", "import_jsx_runtime", "OpenSearchInBrowserAction", "props", "url", "XIcon", "ListItemSearch", "s", "SearchUserListV2", "search", "setSearch", "import_jsx_runtime", "UserSearchRoot", "useV2", "SearchUserListV2", "UserList"]
}
